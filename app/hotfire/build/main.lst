ARM GAS  /tmp/cc6gGBHe.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "main.c"
  19              		.section	.text.main,"ax",%progbits
  20              		.align	1
  21              		.global	main
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	main:
  27              	.LFB333:
   1:main.c        **** /*******************************************************************************
   2:main.c        **** *
   3:main.c        **** * FILE: 
   4:main.c        **** * 		main.c
   5:main.c        **** *
   6:main.c        **** * DESCRIPTION: 
   7:main.c        **** * 		Initiates engine ignition, monitors sequencing, and logs engine data 
   8:main.c        **** *       during the hotfire	
   9:main.c        **** *
  10:main.c        **** *******************************************************************************/
  11:main.c        **** 
  12:main.c        **** 
  13:main.c        **** /*------------------------------------------------------------------------------
  14:main.c        ****  Standard Includes                                                                     
  15:main.c        **** ------------------------------------------------------------------------------*/
  16:main.c        **** #include <stdbool.h>
  17:main.c        **** 
  18:main.c        **** 
  19:main.c        **** /*------------------------------------------------------------------------------
  20:main.c        ****  Project Includes                                                                     
  21:main.c        **** ------------------------------------------------------------------------------*/
  22:main.c        **** 
  23:main.c        **** /* Application Layer */
  24:main.c        **** #include "main.h"
  25:main.c        **** #include "sdr_pin_defines_L0002.h"
  26:main.c        **** #include "init.h"
  27:main.c        **** #include "sdr_error.h"
  28:main.c        **** 
  29:main.c        **** /* Low-level modules */
  30:main.c        **** #include "commands.h"
  31:main.c        **** #include "ignition.h"
ARM GAS  /tmp/cc6gGBHe.s 			page 2


  32:main.c        **** #include "flash.h"
  33:main.c        **** #include "led.h"
  34:main.c        **** #include "power.h"
  35:main.c        **** #include "pressure.h"
  36:main.c        **** #include "sensor.h"
  37:main.c        **** #include "temp.h"
  38:main.c        **** #include "usb.h"
  39:main.c        **** #include "valve.h"
  40:main.c        **** #include "wireless.h"
  41:main.c        **** 
  42:main.c        **** 
  43:main.c        **** /*------------------------------------------------------------------------------
  44:main.c        ****  MCU Peripheral Handles 
  45:main.c        **** ------------------------------------------------------------------------------*/
  46:main.c        **** ADC_HandleTypeDef  hadc1;  /* Pressure transducer ADC handle */
  47:main.c        **** ADC_HandleTypeDef  hadc2;  /* Load cell ADC handle           */
  48:main.c        **** I2C_HandleTypeDef  hi2c1;  /* Thermocouple I2C handle        */
  49:main.c        **** SPI_HandleTypeDef  hspi2;  /* Flash SPI handle               */
  50:main.c        **** UART_HandleTypeDef huart1; /* USB UART handler struct        */
  51:main.c        **** UART_HandleTypeDef huart2; /* Valve controller UART handle   */
  52:main.c        **** UART_HandleTypeDef huart4; /* Wireless interface UART handle */
  53:main.c        **** 
  54:main.c        **** 
  55:main.c        **** /*------------------------------------------------------------------------------
  56:main.c        ****  Application entry point                                                      
  57:main.c        **** ------------------------------------------------------------------------------*/
  58:main.c        **** int main
  59:main.c        **** 	(
  60:main.c        ****  	void
  61:main.c        **** 	)
  62:main.c        **** {
  28              		.loc 1 62 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 8BB0     		sub	sp, sp, #44
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
  63:main.c        **** /*------------------------------------------------------------------------------
  64:main.c        ****  Local Variables                                                                  
  65:main.c        **** ------------------------------------------------------------------------------*/
  66:main.c        **** 
  67:main.c        **** /* Flash */
  68:main.c        **** HFLASH_BUFFER flash_handle;                    /* Flash API buffer handle     */
  39              		.loc 1 68 1 view .LVU1
  69:main.c        **** uint8_t       flash_buffer[ DEF_BUFFER_SIZE ]; /* Flash data buffer */
  40              		.loc 1 69 1 view .LVU2
  70:main.c        **** 
  71:main.c        **** /* Thermocouple */
  72:main.c        **** THERMO_CONFIG thermo_config;    /* Thermocouple configuration settings        */
  41              		.loc 1 72 1 view .LVU3
  73:main.c        **** 
  74:main.c        **** /* Module return codes */
ARM GAS  /tmp/cc6gGBHe.s 			page 3


  75:main.c        **** FLASH_STATUS  flash_status;     /* Status of flash operations                 */
  42              		.loc 1 75 1 view .LVU4
  76:main.c        **** THERMO_STATUS thermo_status;    /* Thermocouple status code                   */
  43              		.loc 1 76 1 view .LVU5
  77:main.c        **** 
  78:main.c        **** 
  79:main.c        **** /*------------------------------------------------------------------------------
  80:main.c        ****  MCU Initialization                                                                  
  81:main.c        **** ------------------------------------------------------------------------------*/
  82:main.c        **** HAL_Init                (); /* Reset peripherals, initialize flash interface 
  44              		.loc 1 82 1 view .LVU6
  45 0004 FFF7FEFF 		bl	HAL_Init
  46              	.LVL0:
  83:main.c        ****                                and Systick.                                   */
  84:main.c        **** SystemClock_Config      (); /* System clock                                   */
  47              		.loc 1 84 1 view .LVU7
  48 0008 FFF7FEFF 		bl	SystemClock_Config
  49              	.LVL1:
  85:main.c        **** PeriphCommonClock_Config(); /* Shared peripheral clocks                       */
  50              		.loc 1 85 1 view .LVU8
  51 000c FFF7FEFF 		bl	PeriphCommonClock_Config
  52              	.LVL2:
  86:main.c        **** GPIO_Init               (); /* GPIO                                           */
  53              		.loc 1 86 1 view .LVU9
  54 0010 FFF7FEFF 		bl	GPIO_Init
  55              	.LVL3:
  87:main.c        **** USB_UART_Init           (); /* USB UART                                       */
  56              		.loc 1 87 1 view .LVU10
  57 0014 FFF7FEFF 		bl	USB_UART_Init
  58              	.LVL4:
  88:main.c        **** Valve_UART_Init         (); /* Valve control UART                             */
  59              		.loc 1 88 1 view .LVU11
  60 0018 FFF7FEFF 		bl	Valve_UART_Init
  61              	.LVL5:
  89:main.c        **** Wireless_UART_Init      (); /* Wireless interface UART                        */
  62              		.loc 1 89 1 view .LVU12
  63 001c FFF7FEFF 		bl	Wireless_UART_Init
  64              	.LVL6:
  90:main.c        **** FLASH_SPI_Init          (); /* Flash SPI Bus                                  */
  65              		.loc 1 90 1 view .LVU13
  66 0020 FFF7FEFF 		bl	FLASH_SPI_Init
  67              	.LVL7:
  91:main.c        **** PRESSURE_ADC_Init       (); /* Pressure transducers ADC                       */
  68              		.loc 1 91 1 view .LVU14
  69 0024 FFF7FEFF 		bl	PRESSURE_ADC_Init
  70              	.LVL8:
  92:main.c        **** LOADCELL_ADC_Init       (); /* Load Cell ADC                                  */
  71              		.loc 1 92 1 view .LVU15
  72 0028 FFF7FEFF 		bl	LOADCELL_ADC_Init
  73              	.LVL9:
  93:main.c        **** Thermocouple_I2C_Init   (); /* Thermocouple I2C                               */
  74              		.loc 1 93 1 view .LVU16
  75 002c FFF7FEFF 		bl	Thermocouple_I2C_Init
  76              	.LVL10:
  94:main.c        **** 
  95:main.c        **** 
  96:main.c        **** /*------------------------------------------------------------------------------
ARM GAS  /tmp/cc6gGBHe.s 			page 4


  97:main.c        ****  Variable Initializations 
  98:main.c        **** ------------------------------------------------------------------------------*/
  99:main.c        **** 
 100:main.c        **** /* Flash Buffer */
 101:main.c        **** flash_handle.write_protected       = FLASH_WP_WRITE_ENABLED;
  77              		.loc 1 101 1 view .LVU17
  78              		.loc 1 101 36 is_stmt 0 view .LVU18
  79 0030 0023     		movs	r3, #0
  80 0032 8DF82430 		strb	r3, [sp, #36]
 102:main.c        **** flash_handle.num_bytes             = 0;
  81              		.loc 1 102 1 is_stmt 1 view .LVU19
  82              		.loc 1 102 36 is_stmt 0 view .LVU20
  83 0036 0693     		str	r3, [sp, #24]
 103:main.c        **** flash_handle.address               = 0;
  84              		.loc 1 103 1 is_stmt 1 view .LVU21
  85              		.loc 1 103 36 is_stmt 0 view .LVU22
  86 0038 0793     		str	r3, [sp, #28]
 104:main.c        **** flash_handle.pbuffer               = &flash_buffer[0];
  87              		.loc 1 104 1 is_stmt 1 view .LVU23
  88              		.loc 1 104 36 is_stmt 0 view .LVU24
  89 003a 02AA     		add	r2, sp, #8
  90 003c 0892     		str	r2, [sp, #32]
 105:main.c        **** flash_handle.status_register       = 0xFF;
  91              		.loc 1 105 1 is_stmt 1 view .LVU25
  92              		.loc 1 105 36 is_stmt 0 view .LVU26
  93 003e FF22     		movs	r2, #255
  94 0040 8DF82720 		strb	r2, [sp, #39]
 106:main.c        **** flash_handle.bpl_bits              = FLASH_BPL_NONE;
  95              		.loc 1 106 1 is_stmt 1 view .LVU27
  96              		.loc 1 106 36 is_stmt 0 view .LVU28
  97 0044 C322     		movs	r2, #195
  98 0046 8DF82520 		strb	r2, [sp, #37]
 107:main.c        **** flash_handle.bpl_write_protect     = FLASH_BPL_READ_WRITE;
  99              		.loc 1 107 1 is_stmt 1 view .LVU29
 100              		.loc 1 107 36 is_stmt 0 view .LVU30
 101 004a 8DF82630 		strb	r3, [sp, #38]
 108:main.c        **** 
 109:main.c        **** /* Thermocouple configuration */
 110:main.c        **** thermo_config.type                 = THERMO_TYPE_T;
 102              		.loc 1 110 1 is_stmt 1 view .LVU31
 103              		.loc 1 110 36 is_stmt 0 view .LVU32
 104 004e 0222     		movs	r2, #2
 105 0050 8DF80020 		strb	r2, [sp]
 111:main.c        **** thermo_config.filter_coeff         = THERMO_FILTER_OFF; 
 106              		.loc 1 111 1 is_stmt 1 view .LVU33
 107              		.loc 1 111 36 is_stmt 0 view .LVU34
 108 0054 8DF80130 		strb	r3, [sp, #1]
 112:main.c        **** thermo_config.adc_resolution       = THERMO_18BIT_ADC;
 109              		.loc 1 112 1 is_stmt 1 view .LVU35
 110              		.loc 1 112 36 is_stmt 0 view .LVU36
 111 0058 8DF80230 		strb	r3, [sp, #2]
 113:main.c        **** thermo_config.cold_junc_resolution = THERMO_COLD_JUNC_MIN_RES;
 112              		.loc 1 113 1 is_stmt 1 view .LVU37
 113              		.loc 1 113 36 is_stmt 0 view .LVU38
 114 005c 8DF80330 		strb	r3, [sp, #3]
 114:main.c        **** thermo_config.burst_mode           = THERMO_BURST_MODE_1;
 115              		.loc 1 114 1 is_stmt 1 view .LVU39
ARM GAS  /tmp/cc6gGBHe.s 			page 5


 116              		.loc 1 114 36 is_stmt 0 view .LVU40
 117 0060 8DF80430 		strb	r3, [sp, #4]
 115:main.c        **** thermo_config.shutdown_mode        = THERMO_NORMAL_MODE;
 118              		.loc 1 115 1 is_stmt 1 view .LVU41
 119              		.loc 1 115 36 is_stmt 0 view .LVU42
 120 0064 8DF80530 		strb	r3, [sp, #5]
 116:main.c        **** thermo_config.status               = 0;
 121              		.loc 1 116 1 is_stmt 1 view .LVU43
 122              		.loc 1 116 36 is_stmt 0 view .LVU44
 123 0068 8DF80630 		strb	r3, [sp, #6]
 117:main.c        **** 
 118:main.c        **** /* Module return codes */
 119:main.c        **** flash_status                       = FLASH_OK;
 124              		.loc 1 119 1 is_stmt 1 view .LVU45
 125              	.LVL11:
 120:main.c        **** thermo_status                      = THERMO_OK;
 126              		.loc 1 120 1 view .LVU46
 121:main.c        **** 
 122:main.c        **** 
 123:main.c        **** /*------------------------------------------------------------------------------
 124:main.c        ****  External Hardware Initializations 
 125:main.c        **** ------------------------------------------------------------------------------*/
 126:main.c        **** 
 127:main.c        **** /* Flash Chip */
 128:main.c        **** flash_status = flash_init( &flash_handle );
 127              		.loc 1 128 1 view .LVU47
 128              		.loc 1 128 16 is_stmt 0 view .LVU48
 129 006c 06A8     		add	r0, sp, #24
 130 006e FFF7FEFF 		bl	flash_init
 131              	.LVL12:
 129:main.c        **** if ( flash_status != FLASH_OK )
 132              		.loc 1 129 1 is_stmt 1 view .LVU49
 133              		.loc 1 129 4 is_stmt 0 view .LVU50
 134 0072 48B9     		cbnz	r0, .L6
 135              	.LVL13:
 136              	.L2:
 130:main.c        **** 	{
 131:main.c        **** 	Error_Handler( ERROR_FLASH_INIT_ERROR );
 132:main.c        **** 	}
 133:main.c        **** 
 134:main.c        **** /* Sensor module */
 135:main.c        **** sensor_init();
 137              		.loc 1 135 1 is_stmt 1 view .LVU51
 138 0074 FFF7FEFF 		bl	sensor_init
 139              	.LVL14:
 136:main.c        **** 
 137:main.c        **** /* Thermocouple */
 138:main.c        **** thermo_status = temp_init( &thermo_config );
 140              		.loc 1 138 1 view .LVU52
 141              		.loc 1 138 17 is_stmt 0 view .LVU53
 142 0078 6846     		mov	r0, sp
 143 007a FFF7FEFF 		bl	temp_init
 144              	.LVL15:
 139:main.c        **** if ( thermo_status != THERMO_OK )
 145              		.loc 1 139 1 is_stmt 1 view .LVU54
 146              		.loc 1 139 4 is_stmt 0 view .LVU55
 147 007e 38B9     		cbnz	r0, .L7
ARM GAS  /tmp/cc6gGBHe.s 			page 6


 148              	.LVL16:
 149              	.L3:
 140:main.c        **** 	{
 141:main.c        **** 	Error_Handler( ERROR_THERMO_INIT_ERROR );
 142:main.c        **** 	}
 143:main.c        **** 
 144:main.c        **** /* Indicate Successful MCU and Peripheral Hardware Setup */
 145:main.c        **** led_set_color( LED_GREEN );
 150              		.loc 1 145 1 is_stmt 1 view .LVU56
 151 0080 0120     		movs	r0, #1
 152 0082 FFF7FEFF 		bl	led_set_color
 153              	.LVL17:
 154              	.L4:
 146:main.c        **** 
 147:main.c        **** 
 148:main.c        **** /*------------------------------------------------------------------------------
 149:main.c        ****  Initialization stage 
 150:main.c        **** ------------------------------------------------------------------------------*/
 151:main.c        **** 
 152:main.c        **** /* Calibrate the main propellant valves */
 153:main.c        **** /* Reset solenoid positions             */
 154:main.c        **** 
 155:main.c        **** /*------------------------------------------------------------------------------
 156:main.c        ****  Event Loop                                                                  
 157:main.c        **** ------------------------------------------------------------------------------*/
 158:main.c        **** while (1)
 155              		.loc 1 158 1 discriminator 1 view .LVU57
 159:main.c        **** 	{
 160:main.c        **** 	}
 156              		.loc 1 160 2 discriminator 1 view .LVU58
 158:main.c        **** 	{
 157              		.loc 1 158 7 discriminator 1 view .LVU59
 158 0086 FEE7     		b	.L4
 159              	.LVL18:
 160              	.L6:
 131:main.c        **** 	}
 161              		.loc 1 131 2 view .LVU60
 162 0088 0020     		movs	r0, #0
 163              	.LVL19:
 131:main.c        **** 	}
 164              		.loc 1 131 2 is_stmt 0 view .LVU61
 165 008a FFF7FEFF 		bl	Error_Handler
 166              	.LVL20:
 167 008e F1E7     		b	.L2
 168              	.LVL21:
 169              	.L7:
 141:main.c        **** 	}
 170              		.loc 1 141 2 is_stmt 1 view .LVU62
 171 0090 1520     		movs	r0, #21
 172              	.LVL22:
 141:main.c        **** 	}
 173              		.loc 1 141 2 is_stmt 0 view .LVU63
 174 0092 FFF7FEFF 		bl	Error_Handler
 175              	.LVL23:
 176 0096 F3E7     		b	.L3
 177              		.cfi_endproc
 178              	.LFE333:
ARM GAS  /tmp/cc6gGBHe.s 			page 7


 180              		.global	huart4
 181              		.section	.bss.huart4,"aw",%nobits
 182              		.align	2
 185              	huart4:
 186 0000 00000000 		.space	144
 186      00000000 
 186      00000000 
 186      00000000 
 186      00000000 
 187              		.global	huart2
 188              		.section	.bss.huart2,"aw",%nobits
 189              		.align	2
 192              	huart2:
 193 0000 00000000 		.space	144
 193      00000000 
 193      00000000 
 193      00000000 
 193      00000000 
 194              		.global	huart1
 195              		.section	.bss.huart1,"aw",%nobits
 196              		.align	2
 199              	huart1:
 200 0000 00000000 		.space	144
 200      00000000 
 200      00000000 
 200      00000000 
 200      00000000 
 201              		.global	hspi2
 202              		.section	.bss.hspi2,"aw",%nobits
 203              		.align	2
 206              	hspi2:
 207 0000 00000000 		.space	136
 207      00000000 
 207      00000000 
 207      00000000 
 207      00000000 
 208              		.global	hi2c1
 209              		.section	.bss.hi2c1,"aw",%nobits
 210              		.align	2
 213              	hi2c1:
 214 0000 00000000 		.space	76
 214      00000000 
 214      00000000 
 214      00000000 
 214      00000000 
 215              		.global	hadc2
 216              		.section	.bss.hadc2,"aw",%nobits
 217              		.align	2
 220              	hadc2:
 221 0000 00000000 		.space	100
 221      00000000 
 221      00000000 
 221      00000000 
 221      00000000 
 222              		.global	hadc1
 223              		.section	.bss.hadc1,"aw",%nobits
 224              		.align	2
ARM GAS  /tmp/cc6gGBHe.s 			page 8


 227              	hadc1:
 228 0000 00000000 		.space	100
 228      00000000 
 228      00000000 
 228      00000000 
 228      00000000 
 229              		.text
 230              	.Letext0:
 231              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 232              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 233              		.file 4 "../../lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 234              		.file 5 "../../lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 235              		.file 6 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 236              		.file 7 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 237              		.file 8 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 238              		.file 9 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 239              		.file 10 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 240              		.file 11 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 241              		.file 12 "../../lib/sdr_pin_defines_L0002.h"
 242              		.file 13 "../../lib/util/sdr_error.h"
 243              		.file 14 "../../mod/flash/flash.h"
 244              		.file 15 "../../mod/led/led.h"
 245              		.file 16 "../../mod/temp/temp.h"
 246              		.file 17 "../../mod/sensor/sensor.h"
 247              		.file 18 "../../init/init.h"
 248              		.file 19 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/cc6gGBHe.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc6gGBHe.s:20     .text.main:0000000000000000 $t
     /tmp/cc6gGBHe.s:26     .text.main:0000000000000000 main
     /tmp/cc6gGBHe.s:185    .bss.huart4:0000000000000000 huart4
     /tmp/cc6gGBHe.s:182    .bss.huart4:0000000000000000 $d
     /tmp/cc6gGBHe.s:192    .bss.huart2:0000000000000000 huart2
     /tmp/cc6gGBHe.s:189    .bss.huart2:0000000000000000 $d
     /tmp/cc6gGBHe.s:199    .bss.huart1:0000000000000000 huart1
     /tmp/cc6gGBHe.s:196    .bss.huart1:0000000000000000 $d
     /tmp/cc6gGBHe.s:206    .bss.hspi2:0000000000000000 hspi2
     /tmp/cc6gGBHe.s:203    .bss.hspi2:0000000000000000 $d
     /tmp/cc6gGBHe.s:213    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/cc6gGBHe.s:210    .bss.hi2c1:0000000000000000 $d
     /tmp/cc6gGBHe.s:220    .bss.hadc2:0000000000000000 hadc2
     /tmp/cc6gGBHe.s:217    .bss.hadc2:0000000000000000 $d
     /tmp/cc6gGBHe.s:227    .bss.hadc1:0000000000000000 hadc1
     /tmp/cc6gGBHe.s:224    .bss.hadc1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_Init
SystemClock_Config
PeriphCommonClock_Config
GPIO_Init
USB_UART_Init
Valve_UART_Init
Wireless_UART_Init
FLASH_SPI_Init
PRESSURE_ADC_Init
LOADCELL_ADC_Init
Thermocouple_I2C_Init
flash_init
sensor_init
temp_init
led_set_color
Error_Handler
