ARM GAS  /tmp/cc6WgIrk.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"temp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "../../mod/temp/temp.c"
  19              		.section	.text.write_reg,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	write_reg:
  26              	.LVL0:
  27              	.LFB338:
   1:../../mod/temp/temp.c **** /*******************************************************************************
   2:../../mod/temp/temp.c **** *
   3:../../mod/temp/temp.c **** * FILE: 
   4:../../mod/temp/temp.c **** * 		temp.c
   5:../../mod/temp/temp.c **** *
   6:../../mod/temp/temp.c **** * DESCRIPTION: 
   7:../../mod/temp/temp.c **** * 		Contains API functions for reading data from the engine's thermocouple 
   8:../../mod/temp/temp.c **** *
   9:../../mod/temp/temp.c **** *******************************************************************************/
  10:../../mod/temp/temp.c **** 
  11:../../mod/temp/temp.c **** 
  12:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
  13:../../mod/temp/temp.c ****  Standard Includes                                                                     
  14:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
  15:../../mod/temp/temp.c **** #include <stdbool.h>
  16:../../mod/temp/temp.c **** #include <string.h>
  17:../../mod/temp/temp.c **** 
  18:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
  19:../../mod/temp/temp.c ****  Project Includes                                                                     
  20:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
  21:../../mod/temp/temp.c **** #include "main.h"
  22:../../mod/temp/temp.c **** #include "sdr_pin_defines_L0002.h"
  23:../../mod/temp/temp.c **** #include "temp.h"
  24:../../mod/temp/temp.c **** 
  25:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
  26:../../mod/temp/temp.c ****  Global Variables 
  27:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
  28:../../mod/temp/temp.c **** 
  29:../../mod/temp/temp.c **** 
  30:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
  31:../../mod/temp/temp.c ****  Internal function prototypes 
ARM GAS  /tmp/cc6WgIrk.s 			page 2


  32:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
  33:../../mod/temp/temp.c **** 
  34:../../mod/temp/temp.c **** /* Write to a thermocouple register */
  35:../../mod/temp/temp.c **** static THERMO_STATUS write_reg
  36:../../mod/temp/temp.c ****     (
  37:../../mod/temp/temp.c ****     uint8_t reg_id,  /* Thermocouple register id  */
  38:../../mod/temp/temp.c ****     uint8_t reg_data /* Data to write to register */
  39:../../mod/temp/temp.c ****     );
  40:../../mod/temp/temp.c **** 
  41:../../mod/temp/temp.c **** /* Read a specified number of bytes from a thermocouple register */
  42:../../mod/temp/temp.c **** static THERMO_STATUS read_reg
  43:../../mod/temp/temp.c ****     (
  44:../../mod/temp/temp.c ****     uint8_t  reg_id,       /* Thermocouple register id  */
  45:../../mod/temp/temp.c ****     uint8_t* reg_data_ptr, /* Pointer to output         */
  46:../../mod/temp/temp.c ****     uint8_t  num_bytes     /* Number of bytes to read   */
  47:../../mod/temp/temp.c ****     );
  48:../../mod/temp/temp.c **** 
  49:../../mod/temp/temp.c **** 
  50:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
  51:../../mod/temp/temp.c ****  API Functions 
  52:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
  53:../../mod/temp/temp.c **** 
  54:../../mod/temp/temp.c **** 
  55:../../mod/temp/temp.c **** /*******************************************************************************
  56:../../mod/temp/temp.c **** *                                                                              *
  57:../../mod/temp/temp.c **** * PROCEDURE:                                                                   *
  58:../../mod/temp/temp.c **** * 		temp_init                                                              *
  59:../../mod/temp/temp.c **** *                                                                              *
  60:../../mod/temp/temp.c **** * DESCRIPTION:                                                                 *
  61:../../mod/temp/temp.c **** *       Initialize the thermocouple cold junction compensation chip            *
  62:../../mod/temp/temp.c **** *                                                                              *
  63:../../mod/temp/temp.c **** *******************************************************************************/
  64:../../mod/temp/temp.c **** THERMO_STATUS temp_init
  65:../../mod/temp/temp.c ****     (
  66:../../mod/temp/temp.c ****     THERMO_CONFIG* thermo_config_ptr /* Pointer to thermocouple settings */
  67:../../mod/temp/temp.c ****     )
  68:../../mod/temp/temp.c **** {
  69:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
  70:../../mod/temp/temp.c ****  Local Variables  
  71:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
  72:../../mod/temp/temp.c **** THERMO_STATUS thermo_status;     /* Return codes from temp functions       */
  73:../../mod/temp/temp.c **** uint8_t       sensor_config_reg; /* Contents of thermocouple sensor config 
  74:../../mod/temp/temp.c ****                                     register                               */
  75:../../mod/temp/temp.c **** uint8_t       dev_config_reg;    /* Contents of thermocouple device config 
  76:../../mod/temp/temp.c ****                                     register                               */
  77:../../mod/temp/temp.c **** uint8_t       device_id;         /* Chip identification code               */
  78:../../mod/temp/temp.c **** 
  79:../../mod/temp/temp.c **** 
  80:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
  81:../../mod/temp/temp.c ****  Initializations 
  82:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
  83:../../mod/temp/temp.c **** thermo_status     = THERMO_OK;
  84:../../mod/temp/temp.c **** sensor_config_reg = 0;
  85:../../mod/temp/temp.c **** dev_config_reg    = 0;
  86:../../mod/temp/temp.c **** device_id         = 0;
  87:../../mod/temp/temp.c **** 
  88:../../mod/temp/temp.c **** 
ARM GAS  /tmp/cc6WgIrk.s 			page 3


  89:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
  90:../../mod/temp/temp.c ****  Implementation 
  91:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
  92:../../mod/temp/temp.c **** 
  93:../../mod/temp/temp.c **** /* Shift configuration bits into correct position */
  94:../../mod/temp/temp.c **** sensor_config_reg |= thermo_config_ptr -> type                 << 4;
  95:../../mod/temp/temp.c **** sensor_config_reg |= thermo_config_ptr -> filter_coeff;
  96:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> cold_junc_resolution << 7;
  97:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> adc_resolution       << 5;
  98:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> burst_mode           << 2;
  99:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> shutdown_mode;
 100:../../mod/temp/temp.c **** 
 101:../../mod/temp/temp.c **** /* Check that device can be reached */
 102:../../mod/temp/temp.c **** thermo_status = temp_get_device_id( &device_id );
 103:../../mod/temp/temp.c **** if      ( thermo_status != THERMO_OK )
 104:../../mod/temp/temp.c ****     {
 105:../../mod/temp/temp.c ****     return thermo_status;
 106:../../mod/temp/temp.c ****     }
 107:../../mod/temp/temp.c **** else if ( device_id != THERMO_DEV_ID )
 108:../../mod/temp/temp.c ****     {
 109:../../mod/temp/temp.c ****     return THERMO_UNRECOGNIZED_ID;
 110:../../mod/temp/temp.c ****     }
 111:../../mod/temp/temp.c **** 
 112:../../mod/temp/temp.c **** /* Write to the configuration registers */
 113:../../mod/temp/temp.c **** thermo_status = write_reg( THERMO_SENSOR_CONFIG_REG_ID, sensor_config_reg );
 114:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 115:../../mod/temp/temp.c ****     {
 116:../../mod/temp/temp.c ****     return thermo_status;
 117:../../mod/temp/temp.c ****     }
 118:../../mod/temp/temp.c **** thermo_status = write_reg( THERMO_DEV_CONFIG_REG_ID, dev_config_reg );
 119:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 120:../../mod/temp/temp.c ****     {
 121:../../mod/temp/temp.c ****     return thermo_status;
 122:../../mod/temp/temp.c ****     }
 123:../../mod/temp/temp.c **** 
 124:../../mod/temp/temp.c **** /* Get the device status */
 125:../../mod/temp/temp.c **** thermo_status = temp_get_status( &( thermo_config_ptr -> status ) );
 126:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 127:../../mod/temp/temp.c ****     {
 128:../../mod/temp/temp.c ****     return thermo_status;
 129:../../mod/temp/temp.c ****     }
 130:../../mod/temp/temp.c **** 
 131:../../mod/temp/temp.c **** return THERMO_OK;
 132:../../mod/temp/temp.c **** } /* temp_init */
 133:../../mod/temp/temp.c **** 
 134:../../mod/temp/temp.c **** 
 135:../../mod/temp/temp.c **** /*******************************************************************************
 136:../../mod/temp/temp.c **** *                                                                              *
 137:../../mod/temp/temp.c **** * PROCEDURE:                                                                   *
 138:../../mod/temp/temp.c **** * 		temp_get_temp                                                          *
 139:../../mod/temp/temp.c **** *                                                                              *
 140:../../mod/temp/temp.c **** * DESCRIPTION:                                                                 *
 141:../../mod/temp/temp.c **** *       Get the thermocouple temperature                                       *
 142:../../mod/temp/temp.c **** *                                                                              *
 143:../../mod/temp/temp.c **** *******************************************************************************/
 144:../../mod/temp/temp.c **** THERMO_STATUS temp_get_temp
 145:../../mod/temp/temp.c ****     (
ARM GAS  /tmp/cc6WgIrk.s 			page 4


 146:../../mod/temp/temp.c ****     uint32_t*       temp_ptr, /* Pointer to write temperature     */
 147:../../mod/temp/temp.c ****     THERMO_JUNCTION junction  /* Cold or hot junction measurement */
 148:../../mod/temp/temp.c ****     )
 149:../../mod/temp/temp.c **** {
 150:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 151:../../mod/temp/temp.c ****  Local Variables  
 152:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 153:../../mod/temp/temp.c **** THERMO_STATUS thermo_status; /* Return codes from temp functions    */
 154:../../mod/temp/temp.c **** uint8_t       temp_bytes[2]; /* Bytes read from thermocouple        */
 155:../../mod/temp/temp.c **** uint8_t       data_reg_id;   /* ID of register containing temp data */
 156:../../mod/temp/temp.c **** 
 157:../../mod/temp/temp.c **** 
 158:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 159:../../mod/temp/temp.c ****  Initializations 
 160:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 161:../../mod/temp/temp.c **** thermo_status = THERMO_OK;
 162:../../mod/temp/temp.c **** memset( &temp_bytes[0], 0, sizeof( temp_bytes ) );
 163:../../mod/temp/temp.c **** switch ( junction )
 164:../../mod/temp/temp.c ****     {
 165:../../mod/temp/temp.c ****     case THERMO_COLD_JUNCTION:
 166:../../mod/temp/temp.c ****         {
 167:../../mod/temp/temp.c ****         data_reg_id = THERMO_COLD_JUNC_TEMP_REG_ID;
 168:../../mod/temp/temp.c ****         break;
 169:../../mod/temp/temp.c ****         }
 170:../../mod/temp/temp.c ****     case THERMO_HOT_JUNCTION:
 171:../../mod/temp/temp.c ****         {
 172:../../mod/temp/temp.c ****         data_reg_id = THERMO_HOT_JUNC_TEMP_REG_ID;
 173:../../mod/temp/temp.c ****         break;
 174:../../mod/temp/temp.c ****         }
 175:../../mod/temp/temp.c ****     default:
 176:../../mod/temp/temp.c ****         {
 177:../../mod/temp/temp.c ****         return THERMO_INVALID_JUNCTION;
 178:../../mod/temp/temp.c ****         }
 179:../../mod/temp/temp.c ****     }
 180:../../mod/temp/temp.c **** 
 181:../../mod/temp/temp.c **** 
 182:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 183:../../mod/temp/temp.c ****  Implementation 
 184:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 185:../../mod/temp/temp.c **** 
 186:../../mod/temp/temp.c **** /* Wait for temperature measurement ready flag */
 187:../../mod/temp/temp.c **** while ( !temp_is_temp_ready() ){}
 188:../../mod/temp/temp.c **** 
 189:../../mod/temp/temp.c **** /* Read temperature data register */
 190:../../mod/temp/temp.c **** thermo_status = read_reg( data_reg_id   , 
 191:../../mod/temp/temp.c ****                           &temp_bytes[0],
 192:../../mod/temp/temp.c ****                           sizeof( temp_bytes ) );
 193:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 194:../../mod/temp/temp.c ****     {
 195:../../mod/temp/temp.c ****     return thermo_status;
 196:../../mod/temp/temp.c ****     }
 197:../../mod/temp/temp.c **** 
 198:../../mod/temp/temp.c **** /* Clear Data Ready flag */
 199:../../mod/temp/temp.c **** thermo_status = write_reg( THERMO_STATUS_REG_ID, 0 );
 200:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 201:../../mod/temp/temp.c ****     {
 202:../../mod/temp/temp.c ****     return thermo_status;
ARM GAS  /tmp/cc6WgIrk.s 			page 5


 203:../../mod/temp/temp.c ****     }
 204:../../mod/temp/temp.c **** 
 205:../../mod/temp/temp.c **** /* Export data */
 206:../../mod/temp/temp.c **** *temp_ptr = ( (uint32_t) temp_bytes[0] << 8 ) |
 207:../../mod/temp/temp.c ****             ( (uint32_t) temp_bytes[1] << 0 );
 208:../../mod/temp/temp.c **** return THERMO_OK;
 209:../../mod/temp/temp.c **** 
 210:../../mod/temp/temp.c **** } /* temp_get_temp */
 211:../../mod/temp/temp.c **** 
 212:../../mod/temp/temp.c **** 
 213:../../mod/temp/temp.c **** /*******************************************************************************
 214:../../mod/temp/temp.c **** *                                                                              *
 215:../../mod/temp/temp.c **** * PROCEDURE:                                                                   *
 216:../../mod/temp/temp.c **** * 		temp_is_temp_ready                                                     *
 217:../../mod/temp/temp.c **** *                                                                              *
 218:../../mod/temp/temp.c **** * DESCRIPTION:                                                                 *
 219:../../mod/temp/temp.c **** *       Poll the thermocouple status register to determine if a measurement is *
 220:../../mod/temp/temp.c **** *       available, returns true if a measurement is ready                      *
 221:../../mod/temp/temp.c **** *                                                                              *
 222:../../mod/temp/temp.c **** *******************************************************************************/
 223:../../mod/temp/temp.c **** bool temp_is_temp_ready
 224:../../mod/temp/temp.c ****     (
 225:../../mod/temp/temp.c ****     void
 226:../../mod/temp/temp.c ****     )
 227:../../mod/temp/temp.c **** {
 228:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 229:../../mod/temp/temp.c ****  Local Variables  
 230:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 231:../../mod/temp/temp.c **** THERMO_STATUS thermo_status; /* Return codes from temp functions */
 232:../../mod/temp/temp.c **** uint8_t       status;        /* Contents of status register      */
 233:../../mod/temp/temp.c **** 
 234:../../mod/temp/temp.c **** 
 235:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 236:../../mod/temp/temp.c ****  Initializations 
 237:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 238:../../mod/temp/temp.c **** thermo_status = THERMO_OK;
 239:../../mod/temp/temp.c **** status        = 0;
 240:../../mod/temp/temp.c **** 
 241:../../mod/temp/temp.c **** 
 242:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 243:../../mod/temp/temp.c ****  Implementation 
 244:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 245:../../mod/temp/temp.c **** 
 246:../../mod/temp/temp.c **** /* Read status register */
 247:../../mod/temp/temp.c **** thermo_status = temp_get_status( &status );
 248:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 249:../../mod/temp/temp.c ****     {
 250:../../mod/temp/temp.c ****     return false;
 251:../../mod/temp/temp.c ****     }
 252:../../mod/temp/temp.c **** 
 253:../../mod/temp/temp.c **** /* Check data ready bit */
 254:../../mod/temp/temp.c **** if ( status & THERMO_STATUS_DATA_RDY_BITMASK )
 255:../../mod/temp/temp.c ****     {
 256:../../mod/temp/temp.c ****     return true;
 257:../../mod/temp/temp.c ****     }
 258:../../mod/temp/temp.c **** else
 259:../../mod/temp/temp.c ****     {
ARM GAS  /tmp/cc6WgIrk.s 			page 6


 260:../../mod/temp/temp.c ****     return false;
 261:../../mod/temp/temp.c ****     }
 262:../../mod/temp/temp.c **** 
 263:../../mod/temp/temp.c **** } /* temp_is_temp_ready */
 264:../../mod/temp/temp.c **** 
 265:../../mod/temp/temp.c **** 
 266:../../mod/temp/temp.c **** /*******************************************************************************
 267:../../mod/temp/temp.c **** *                                                                              *
 268:../../mod/temp/temp.c **** * PROCEDURE:                                                                   *
 269:../../mod/temp/temp.c **** * 		temp_get_status                                                        *
 270:../../mod/temp/temp.c **** *                                                                              *
 271:../../mod/temp/temp.c **** * DESCRIPTION:                                                                 *
 272:../../mod/temp/temp.c **** *       Read the status of the thermocouple cold junction compensation chip    *
 273:../../mod/temp/temp.c **** *                                                                              *
 274:../../mod/temp/temp.c **** *******************************************************************************/
 275:../../mod/temp/temp.c **** THERMO_STATUS temp_get_status
 276:../../mod/temp/temp.c ****     (
 277:../../mod/temp/temp.c ****     uint8_t* status_ptr /* Pointer to output data */
 278:../../mod/temp/temp.c ****     )
 279:../../mod/temp/temp.c **** {
 280:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 281:../../mod/temp/temp.c ****  Local Variables  
 282:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 283:../../mod/temp/temp.c **** THERMO_STATUS thermo_status; /* Return codes from temp functions */
 284:../../mod/temp/temp.c **** 
 285:../../mod/temp/temp.c **** 
 286:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 287:../../mod/temp/temp.c ****  Initializations 
 288:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 289:../../mod/temp/temp.c **** thermo_status = THERMO_OK;
 290:../../mod/temp/temp.c **** 
 291:../../mod/temp/temp.c **** 
 292:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 293:../../mod/temp/temp.c ****  Implementation 
 294:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 295:../../mod/temp/temp.c **** thermo_status = read_reg( THERMO_STATUS_REG_ID, 
 296:../../mod/temp/temp.c ****                           status_ptr          ,
 297:../../mod/temp/temp.c ****                           sizeof( uint8_t ) );
 298:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 299:../../mod/temp/temp.c ****     {
 300:../../mod/temp/temp.c ****     return thermo_status;
 301:../../mod/temp/temp.c ****     }
 302:../../mod/temp/temp.c **** else
 303:../../mod/temp/temp.c ****     {
 304:../../mod/temp/temp.c ****     return THERMO_OK;
 305:../../mod/temp/temp.c ****     }
 306:../../mod/temp/temp.c **** 
 307:../../mod/temp/temp.c **** } /* temp_get_status */
 308:../../mod/temp/temp.c **** 
 309:../../mod/temp/temp.c **** 
 310:../../mod/temp/temp.c **** /*******************************************************************************
 311:../../mod/temp/temp.c **** *                                                                              *
 312:../../mod/temp/temp.c **** * PROCEDURE:                                                                   *
 313:../../mod/temp/temp.c **** * 		temp_get_device_id                                                     *
 314:../../mod/temp/temp.c **** *                                                                              *
 315:../../mod/temp/temp.c **** * DESCRIPTION:                                                                 *
 316:../../mod/temp/temp.c **** *       Get the device id of the thermcouple                                   *
ARM GAS  /tmp/cc6WgIrk.s 			page 7


 317:../../mod/temp/temp.c **** *                                                                              *
 318:../../mod/temp/temp.c **** *******************************************************************************/
 319:../../mod/temp/temp.c **** THERMO_STATUS temp_get_device_id 
 320:../../mod/temp/temp.c **** 	(
 321:../../mod/temp/temp.c ****     uint8_t* device_id_ptr
 322:../../mod/temp/temp.c ****     )
 323:../../mod/temp/temp.c **** {
 324:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 325:../../mod/temp/temp.c ****  Local Variables  
 326:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 327:../../mod/temp/temp.c **** THERMO_STATUS thermo_status; /* Return codes from temp API calls */
 328:../../mod/temp/temp.c **** 
 329:../../mod/temp/temp.c **** 
 330:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 331:../../mod/temp/temp.c ****  Initializations 
 332:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 333:../../mod/temp/temp.c **** thermo_status = THERMO_OK;
 334:../../mod/temp/temp.c **** 
 335:../../mod/temp/temp.c **** 
 336:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 337:../../mod/temp/temp.c ****  Implementation 
 338:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 339:../../mod/temp/temp.c **** thermo_status = read_reg( THERMO_DEV_ID_REG_ID, 
 340:../../mod/temp/temp.c ****                           device_id_ptr       ,
 341:../../mod/temp/temp.c ****                           sizeof( uint8_t ) );
 342:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 343:../../mod/temp/temp.c ****     {
 344:../../mod/temp/temp.c ****     return thermo_status;
 345:../../mod/temp/temp.c ****     }
 346:../../mod/temp/temp.c **** else
 347:../../mod/temp/temp.c ****     {
 348:../../mod/temp/temp.c ****     return THERMO_OK;
 349:../../mod/temp/temp.c ****     }
 350:../../mod/temp/temp.c **** 
 351:../../mod/temp/temp.c **** } /* temp_get_device_id */
 352:../../mod/temp/temp.c **** 
 353:../../mod/temp/temp.c **** 
 354:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 355:../../mod/temp/temp.c ****  Internal procedures 
 356:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 357:../../mod/temp/temp.c **** 
 358:../../mod/temp/temp.c **** 
 359:../../mod/temp/temp.c **** /*******************************************************************************
 360:../../mod/temp/temp.c **** *                                                                              *
 361:../../mod/temp/temp.c **** * PROCEDURE:                                                                   *
 362:../../mod/temp/temp.c **** * 		write_reg                                                              *
 363:../../mod/temp/temp.c **** *                                                                              *
 364:../../mod/temp/temp.c **** * DESCRIPTION:                                                                 *
 365:../../mod/temp/temp.c **** *       Write to a thermocouple register                                       *
 366:../../mod/temp/temp.c **** *                                                                              *
 367:../../mod/temp/temp.c **** *******************************************************************************/
 368:../../mod/temp/temp.c **** static THERMO_STATUS write_reg
 369:../../mod/temp/temp.c ****     (
 370:../../mod/temp/temp.c ****     uint8_t reg_id,  /* Thermocouple register id  */
 371:../../mod/temp/temp.c ****     uint8_t reg_data /* Data to write to register */
 372:../../mod/temp/temp.c ****     )
 373:../../mod/temp/temp.c **** {
ARM GAS  /tmp/cc6WgIrk.s 			page 8


  28              		.loc 1 373 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 373 1 is_stmt 0 view .LVU1
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 8DF80F00 		strb	r0, [sp, #15]
  41 0008 8DF80E10 		strb	r1, [sp, #14]
 374:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 375:../../mod/temp/temp.c ****  Local Variables  
 376:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 377:../../mod/temp/temp.c **** HAL_StatusTypeDef hal_status; /* Return codes from I2C HAL */
  42              		.loc 1 377 1 is_stmt 1 view .LVU2
 378:../../mod/temp/temp.c **** 
 379:../../mod/temp/temp.c **** 
 380:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 381:../../mod/temp/temp.c ****  Initializations 
 382:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 383:../../mod/temp/temp.c **** hal_status = HAL_OK;
  43              		.loc 1 383 1 view .LVU3
  44              	.LVL1:
 384:../../mod/temp/temp.c **** 
 385:../../mod/temp/temp.c **** 
 386:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 387:../../mod/temp/temp.c ****  Implementation 
 388:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 389:../../mod/temp/temp.c **** 
 390:../../mod/temp/temp.c **** /* Load the thermocouple pointer register */
 391:../../mod/temp/temp.c **** hal_status = HAL_I2C_Master_Transmit( &( THERMO_I2C ) , 
  45              		.loc 1 391 1 view .LVU4
  46              		.loc 1 391 14 is_stmt 0 view .LVU5
  47 000c 0A23     		movs	r3, #10
  48 000e 0093     		str	r3, [sp]
  49 0010 0123     		movs	r3, #1
  50 0012 0DF10F02 		add	r2, sp, #15
  51 0016 C021     		movs	r1, #192
  52              	.LVL2:
  53              		.loc 1 391 14 view .LVU6
  54 0018 0A48     		ldr	r0, .L6
  55              	.LVL3:
  56              		.loc 1 391 14 view .LVU7
  57 001a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  58              	.LVL4:
 392:../../mod/temp/temp.c ****                                       THERMO_I2C_ADDR , 
 393:../../mod/temp/temp.c ****                                       &reg_id         ,
 394:../../mod/temp/temp.c ****                                       sizeof( reg_id ), 
 395:../../mod/temp/temp.c ****                                       HAL_DEFAULT_TIMEOUT );
 396:../../mod/temp/temp.c **** if ( hal_status != HAL_OK )
  59              		.loc 1 396 1 is_stmt 1 view .LVU8
  60              		.loc 1 396 4 is_stmt 0 view .LVU9
  61 001e 18B1     		cbz	r0, .L5
ARM GAS  /tmp/cc6WgIrk.s 			page 9


 397:../../mod/temp/temp.c ****     {
 398:../../mod/temp/temp.c ****     return THERMO_I2C_ERROR;
  62              		.loc 1 398 12 view .LVU10
  63 0020 0120     		movs	r0, #1
  64              	.LVL5:
  65              	.L2:
 399:../../mod/temp/temp.c ****     }
 400:../../mod/temp/temp.c **** 
 401:../../mod/temp/temp.c **** /* Send the data */
 402:../../mod/temp/temp.c **** hal_status = HAL_I2C_Master_Transmit( &( THERMO_I2C )   , 
 403:../../mod/temp/temp.c ****                                       THERMO_I2C_ADDR   , 
 404:../../mod/temp/temp.c ****                                       &reg_data         ,
 405:../../mod/temp/temp.c ****                                       sizeof( reg_data ), 
 406:../../mod/temp/temp.c ****                                       HAL_DEFAULT_TIMEOUT );
 407:../../mod/temp/temp.c **** if ( hal_status != HAL_OK )
 408:../../mod/temp/temp.c ****     {
 409:../../mod/temp/temp.c ****     return THERMO_I2C_ERROR;
 410:../../mod/temp/temp.c ****     }
 411:../../mod/temp/temp.c **** else
 412:../../mod/temp/temp.c ****     {
 413:../../mod/temp/temp.c ****     return THERMO_OK;
 414:../../mod/temp/temp.c ****     }
 415:../../mod/temp/temp.c **** 
 416:../../mod/temp/temp.c **** } /* write_reg */
  66              		.loc 1 416 1 view .LVU11
  67 0022 05B0     		add	sp, sp, #20
  68              	.LCFI2:
  69              		.cfi_remember_state
  70              		.cfi_def_cfa_offset 4
  71              		@ sp needed
  72 0024 5DF804FB 		ldr	pc, [sp], #4
  73              	.LVL6:
  74              	.L5:
  75              	.LCFI3:
  76              		.cfi_restore_state
 402:../../mod/temp/temp.c ****                                       THERMO_I2C_ADDR   , 
  77              		.loc 1 402 1 is_stmt 1 view .LVU12
 402:../../mod/temp/temp.c ****                                       THERMO_I2C_ADDR   , 
  78              		.loc 1 402 14 is_stmt 0 view .LVU13
  79 0028 0A23     		movs	r3, #10
  80 002a 0093     		str	r3, [sp]
  81 002c 0123     		movs	r3, #1
  82 002e 0DF10E02 		add	r2, sp, #14
  83 0032 C021     		movs	r1, #192
  84 0034 0348     		ldr	r0, .L6
  85              	.LVL7:
 402:../../mod/temp/temp.c ****                                       THERMO_I2C_ADDR   , 
  86              		.loc 1 402 14 view .LVU14
  87 0036 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  88              	.LVL8:
 407:../../mod/temp/temp.c ****     {
  89              		.loc 1 407 1 is_stmt 1 view .LVU15
 407:../../mod/temp/temp.c ****     {
  90              		.loc 1 407 4 is_stmt 0 view .LVU16
  91 003a 0028     		cmp	r0, #0
  92 003c F1D0     		beq	.L2
 409:../../mod/temp/temp.c ****     }
ARM GAS  /tmp/cc6WgIrk.s 			page 10


  93              		.loc 1 409 12 view .LVU17
  94 003e 0120     		movs	r0, #1
  95              	.LVL9:
 409:../../mod/temp/temp.c ****     }
  96              		.loc 1 409 12 view .LVU18
  97 0040 EFE7     		b	.L2
  98              	.L7:
  99 0042 00BF     		.align	2
 100              	.L6:
 101 0044 00000000 		.word	hi2c1
 102              		.cfi_endproc
 103              	.LFE338:
 105              		.section	.text.read_reg,"ax",%progbits
 106              		.align	1
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	read_reg:
 112              	.LVL10:
 113              	.LFB339:
 417:../../mod/temp/temp.c **** 
 418:../../mod/temp/temp.c **** 
 419:../../mod/temp/temp.c **** /*******************************************************************************
 420:../../mod/temp/temp.c **** *                                                                              *
 421:../../mod/temp/temp.c **** * PROCEDURE:                                                                   *
 422:../../mod/temp/temp.c **** * 		read_reg                                                               *
 423:../../mod/temp/temp.c **** *                                                                              *
 424:../../mod/temp/temp.c **** * DESCRIPTION:                                                                 *
 425:../../mod/temp/temp.c **** *       Read a specified number of bytes from a thermocouple register          *
 426:../../mod/temp/temp.c **** *                                                                              *
 427:../../mod/temp/temp.c **** *******************************************************************************/
 428:../../mod/temp/temp.c **** static THERMO_STATUS read_reg
 429:../../mod/temp/temp.c ****     (
 430:../../mod/temp/temp.c ****     uint8_t  reg_id,       /* Thermocouple register id  */
 431:../../mod/temp/temp.c ****     uint8_t* reg_data_ptr, /* Pointer to output         */
 432:../../mod/temp/temp.c ****     uint8_t  num_bytes     /* Number of bytes to read   */
 433:../../mod/temp/temp.c ****     )
 434:../../mod/temp/temp.c **** {
 114              		.loc 1 434 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 8
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		.loc 1 434 1 is_stmt 0 view .LVU20
 119 0000 30B5     		push	{r4, r5, lr}
 120              	.LCFI4:
 121              		.cfi_def_cfa_offset 12
 122              		.cfi_offset 4, -12
 123              		.cfi_offset 5, -8
 124              		.cfi_offset 14, -4
 125 0002 85B0     		sub	sp, sp, #20
 126              	.LCFI5:
 127              		.cfi_def_cfa_offset 32
 128 0004 0C46     		mov	r4, r1
 129 0006 1546     		mov	r5, r2
 130 0008 8DF80F00 		strb	r0, [sp, #15]
 435:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 436:../../mod/temp/temp.c ****  Local Variables  
ARM GAS  /tmp/cc6WgIrk.s 			page 11


 437:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 438:../../mod/temp/temp.c **** HAL_StatusTypeDef hal_status; /* Return codes from I2C HAL     */
 131              		.loc 1 438 1 is_stmt 1 view .LVU21
 439:../../mod/temp/temp.c **** 
 440:../../mod/temp/temp.c **** 
 441:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 442:../../mod/temp/temp.c ****  Initializations 
 443:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 444:../../mod/temp/temp.c **** hal_status = HAL_OK;
 132              		.loc 1 444 1 view .LVU22
 133              	.LVL11:
 445:../../mod/temp/temp.c **** 
 446:../../mod/temp/temp.c **** 
 447:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 448:../../mod/temp/temp.c ****  Implementation 
 449:../../mod/temp/temp.c **** ------------------------------------------------------------------------------*/
 450:../../mod/temp/temp.c **** 
 451:../../mod/temp/temp.c **** /* Load the thermocouple pointer register */
 452:../../mod/temp/temp.c **** hal_status = HAL_I2C_Master_Transmit( &( THERMO_I2C ) , 
 134              		.loc 1 452 1 view .LVU23
 135              		.loc 1 452 14 is_stmt 0 view .LVU24
 136 000c 0A23     		movs	r3, #10
 137 000e 0093     		str	r3, [sp]
 138 0010 0123     		movs	r3, #1
 139 0012 0DF10F02 		add	r2, sp, #15
 140              	.LVL12:
 141              		.loc 1 452 14 view .LVU25
 142 0016 C021     		movs	r1, #192
 143              	.LVL13:
 144              		.loc 1 452 14 view .LVU26
 145 0018 0948     		ldr	r0, .L13
 146              	.LVL14:
 147              		.loc 1 452 14 view .LVU27
 148 001a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 149              	.LVL15:
 453:../../mod/temp/temp.c ****                                      THERMO_I2C_ADDR , 
 454:../../mod/temp/temp.c ****                                      &reg_id         ,
 455:../../mod/temp/temp.c ****                                      sizeof( reg_id ), 
 456:../../mod/temp/temp.c ****                                      HAL_DEFAULT_TIMEOUT );
 457:../../mod/temp/temp.c **** if ( hal_status != HAL_OK )
 150              		.loc 1 457 1 is_stmt 1 view .LVU28
 151              		.loc 1 457 4 is_stmt 0 view .LVU29
 152 001e 10B1     		cbz	r0, .L12
 458:../../mod/temp/temp.c ****     {
 459:../../mod/temp/temp.c ****     return THERMO_I2C_ERROR;
 153              		.loc 1 459 12 view .LVU30
 154 0020 0120     		movs	r0, #1
 155              	.LVL16:
 156              	.L9:
 460:../../mod/temp/temp.c ****     }
 461:../../mod/temp/temp.c **** 
 462:../../mod/temp/temp.c **** /* Load the data */
 463:../../mod/temp/temp.c **** hal_status = HAL_I2C_Master_Receive( &( THERMO_I2C )   , 
 464:../../mod/temp/temp.c ****                                      THERMO_I2C_ADDR   , 
 465:../../mod/temp/temp.c ****                                      reg_data_ptr      ,
 466:../../mod/temp/temp.c ****                                      num_bytes         , 
 467:../../mod/temp/temp.c ****                                      HAL_DEFAULT_TIMEOUT );
ARM GAS  /tmp/cc6WgIrk.s 			page 12


 468:../../mod/temp/temp.c **** if ( hal_status != HAL_OK )
 469:../../mod/temp/temp.c ****     {
 470:../../mod/temp/temp.c ****     return THERMO_I2C_ERROR;
 471:../../mod/temp/temp.c ****     }
 472:../../mod/temp/temp.c **** else
 473:../../mod/temp/temp.c ****     {
 474:../../mod/temp/temp.c ****     return THERMO_OK;
 475:../../mod/temp/temp.c ****     }
 476:../../mod/temp/temp.c **** return THERMO_OK;
 477:../../mod/temp/temp.c **** } /* read_reg */
 157              		.loc 1 477 1 view .LVU31
 158 0022 05B0     		add	sp, sp, #20
 159              	.LCFI6:
 160              		.cfi_remember_state
 161              		.cfi_def_cfa_offset 12
 162              		@ sp needed
 163 0024 30BD     		pop	{r4, r5, pc}
 164              	.LVL17:
 165              	.L12:
 166              	.LCFI7:
 167              		.cfi_restore_state
 463:../../mod/temp/temp.c ****                                      THERMO_I2C_ADDR   , 
 168              		.loc 1 463 1 is_stmt 1 view .LVU32
 463:../../mod/temp/temp.c ****                                      THERMO_I2C_ADDR   , 
 169              		.loc 1 463 14 is_stmt 0 view .LVU33
 170 0026 0A23     		movs	r3, #10
 171 0028 0093     		str	r3, [sp]
 172 002a 2B46     		mov	r3, r5
 173 002c 2246     		mov	r2, r4
 174 002e C021     		movs	r1, #192
 175 0030 0348     		ldr	r0, .L13
 176              	.LVL18:
 463:../../mod/temp/temp.c ****                                      THERMO_I2C_ADDR   , 
 177              		.loc 1 463 14 view .LVU34
 178 0032 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 179              	.LVL19:
 468:../../mod/temp/temp.c ****     {
 180              		.loc 1 468 1 is_stmt 1 view .LVU35
 468:../../mod/temp/temp.c ****     {
 181              		.loc 1 468 4 is_stmt 0 view .LVU36
 182 0036 0028     		cmp	r0, #0
 183 0038 F3D0     		beq	.L9
 470:../../mod/temp/temp.c ****     }
 184              		.loc 1 470 12 view .LVU37
 185 003a 0120     		movs	r0, #1
 186              	.LVL20:
 470:../../mod/temp/temp.c ****     }
 187              		.loc 1 470 12 view .LVU38
 188 003c F1E7     		b	.L9
 189              	.L14:
 190 003e 00BF     		.align	2
 191              	.L13:
 192 0040 00000000 		.word	hi2c1
 193              		.cfi_endproc
 194              	.LFE339:
 196              		.section	.text.temp_get_status,"ax",%progbits
 197              		.align	1
ARM GAS  /tmp/cc6WgIrk.s 			page 13


 198              		.global	temp_get_status
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 203              	temp_get_status:
 204              	.LVL21:
 205              	.LFB336:
 279:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 206              		.loc 1 279 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 279:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 210              		.loc 1 279 1 is_stmt 0 view .LVU40
 211 0000 08B5     		push	{r3, lr}
 212              	.LCFI8:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 3, -8
 215              		.cfi_offset 14, -4
 216 0002 0146     		mov	r1, r0
 283:../../mod/temp/temp.c **** 
 217              		.loc 1 283 1 is_stmt 1 view .LVU41
 289:../../mod/temp/temp.c **** 
 218              		.loc 1 289 1 view .LVU42
 219              	.LVL22:
 295:../../mod/temp/temp.c ****                           status_ptr          ,
 220              		.loc 1 295 1 view .LVU43
 295:../../mod/temp/temp.c ****                           status_ptr          ,
 221              		.loc 1 295 17 is_stmt 0 view .LVU44
 222 0004 0122     		movs	r2, #1
 223 0006 0420     		movs	r0, #4
 224              	.LVL23:
 295:../../mod/temp/temp.c ****                           status_ptr          ,
 225              		.loc 1 295 17 view .LVU45
 226 0008 FFF7FEFF 		bl	read_reg
 227              	.LVL24:
 298:../../mod/temp/temp.c ****     {
 228              		.loc 1 298 1 is_stmt 1 view .LVU46
 307:../../mod/temp/temp.c **** 
 229              		.loc 1 307 1 is_stmt 0 view .LVU47
 230 000c 08BD     		pop	{r3, pc}
 231              		.cfi_endproc
 232              	.LFE336:
 234              		.section	.text.temp_is_temp_ready,"ax",%progbits
 235              		.align	1
 236              		.global	temp_is_temp_ready
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	temp_is_temp_ready:
 242              	.LFB335:
 227:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 243              		.loc 1 227 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 00B5     		push	{lr}
ARM GAS  /tmp/cc6WgIrk.s 			page 14


 248              	.LCFI9:
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 14, -4
 251 0002 83B0     		sub	sp, sp, #12
 252              	.LCFI10:
 253              		.cfi_def_cfa_offset 16
 231:../../mod/temp/temp.c **** uint8_t       status;        /* Contents of status register      */
 254              		.loc 1 231 1 view .LVU49
 232:../../mod/temp/temp.c **** 
 255              		.loc 1 232 1 view .LVU50
 238:../../mod/temp/temp.c **** status        = 0;
 256              		.loc 1 238 1 view .LVU51
 257              	.LVL25:
 239:../../mod/temp/temp.c **** 
 258              		.loc 1 239 1 view .LVU52
 239:../../mod/temp/temp.c **** 
 259              		.loc 1 239 15 is_stmt 0 view .LVU53
 260 0004 0023     		movs	r3, #0
 261 0006 8DF80730 		strb	r3, [sp, #7]
 247:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 262              		.loc 1 247 1 is_stmt 1 view .LVU54
 247:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 263              		.loc 1 247 17 is_stmt 0 view .LVU55
 264 000a 0DF10700 		add	r0, sp, #7
 265 000e FFF7FEFF 		bl	temp_get_status
 266              	.LVL26:
 248:../../mod/temp/temp.c ****     {
 267              		.loc 1 248 1 is_stmt 1 view .LVU56
 248:../../mod/temp/temp.c ****     {
 268              		.loc 1 248 4 is_stmt 0 view .LVU57
 269 0012 30B9     		cbnz	r0, .L19
 254:../../mod/temp/temp.c ****     {
 270              		.loc 1 254 1 is_stmt 1 view .LVU58
 254:../../mod/temp/temp.c ****     {
 271              		.loc 1 254 13 is_stmt 0 view .LVU59
 272 0014 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 254:../../mod/temp/temp.c ****     {
 273              		.loc 1 254 4 view .LVU60
 274 0018 13F0400F 		tst	r3, #64
 275 001c 05D0     		beq	.L20
 256:../../mod/temp/temp.c ****     }
 276              		.loc 1 256 12 view .LVU61
 277 001e 0120     		movs	r0, #1
 278              	.LVL27:
 256:../../mod/temp/temp.c ****     }
 279              		.loc 1 256 12 view .LVU62
 280 0020 00E0     		b	.L18
 281              	.LVL28:
 282              	.L19:
 250:../../mod/temp/temp.c ****     }
 283              		.loc 1 250 12 view .LVU63
 284 0022 0020     		movs	r0, #0
 285              	.LVL29:
 286              	.L18:
 263:../../mod/temp/temp.c **** 
 287              		.loc 1 263 1 view .LVU64
 288 0024 03B0     		add	sp, sp, #12
ARM GAS  /tmp/cc6WgIrk.s 			page 15


 289              	.LCFI11:
 290              		.cfi_remember_state
 291              		.cfi_def_cfa_offset 4
 292              		@ sp needed
 293 0026 5DF804FB 		ldr	pc, [sp], #4
 294              	.LVL30:
 295              	.L20:
 296              	.LCFI12:
 297              		.cfi_restore_state
 260:../../mod/temp/temp.c ****     }
 298              		.loc 1 260 12 view .LVU65
 299 002a 0020     		movs	r0, #0
 300              	.LVL31:
 260:../../mod/temp/temp.c ****     }
 301              		.loc 1 260 12 view .LVU66
 302 002c FAE7     		b	.L18
 303              		.cfi_endproc
 304              	.LFE335:
 306              		.section	.text.temp_get_temp,"ax",%progbits
 307              		.align	1
 308              		.global	temp_get_temp
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	temp_get_temp:
 314              	.LVL32:
 315              	.LFB334:
 149:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 316              		.loc 1 149 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 8
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 149:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 320              		.loc 1 149 1 is_stmt 0 view .LVU68
 321 0000 30B5     		push	{r4, r5, lr}
 322              	.LCFI13:
 323              		.cfi_def_cfa_offset 12
 324              		.cfi_offset 4, -12
 325              		.cfi_offset 5, -8
 326              		.cfi_offset 14, -4
 327 0002 83B0     		sub	sp, sp, #12
 328              	.LCFI14:
 329              		.cfi_def_cfa_offset 24
 330 0004 0446     		mov	r4, r0
 153:../../mod/temp/temp.c **** uint8_t       temp_bytes[2]; /* Bytes read from thermocouple        */
 331              		.loc 1 153 1 is_stmt 1 view .LVU69
 154:../../mod/temp/temp.c **** uint8_t       data_reg_id;   /* ID of register containing temp data */
 332              		.loc 1 154 1 view .LVU70
 155:../../mod/temp/temp.c **** 
 333              		.loc 1 155 1 view .LVU71
 161:../../mod/temp/temp.c **** memset( &temp_bytes[0], 0, sizeof( temp_bytes ) );
 334              		.loc 1 161 1 view .LVU72
 335              	.LVL33:
 162:../../mod/temp/temp.c **** switch ( junction )
 336              		.loc 1 162 1 view .LVU73
 337 0006 0023     		movs	r3, #0
 338 0008 ADF80430 		strh	r3, [sp, #4]	@ movhi
ARM GAS  /tmp/cc6WgIrk.s 			page 16


 163:../../mod/temp/temp.c ****     {
 339              		.loc 1 163 1 view .LVU74
 340 000c D9B1     		cbz	r1, .L26
 341 000e 0129     		cmp	r1, #1
 342 0010 1BD1     		bne	.L27
 172:../../mod/temp/temp.c ****         break;
 343              		.loc 1 172 21 is_stmt 0 view .LVU75
 344 0012 0025     		movs	r5, #0
 345              	.LVL34:
 346              	.L25:
 187:../../mod/temp/temp.c **** 
 347              		.loc 1 187 33 is_stmt 1 discriminator 1 view .LVU76
 187:../../mod/temp/temp.c **** 
 348              		.loc 1 187 9 discriminator 1 view .LVU77
 187:../../mod/temp/temp.c **** 
 349              		.loc 1 187 10 is_stmt 0 discriminator 1 view .LVU78
 350 0014 FFF7FEFF 		bl	temp_is_temp_ready
 351              	.LVL35:
 187:../../mod/temp/temp.c **** 
 352              		.loc 1 187 9 discriminator 1 view .LVU79
 353 0018 0028     		cmp	r0, #0
 354 001a FBD0     		beq	.L25
 190:../../mod/temp/temp.c ****                           &temp_bytes[0],
 355              		.loc 1 190 1 is_stmt 1 view .LVU80
 190:../../mod/temp/temp.c ****                           &temp_bytes[0],
 356              		.loc 1 190 17 is_stmt 0 view .LVU81
 357 001c 0222     		movs	r2, #2
 358 001e 01A9     		add	r1, sp, #4
 359 0020 2846     		mov	r0, r5
 360 0022 FFF7FEFF 		bl	read_reg
 361              	.LVL36:
 193:../../mod/temp/temp.c ****     {
 362              		.loc 1 193 1 is_stmt 1 view .LVU82
 193:../../mod/temp/temp.c ****     {
 363              		.loc 1 193 4 is_stmt 0 view .LVU83
 364 0026 0346     		mov	r3, r0
 365 0028 80B9     		cbnz	r0, .L24
 199:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 366              		.loc 1 199 1 is_stmt 1 view .LVU84
 199:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 367              		.loc 1 199 17 is_stmt 0 view .LVU85
 368 002a 0021     		movs	r1, #0
 369 002c 0420     		movs	r0, #4
 370              	.LVL37:
 199:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 371              		.loc 1 199 17 view .LVU86
 372 002e FFF7FEFF 		bl	write_reg
 373              	.LVL38:
 200:../../mod/temp/temp.c ****     {
 374              		.loc 1 200 1 is_stmt 1 view .LVU87
 200:../../mod/temp/temp.c ****     {
 375              		.loc 1 200 4 is_stmt 0 view .LVU88
 376 0032 0346     		mov	r3, r0
 377 0034 50B9     		cbnz	r0, .L24
 206:../../mod/temp/temp.c ****             ( (uint32_t) temp_bytes[1] << 0 );
 378              		.loc 1 206 1 is_stmt 1 view .LVU89
 206:../../mod/temp/temp.c ****             ( (uint32_t) temp_bytes[1] << 0 );
ARM GAS  /tmp/cc6WgIrk.s 			page 17


 379              		.loc 1 206 36 is_stmt 0 view .LVU90
 380 0036 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 207:../../mod/temp/temp.c **** return THERMO_OK;
 381              		.loc 1 207 36 view .LVU91
 382 003a 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 206:../../mod/temp/temp.c ****             ( (uint32_t) temp_bytes[1] << 0 );
 383              		.loc 1 206 47 view .LVU92
 384 003e 42EA0122 		orr	r2, r2, r1, lsl #8
 206:../../mod/temp/temp.c ****             ( (uint32_t) temp_bytes[1] << 0 );
 385              		.loc 1 206 11 view .LVU93
 386 0042 2260     		str	r2, [r4]
 208:../../mod/temp/temp.c **** 
 387              		.loc 1 208 1 is_stmt 1 view .LVU94
 208:../../mod/temp/temp.c **** 
 388              		.loc 1 208 8 is_stmt 0 view .LVU95
 389 0044 02E0     		b	.L24
 390              	.LVL39:
 391              	.L26:
 163:../../mod/temp/temp.c ****     {
 392              		.loc 1 163 1 view .LVU96
 393 0046 0225     		movs	r5, #2
 394 0048 E4E7     		b	.L25
 395              	.L27:
 396 004a 0323     		movs	r3, #3
 397              	.LVL40:
 398              	.L24:
 210:../../mod/temp/temp.c **** 
 399              		.loc 1 210 1 view .LVU97
 400 004c 1846     		mov	r0, r3
 401 004e 03B0     		add	sp, sp, #12
 402              	.LCFI15:
 403              		.cfi_def_cfa_offset 12
 404              		@ sp needed
 405 0050 30BD     		pop	{r4, r5, pc}
 210:../../mod/temp/temp.c **** 
 406              		.loc 1 210 1 view .LVU98
 407              		.cfi_endproc
 408              	.LFE334:
 410              		.section	.text.temp_get_device_id,"ax",%progbits
 411              		.align	1
 412              		.global	temp_get_device_id
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 417              	temp_get_device_id:
 418              	.LVL41:
 419              	.LFB337:
 323:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 420              		.loc 1 323 1 is_stmt 1 view -0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 323:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 424              		.loc 1 323 1 is_stmt 0 view .LVU100
 425 0000 08B5     		push	{r3, lr}
 426              	.LCFI16:
 427              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc6WgIrk.s 			page 18


 428              		.cfi_offset 3, -8
 429              		.cfi_offset 14, -4
 430 0002 0146     		mov	r1, r0
 327:../../mod/temp/temp.c **** 
 431              		.loc 1 327 1 is_stmt 1 view .LVU101
 333:../../mod/temp/temp.c **** 
 432              		.loc 1 333 1 view .LVU102
 433              	.LVL42:
 339:../../mod/temp/temp.c ****                           device_id_ptr       ,
 434              		.loc 1 339 1 view .LVU103
 339:../../mod/temp/temp.c ****                           device_id_ptr       ,
 435              		.loc 1 339 17 is_stmt 0 view .LVU104
 436 0004 0122     		movs	r2, #1
 437 0006 2020     		movs	r0, #32
 438              	.LVL43:
 339:../../mod/temp/temp.c ****                           device_id_ptr       ,
 439              		.loc 1 339 17 view .LVU105
 440 0008 FFF7FEFF 		bl	read_reg
 441              	.LVL44:
 342:../../mod/temp/temp.c ****     {
 442              		.loc 1 342 1 is_stmt 1 view .LVU106
 351:../../mod/temp/temp.c **** 
 443              		.loc 1 351 1 is_stmt 0 view .LVU107
 444 000c 08BD     		pop	{r3, pc}
 445              		.cfi_endproc
 446              	.LFE337:
 448              		.section	.text.temp_init,"ax",%progbits
 449              		.align	1
 450              		.global	temp_init
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	temp_init:
 456              	.LVL45:
 457              	.LFB333:
  68:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 458              		.loc 1 68 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 0, uses_anonymous_args = 0
  68:../../mod/temp/temp.c **** /*------------------------------------------------------------------------------
 462              		.loc 1 68 1 is_stmt 0 view .LVU109
 463 0000 70B5     		push	{r4, r5, r6, lr}
 464              	.LCFI17:
 465              		.cfi_def_cfa_offset 16
 466              		.cfi_offset 4, -16
 467              		.cfi_offset 5, -12
 468              		.cfi_offset 6, -8
 469              		.cfi_offset 14, -4
 470 0002 82B0     		sub	sp, sp, #8
 471              	.LCFI18:
 472              		.cfi_def_cfa_offset 24
 473 0004 0446     		mov	r4, r0
  72:../../mod/temp/temp.c **** uint8_t       sensor_config_reg; /* Contents of thermocouple sensor config 
 474              		.loc 1 72 1 is_stmt 1 view .LVU110
  73:../../mod/temp/temp.c ****                                     register                               */
 475              		.loc 1 73 1 view .LVU111
ARM GAS  /tmp/cc6WgIrk.s 			page 19


  75:../../mod/temp/temp.c ****                                     register                               */
 476              		.loc 1 75 1 view .LVU112
  77:../../mod/temp/temp.c **** 
 477              		.loc 1 77 1 view .LVU113
  83:../../mod/temp/temp.c **** sensor_config_reg = 0;
 478              		.loc 1 83 1 view .LVU114
 479              	.LVL46:
  84:../../mod/temp/temp.c **** dev_config_reg    = 0;
 480              		.loc 1 84 1 view .LVU115
  85:../../mod/temp/temp.c **** device_id         = 0;
 481              		.loc 1 85 1 view .LVU116
  86:../../mod/temp/temp.c **** 
 482              		.loc 1 86 1 view .LVU117
  86:../../mod/temp/temp.c **** 
 483              		.loc 1 86 19 is_stmt 0 view .LVU118
 484 0006 0023     		movs	r3, #0
 485 0008 8DF80730 		strb	r3, [sp, #7]
  94:../../mod/temp/temp.c **** sensor_config_reg |= thermo_config_ptr -> filter_coeff;
 486              		.loc 1 94 1 is_stmt 1 view .LVU119
  94:../../mod/temp/temp.c **** sensor_config_reg |= thermo_config_ptr -> filter_coeff;
 487              		.loc 1 94 40 is_stmt 0 view .LVU120
 488 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  94:../../mod/temp/temp.c **** sensor_config_reg |= thermo_config_ptr -> filter_coeff;
 489              		.loc 1 94 64 view .LVU121
 490 000e 1B01     		lsls	r3, r3, #4
  94:../../mod/temp/temp.c **** sensor_config_reg |= thermo_config_ptr -> filter_coeff;
 491              		.loc 1 94 19 view .LVU122
 492 0010 DBB2     		uxtb	r3, r3
 493              	.LVL47:
  95:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> cold_junc_resolution << 7;
 494              		.loc 1 95 1 is_stmt 1 view .LVU123
  95:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> cold_junc_resolution << 7;
 495              		.loc 1 95 40 is_stmt 0 view .LVU124
 496 0012 4578     		ldrb	r5, [r0, #1]	@ zero_extendqisi2
  95:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> cold_junc_resolution << 7;
 497              		.loc 1 95 19 view .LVU125
 498 0014 1D43     		orrs	r5, r5, r3
 499              	.LVL48:
  96:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> adc_resolution       << 5;
 500              		.loc 1 96 1 is_stmt 1 view .LVU126
  96:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> adc_resolution       << 5;
 501              		.loc 1 96 40 is_stmt 0 view .LVU127
 502 0016 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  96:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> adc_resolution       << 5;
 503              		.loc 1 96 64 view .LVU128
 504 0018 DB01     		lsls	r3, r3, #7
  96:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> adc_resolution       << 5;
 505              		.loc 1 96 19 view .LVU129
 506 001a 5BB2     		sxtb	r3, r3
 507              	.LVL49:
  97:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> burst_mode           << 2;
 508              		.loc 1 97 1 is_stmt 1 view .LVU130
  97:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> burst_mode           << 2;
 509              		.loc 1 97 40 is_stmt 0 view .LVU131
 510 001c 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
  97:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> burst_mode           << 2;
 511              		.loc 1 97 19 view .LVU132
ARM GAS  /tmp/cc6WgIrk.s 			page 20


 512 001e 43EA4213 		orr	r3, r3, r2, lsl #5
 513 0022 5BB2     		sxtb	r3, r3
 514              	.LVL50:
  98:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> shutdown_mode;
 515              		.loc 1 98 1 is_stmt 1 view .LVU133
  98:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> shutdown_mode;
 516              		.loc 1 98 40 is_stmt 0 view .LVU134
 517 0024 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
  98:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> shutdown_mode;
 518              		.loc 1 98 19 view .LVU135
 519 0026 43EA8203 		orr	r3, r3, r2, lsl #2
 520              	.LVL51:
  98:../../mod/temp/temp.c **** dev_config_reg    |= thermo_config_ptr -> shutdown_mode;
 521              		.loc 1 98 19 view .LVU136
 522 002a DBB2     		uxtb	r3, r3
 523              	.LVL52:
  99:../../mod/temp/temp.c **** 
 524              		.loc 1 99 1 is_stmt 1 view .LVU137
  99:../../mod/temp/temp.c **** 
 525              		.loc 1 99 40 is_stmt 0 view .LVU138
 526 002c 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
  99:../../mod/temp/temp.c **** 
 527              		.loc 1 99 19 view .LVU139
 528 002e 41EA0306 		orr	r6, r1, r3
 529              	.LVL53:
 102:../../mod/temp/temp.c **** if      ( thermo_status != THERMO_OK )
 530              		.loc 1 102 1 is_stmt 1 view .LVU140
 102:../../mod/temp/temp.c **** if      ( thermo_status != THERMO_OK )
 531              		.loc 1 102 17 is_stmt 0 view .LVU141
 532 0032 0DF10700 		add	r0, sp, #7
 533              	.LVL54:
 102:../../mod/temp/temp.c **** if      ( thermo_status != THERMO_OK )
 534              		.loc 1 102 17 view .LVU142
 535 0036 FFF7FEFF 		bl	temp_get_device_id
 536              	.LVL55:
 103:../../mod/temp/temp.c ****     {
 537              		.loc 1 103 1 is_stmt 1 view .LVU143
 103:../../mod/temp/temp.c ****     {
 538              		.loc 1 103 9 is_stmt 0 view .LVU144
 539 003a 0346     		mov	r3, r0
 540 003c 20B9     		cbnz	r0, .L32
 107:../../mod/temp/temp.c ****     {
 541              		.loc 1 107 6 is_stmt 1 view .LVU145
 107:../../mod/temp/temp.c ****     {
 542              		.loc 1 107 21 is_stmt 0 view .LVU146
 543 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 107:../../mod/temp/temp.c ****     {
 544              		.loc 1 107 9 view .LVU147
 545 0042 412B     		cmp	r3, #65
 546 0044 03D0     		beq	.L35
 109:../../mod/temp/temp.c ****     }
 547              		.loc 1 109 12 view .LVU148
 548 0046 0223     		movs	r3, #2
 549              	.LVL56:
 550              	.L32:
 132:../../mod/temp/temp.c **** 
 551              		.loc 1 132 1 view .LVU149
ARM GAS  /tmp/cc6WgIrk.s 			page 21


 552 0048 1846     		mov	r0, r3
 553 004a 02B0     		add	sp, sp, #8
 554              	.LCFI19:
 555              		.cfi_remember_state
 556              		.cfi_def_cfa_offset 16
 557              		@ sp needed
 558 004c 70BD     		pop	{r4, r5, r6, pc}
 559              	.LVL57:
 560              	.L35:
 561              	.LCFI20:
 562              		.cfi_restore_state
 113:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 563              		.loc 1 113 1 is_stmt 1 view .LVU150
 113:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 564              		.loc 1 113 17 is_stmt 0 view .LVU151
 565 004e 2946     		mov	r1, r5
 566 0050 0520     		movs	r0, #5
 567              	.LVL58:
 113:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 568              		.loc 1 113 17 view .LVU152
 569 0052 FFF7FEFF 		bl	write_reg
 570              	.LVL59:
 114:../../mod/temp/temp.c ****     {
 571              		.loc 1 114 1 is_stmt 1 view .LVU153
 114:../../mod/temp/temp.c ****     {
 572              		.loc 1 114 4 is_stmt 0 view .LVU154
 573 0056 0346     		mov	r3, r0
 574 0058 0028     		cmp	r0, #0
 575 005a F5D1     		bne	.L32
 118:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 576              		.loc 1 118 1 is_stmt 1 view .LVU155
 118:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 577              		.loc 1 118 17 is_stmt 0 view .LVU156
 578 005c 3146     		mov	r1, r6
 579 005e 0620     		movs	r0, #6
 580              	.LVL60:
 118:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 581              		.loc 1 118 17 view .LVU157
 582 0060 FFF7FEFF 		bl	write_reg
 583              	.LVL61:
 119:../../mod/temp/temp.c ****     {
 584              		.loc 1 119 1 is_stmt 1 view .LVU158
 119:../../mod/temp/temp.c ****     {
 585              		.loc 1 119 4 is_stmt 0 view .LVU159
 586 0064 0346     		mov	r3, r0
 587 0066 0028     		cmp	r0, #0
 588 0068 EED1     		bne	.L32
 125:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 589              		.loc 1 125 1 is_stmt 1 view .LVU160
 125:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 590              		.loc 1 125 17 is_stmt 0 view .LVU161
 591 006a A01D     		adds	r0, r4, #6
 592              	.LVL62:
 125:../../mod/temp/temp.c **** if ( thermo_status != THERMO_OK )
 593              		.loc 1 125 17 view .LVU162
 594 006c FFF7FEFF 		bl	temp_get_status
 595              	.LVL63:
ARM GAS  /tmp/cc6WgIrk.s 			page 22


 596 0070 0346     		mov	r3, r0
 597              	.LVL64:
 126:../../mod/temp/temp.c ****     {
 598              		.loc 1 126 1 is_stmt 1 view .LVU163
 599 0072 E9E7     		b	.L32
 600              		.cfi_endproc
 601              	.LFE333:
 603              		.text
 604              	.Letext0:
 605              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 606              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 607              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 608              		.file 5 "../../lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 609              		.file 6 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 610              		.file 7 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 611              		.file 8 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 612              		.file 9 "../../mod/temp/temp.h"
 613              		.file 10 "/usr/arm-none-eabi/include/string.h"
 614              		.file 11 "../../lib/sdr_pin_defines_L0002.h"
ARM GAS  /tmp/cc6WgIrk.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 temp.c
     /tmp/cc6WgIrk.s:20     .text.write_reg:0000000000000000 $t
     /tmp/cc6WgIrk.s:25     .text.write_reg:0000000000000000 write_reg
     /tmp/cc6WgIrk.s:101    .text.write_reg:0000000000000044 $d
     /tmp/cc6WgIrk.s:106    .text.read_reg:0000000000000000 $t
     /tmp/cc6WgIrk.s:111    .text.read_reg:0000000000000000 read_reg
     /tmp/cc6WgIrk.s:192    .text.read_reg:0000000000000040 $d
     /tmp/cc6WgIrk.s:197    .text.temp_get_status:0000000000000000 $t
     /tmp/cc6WgIrk.s:203    .text.temp_get_status:0000000000000000 temp_get_status
     /tmp/cc6WgIrk.s:235    .text.temp_is_temp_ready:0000000000000000 $t
     /tmp/cc6WgIrk.s:241    .text.temp_is_temp_ready:0000000000000000 temp_is_temp_ready
     /tmp/cc6WgIrk.s:307    .text.temp_get_temp:0000000000000000 $t
     /tmp/cc6WgIrk.s:313    .text.temp_get_temp:0000000000000000 temp_get_temp
     /tmp/cc6WgIrk.s:411    .text.temp_get_device_id:0000000000000000 $t
     /tmp/cc6WgIrk.s:417    .text.temp_get_device_id:0000000000000000 temp_get_device_id
     /tmp/cc6WgIrk.s:449    .text.temp_init:0000000000000000 $t
     /tmp/cc6WgIrk.s:455    .text.temp_init:0000000000000000 temp_init

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
hi2c1
HAL_I2C_Master_Receive
