ARM GAS  /tmp/ccdCxlVK.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"ignition.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "../../mod/ignition/ignition.c"
  19              		.section	.text.ign_solid_prop_cont,"ax",%progbits
  20              		.align	1
  21              		.global	ign_solid_prop_cont
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	ign_solid_prop_cont:
  27              	.LFB336:
   1:../../mod/ignition/ignition.c **** /*******************************************************************************
   2:../../mod/ignition/ignition.c **** *
   3:../../mod/ignition/ignition.c **** * FILE: 
   4:../../mod/ignition/ignition.c **** * 		ignition.c
   5:../../mod/ignition/ignition.c **** *
   6:../../mod/ignition/ignition.c **** * DESCRIPTION: 
   7:../../mod/ignition/ignition.c **** * 		Contains API function to the engine controller ignition system and 
   8:../../mod/ignition/ignition.c **** *       contintuity readings
   9:../../mod/ignition/ignition.c **** *
  10:../../mod/ignition/ignition.c **** *******************************************************************************/
  11:../../mod/ignition/ignition.c **** 
  12:../../mod/ignition/ignition.c **** 
  13:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
  14:../../mod/ignition/ignition.c ****  Standard Includes                                                                     
  15:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
  16:../../mod/ignition/ignition.c **** #include <stdbool.h>
  17:../../mod/ignition/ignition.c **** 
  18:../../mod/ignition/ignition.c **** 
  19:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
  20:../../mod/ignition/ignition.c ****  MCU Pins 
  21:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
  22:../../mod/ignition/ignition.c **** #if   defined( FLIGHT_COMPUTER      )
  23:../../mod/ignition/ignition.c **** 	#include "sdr_pin_defines_A0002.h"
  24:../../mod/ignition/ignition.c **** #elif defined( ENGINE_CONTROLLER    )
  25:../../mod/ignition/ignition.c **** 	#include "sdr_pin_defines_L0002.h"
  26:../../mod/ignition/ignition.c **** #elif defined( FLIGHT_COMPUTER_LITE )
  27:../../mod/ignition/ignition.c **** 	#include "sdr_pin_defines_A0007.h"
  28:../../mod/ignition/ignition.c **** #endif
  29:../../mod/ignition/ignition.c **** 
  30:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
  31:../../mod/ignition/ignition.c ****  Project Includes                                                                     
ARM GAS  /tmp/ccdCxlVK.s 			page 2


  32:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
  33:../../mod/ignition/ignition.c **** #include "main.h"
  34:../../mod/ignition/ignition.c **** #include "ignition.h"
  35:../../mod/ignition/ignition.c **** 
  36:../../mod/ignition/ignition.c **** 
  37:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
  38:../../mod/ignition/ignition.c ****  Procedures 
  39:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
  40:../../mod/ignition/ignition.c **** 
  41:../../mod/ignition/ignition.c **** 
  42:../../mod/ignition/ignition.c **** /*******************************************************************************
  43:../../mod/ignition/ignition.c **** *                                                                              *
  44:../../mod/ignition/ignition.c **** * PROCEDURE:                                                                   * 
  45:../../mod/ignition/ignition.c **** * 		ign_cmd_execute                                                        *
  46:../../mod/ignition/ignition.c **** *                                                                              *
  47:../../mod/ignition/ignition.c **** * DESCRIPTION:                                                                 * 
  48:../../mod/ignition/ignition.c **** * 		Executes an ignition subcommand based on user input from the sdec      *
  49:../../mod/ignition/ignition.c **** *       terminal                                                               *
  50:../../mod/ignition/ignition.c **** *                                                                              *
  51:../../mod/ignition/ignition.c **** *******************************************************************************/
  52:../../mod/ignition/ignition.c **** IGN_STATUS ign_cmd_execute
  53:../../mod/ignition/ignition.c **** 	(
  54:../../mod/ignition/ignition.c ****     IGN_SUBCOMMAND ign_subcommand
  55:../../mod/ignition/ignition.c ****     )
  56:../../mod/ignition/ignition.c **** {
  57:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
  58:../../mod/ignition/ignition.c ****  Local Variables 
  59:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
  60:../../mod/ignition/ignition.c **** IGN_STATUS ign_status = 0; /* Status code returned by ignite API function */
  61:../../mod/ignition/ignition.c **** 
  62:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
  63:../../mod/ignition/ignition.c ****  Call API function 
  64:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
  65:../../mod/ignition/ignition.c **** switch( ign_subcommand )
  66:../../mod/ignition/ignition.c **** 	{
  67:../../mod/ignition/ignition.c **** 	#if defined( FLIGHT_COMPUTER )
  68:../../mod/ignition/ignition.c ****     /* Deploy main */
  69:../../mod/ignition/ignition.c **** 	case IGN_MAIN_DEPLOY_CODE:
  70:../../mod/ignition/ignition.c **** 		{
  71:../../mod/ignition/ignition.c **** 		ign_status = ign_deploy_main();
  72:../../mod/ignition/ignition.c **** 		break;
  73:../../mod/ignition/ignition.c **** 		}
  74:../../mod/ignition/ignition.c **** 
  75:../../mod/ignition/ignition.c ****     /* Deploy drogue */
  76:../../mod/ignition/ignition.c **** 	case IGN_DROGUE_DEPLOY_CODE:
  77:../../mod/ignition/ignition.c **** 		{
  78:../../mod/ignition/ignition.c **** 		ign_status = ign_deploy_drogue();
  79:../../mod/ignition/ignition.c **** 		break;
  80:../../mod/ignition/ignition.c **** 		}
  81:../../mod/ignition/ignition.c **** 
  82:../../mod/ignition/ignition.c **** 	#elif defined( ENGINE_CONTROLLER )
  83:../../mod/ignition/ignition.c ****     /* Light ematch */
  84:../../mod/ignition/ignition.c **** 	case IGN_FIRE_CODE:
  85:../../mod/ignition/ignition.c **** 		{
  86:../../mod/ignition/ignition.c **** 		ign_status = ign_ignite();
  87:../../mod/ignition/ignition.c **** 		break;
  88:../../mod/ignition/ignition.c **** 		}
ARM GAS  /tmp/ccdCxlVK.s 			page 3


  89:../../mod/ignition/ignition.c **** 
  90:../../mod/ignition/ignition.c **** 	#endif /* #elif defined( ENGINE_CONTROLLER ) */
  91:../../mod/ignition/ignition.c **** 
  92:../../mod/ignition/ignition.c **** 	/* Return continuity information */
  93:../../mod/ignition/ignition.c **** 	case IGN_CONT_CODE:
  94:../../mod/ignition/ignition.c **** 		{
  95:../../mod/ignition/ignition.c **** 		ign_status = ign_get_cont_info();
  96:../../mod/ignition/ignition.c **** 		break;
  97:../../mod/ignition/ignition.c **** 		}
  98:../../mod/ignition/ignition.c **** 
  99:../../mod/ignition/ignition.c ****     /* Unrecognized subcommand code: call error handler */
 100:../../mod/ignition/ignition.c **** 	default:
 101:../../mod/ignition/ignition.c **** 		{
 102:../../mod/ignition/ignition.c **** 		return IGN_UNRECOGNIZED_CMD;
 103:../../mod/ignition/ignition.c **** 		break;
 104:../../mod/ignition/ignition.c **** 		}
 105:../../mod/ignition/ignition.c ****     }
 106:../../mod/ignition/ignition.c **** 
 107:../../mod/ignition/ignition.c **** /* Return the response code */
 108:../../mod/ignition/ignition.c **** return ign_status;
 109:../../mod/ignition/ignition.c **** 
 110:../../mod/ignition/ignition.c **** } /* ign_cmd_execute */
 111:../../mod/ignition/ignition.c **** 
 112:../../mod/ignition/ignition.c **** 
 113:../../mod/ignition/ignition.c **** #if defined( ENGINE_CONTROLLER )
 114:../../mod/ignition/ignition.c **** /*******************************************************************************
 115:../../mod/ignition/ignition.c **** *                                                                              *
 116:../../mod/ignition/ignition.c **** * PROCEDURE:                                                                   * 
 117:../../mod/ignition/ignition.c **** * 		ign_ignite                                                             *
 118:../../mod/ignition/ignition.c **** *                                                                              *
 119:../../mod/ignition/ignition.c **** * DESCRIPTION:                                                                 * 
 120:../../mod/ignition/ignition.c **** * 		Asserts the ignition signal to ignite the engine ematch. Returns a     *
 121:../../mod/ignition/ignition.c **** *       response code indicating if the ignition occured succesfully           *
 122:../../mod/ignition/ignition.c **** *                                                                              *
 123:../../mod/ignition/ignition.c **** *******************************************************************************/
 124:../../mod/ignition/ignition.c **** IGN_STATUS ign_ignite
 125:../../mod/ignition/ignition.c ****     (
 126:../../mod/ignition/ignition.c **** 	void
 127:../../mod/ignition/ignition.c ****     )
 128:../../mod/ignition/ignition.c **** {
 129:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
 130:../../mod/ignition/ignition.c ****  API function implementation
 131:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
 132:../../mod/ignition/ignition.c **** 
 133:../../mod/ignition/ignition.c **** /* Check for e-match/switch continuity */
 134:../../mod/ignition/ignition.c **** if ( !ign_ematch_cont() )
 135:../../mod/ignition/ignition.c **** 	{
 136:../../mod/ignition/ignition.c ****     /* No continuity across ematch and/or switch */
 137:../../mod/ignition/ignition.c ****     return IGN_EMATCH_CONT_FAIL; 
 138:../../mod/ignition/ignition.c ****     }
 139:../../mod/ignition/ignition.c **** 
 140:../../mod/ignition/ignition.c **** /* Check that power supply is not USB */
 141:../../mod/ignition/ignition.c **** 
 142:../../mod/ignition/ignition.c **** /* Assert ignition signal for 10 ms */
 143:../../mod/ignition/ignition.c **** HAL_GPIO_WritePin(FIRE_GPIO_PORT, FIRE_PIN, GPIO_PIN_SET  );
 144:../../mod/ignition/ignition.c **** HAL_Delay( IGN_BURN_DELAY );
 145:../../mod/ignition/ignition.c **** HAL_GPIO_WritePin(FIRE_GPIO_PORT, FIRE_PIN, GPIO_PIN_RESET);
ARM GAS  /tmp/ccdCxlVK.s 			page 4


 146:../../mod/ignition/ignition.c **** 
 147:../../mod/ignition/ignition.c **** /* Check ematch continuity to check that ematch was lit */
 148:../../mod/ignition/ignition.c **** if ( !ign_ematch_cont() )
 149:../../mod/ignition/ignition.c **** 	{
 150:../../mod/ignition/ignition.c ****     return IGN_SUCCESS;
 151:../../mod/ignition/ignition.c ****     }
 152:../../mod/ignition/ignition.c **** else /* Ignition unsuccessful */
 153:../../mod/ignition/ignition.c **** 	{
 154:../../mod/ignition/ignition.c ****     return IGN_FAIL;
 155:../../mod/ignition/ignition.c ****     }
 156:../../mod/ignition/ignition.c **** 
 157:../../mod/ignition/ignition.c **** } /* ignite */
 158:../../mod/ignition/ignition.c **** #endif /* #if defined( ENGINE_CONTROLLER ) */
 159:../../mod/ignition/ignition.c **** 
 160:../../mod/ignition/ignition.c **** /*******************************************************************************
 161:../../mod/ignition/ignition.c **** *                                                                              *
 162:../../mod/ignition/ignition.c **** * PROCEDURE:                                                                   * 
 163:../../mod/ignition/ignition.c **** * 		ign_get_cont_info                                                      *
 164:../../mod/ignition/ignition.c **** *                                                                              *
 165:../../mod/ignition/ignition.c **** * DESCRIPTION:                                                                 * 
 166:../../mod/ignition/ignition.c **** * 		Polls each continuity pin and sets the continuity bits in the          *
 167:../../mod/ignition/ignition.c **** *       response code                                                          *   
 168:../../mod/ignition/ignition.c **** *                                                                              *
 169:../../mod/ignition/ignition.c **** *******************************************************************************/
 170:../../mod/ignition/ignition.c **** IGN_STATUS ign_get_cont_info
 171:../../mod/ignition/ignition.c **** 	(
 172:../../mod/ignition/ignition.c ****     void
 173:../../mod/ignition/ignition.c ****     )
 174:../../mod/ignition/ignition.c **** {
 175:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
 176:../../mod/ignition/ignition.c ****  Local Variables 
 177:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
 178:../../mod/ignition/ignition.c **** IGN_STATUS ign_status = 0; /* Status code to be returned */
 179:../../mod/ignition/ignition.c **** 
 180:../../mod/ignition/ignition.c **** 
 181:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
 182:../../mod/ignition/ignition.c ****  Call API functions 
 183:../../mod/ignition/ignition.c **** ------------------------------------------------------------------------------*/
 184:../../mod/ignition/ignition.c **** 
 185:../../mod/ignition/ignition.c **** #if defined( ENGINE_CONTROLLER )
 186:../../mod/ignition/ignition.c **** /* Poll the ematch continuity pin */
 187:../../mod/ignition/ignition.c **** if ( ign_ematch_cont() )
 188:../../mod/ignition/ignition.c **** 	{
 189:../../mod/ignition/ignition.c ****     ign_status |= IGN_E_CONT_MASK;
 190:../../mod/ignition/ignition.c ****     }
 191:../../mod/ignition/ignition.c **** 
 192:../../mod/ignition/ignition.c **** /* Poll the solid propellant continuity pin */
 193:../../mod/ignition/ignition.c **** if ( ign_solid_prop_cont() )
 194:../../mod/ignition/ignition.c **** 	{
 195:../../mod/ignition/ignition.c ****     ign_status |= IGN_SP_CONT_MASK;
 196:../../mod/ignition/ignition.c ****     }
 197:../../mod/ignition/ignition.c **** 
 198:../../mod/ignition/ignition.c **** /* Poll the nozzle continuity pin */
 199:../../mod/ignition/ignition.c **** if ( ign_nozzle_cont() )
 200:../../mod/ignition/ignition.c **** 	{
 201:../../mod/ignition/ignition.c ****     ign_status |= IGN_NOZ_CONT_MASK;
 202:../../mod/ignition/ignition.c ****     }
ARM GAS  /tmp/ccdCxlVK.s 			page 5


 203:../../mod/ignition/ignition.c **** #elif ( defined( FLIGHT_COMPUTER ) || defined( FLIGHT_COMPUTER_LITE ) )
 204:../../mod/ignition/ignition.c **** /* Poll the switch continuity pin */
 205:../../mod/ignition/ignition.c **** if ( ign_switch_cont() )
 206:../../mod/ignition/ignition.c **** 	{
 207:../../mod/ignition/ignition.c ****     ign_status |= IGN_SWITCH_MASK;
 208:../../mod/ignition/ignition.c ****     }
 209:../../mod/ignition/ignition.c **** 
 210:../../mod/ignition/ignition.c **** /* Poll the main parachute deployment continuity pin */
 211:../../mod/ignition/ignition.c **** if ( ign_main_cont() )
 212:../../mod/ignition/ignition.c **** 	{
 213:../../mod/ignition/ignition.c ****     ign_status |= IGN_MAIN_CONT_MASK;
 214:../../mod/ignition/ignition.c ****     }
 215:../../mod/ignition/ignition.c **** 
 216:../../mod/ignition/ignition.c **** /* Poll the drogue parachute deployment continuity pin */
 217:../../mod/ignition/ignition.c **** if ( ign_drogue_cont() )
 218:../../mod/ignition/ignition.c **** 	{
 219:../../mod/ignition/ignition.c ****     ign_status |= IGN_DROGUE_CONT_MASK;
 220:../../mod/ignition/ignition.c ****     }
 221:../../mod/ignition/ignition.c **** #endif /* elif defined( FLIGHT_COMPUTER ) */
 222:../../mod/ignition/ignition.c **** 
 223:../../mod/ignition/ignition.c **** /* Return the status code */
 224:../../mod/ignition/ignition.c **** return ign_status;
 225:../../mod/ignition/ignition.c **** 
 226:../../mod/ignition/ignition.c **** } /* ign_get_cont_info */
 227:../../mod/ignition/ignition.c **** 
 228:../../mod/ignition/ignition.c **** 
 229:../../mod/ignition/ignition.c **** #if defined( ENGINE_CONTROLLER )
 230:../../mod/ignition/ignition.c **** /*******************************************************************************
 231:../../mod/ignition/ignition.c **** *                                                                              *
 232:../../mod/ignition/ignition.c **** * PROCEDURE:                                                                   * 
 233:../../mod/ignition/ignition.c **** * 		solid_prop_cont                                                        *
 234:../../mod/ignition/ignition.c **** *                                                                              *
 235:../../mod/ignition/ignition.c **** * DESCRIPTION:                                                                 * 
 236:../../mod/ignition/ignition.c **** * 		Returns TRUE if there is continuity across the solid propellant wire   *
 237:../../mod/ignition/ignition.c **** *       screw terminals                                                        *
 238:../../mod/ignition/ignition.c **** *                                                                              *
 239:../../mod/ignition/ignition.c **** *******************************************************************************/
 240:../../mod/ignition/ignition.c **** bool ign_solid_prop_cont
 241:../../mod/ignition/ignition.c **** 	(
 242:../../mod/ignition/ignition.c **** 	void
 243:../../mod/ignition/ignition.c **** 	)
 244:../../mod/ignition/ignition.c **** {
  28              		.loc 1 244 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 245:../../mod/ignition/ignition.c **** 
 246:../../mod/ignition/ignition.c **** /* Check MCU GPIO State */
 247:../../mod/ignition/ignition.c **** uint8_t solid_prop_cont_pinstate = HAL_GPIO_ReadPin(SP_CONT_GPIO_PORT, SP_CONT_PIN);
  37              		.loc 1 247 1 view .LVU1
  38              		.loc 1 247 36 is_stmt 0 view .LVU2
  39 0002 4FF40071 		mov	r1, #512
ARM GAS  /tmp/ccdCxlVK.s 			page 6


  40 0006 0448     		ldr	r0, .L5
  41 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  42              	.LVL0:
 248:../../mod/ignition/ignition.c **** 
 249:../../mod/ignition/ignition.c **** /* Return true if GPIO state is high*/
 250:../../mod/ignition/ignition.c **** if ( solid_prop_cont_pinstate == 0 )
  43              		.loc 1 250 1 is_stmt 1 view .LVU3
  44              		.loc 1 250 4 is_stmt 0 view .LVU4
  45 000c 08B9     		cbnz	r0, .L3
 251:../../mod/ignition/ignition.c **** 	{
 252:../../mod/ignition/ignition.c ****     return true;
  46              		.loc 1 252 12 view .LVU5
  47 000e 0120     		movs	r0, #1
  48              	.LVL1:
  49              	.L2:
 253:../../mod/ignition/ignition.c **** 	}
 254:../../mod/ignition/ignition.c **** else
 255:../../mod/ignition/ignition.c **** 	{
 256:../../mod/ignition/ignition.c ****     return false;
 257:../../mod/ignition/ignition.c ****     }
 258:../../mod/ignition/ignition.c **** 
 259:../../mod/ignition/ignition.c **** } /* ign_solid_prop_cont */
  50              		.loc 1 259 1 view .LVU6
  51 0010 08BD     		pop	{r3, pc}
  52              	.LVL2:
  53              	.L3:
 256:../../mod/ignition/ignition.c ****     }
  54              		.loc 1 256 12 view .LVU7
  55 0012 0020     		movs	r0, #0
  56              	.LVL3:
 256:../../mod/ignition/ignition.c ****     }
  57              		.loc 1 256 12 view .LVU8
  58 0014 FCE7     		b	.L2
  59              	.L6:
  60 0016 00BF     		.align	2
  61              	.L5:
  62 0018 00100258 		.word	1476530176
  63              		.cfi_endproc
  64              	.LFE336:
  66              		.section	.text.ign_nozzle_cont,"ax",%progbits
  67              		.align	1
  68              		.global	ign_nozzle_cont
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	ign_nozzle_cont:
  74              	.LFB337:
 260:../../mod/ignition/ignition.c **** 
 261:../../mod/ignition/ignition.c **** 
 262:../../mod/ignition/ignition.c **** /*******************************************************************************
 263:../../mod/ignition/ignition.c **** *                                                                              *
 264:../../mod/ignition/ignition.c **** * PROCEDURE:                                                                   * 
 265:../../mod/ignition/ignition.c **** * 		ign_nozzle_cont                                                        *
 266:../../mod/ignition/ignition.c **** *                                                                              *
 267:../../mod/ignition/ignition.c **** * DESCRIPTION:                                                                 * 
 268:../../mod/ignition/ignition.c **** * 		Returns TRUE if there is continuity across the nozzle wire screw       * 
 269:../../mod/ignition/ignition.c **** *       terminals                                                              *
ARM GAS  /tmp/ccdCxlVK.s 			page 7


 270:../../mod/ignition/ignition.c **** *                                                                              *
 271:../../mod/ignition/ignition.c **** *******************************************************************************/
 272:../../mod/ignition/ignition.c **** bool ign_nozzle_cont
 273:../../mod/ignition/ignition.c **** 	(
 274:../../mod/ignition/ignition.c **** 	void
 275:../../mod/ignition/ignition.c **** 	)
 276:../../mod/ignition/ignition.c **** {
  75              		.loc 1 276 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 08B5     		push	{r3, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 3, -8
  83              		.cfi_offset 14, -4
 277:../../mod/ignition/ignition.c **** 
 278:../../mod/ignition/ignition.c **** /* Check MCU GPIO State */
 279:../../mod/ignition/ignition.c **** uint8_t nozzle_cont_pinstate = HAL_GPIO_ReadPin(NOZ_CONT_GPIO_PORT, NOZ_CONT_PIN);
  84              		.loc 1 279 1 view .LVU10
  85              		.loc 1 279 32 is_stmt 0 view .LVU11
  86 0002 4FF48071 		mov	r1, #256
  87 0006 0448     		ldr	r0, .L11
  88 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  89              	.LVL4:
 280:../../mod/ignition/ignition.c **** 
 281:../../mod/ignition/ignition.c **** /* Return true if GPIO state is high*/
 282:../../mod/ignition/ignition.c **** if ( nozzle_cont_pinstate == 0 )
  90              		.loc 1 282 1 is_stmt 1 view .LVU12
  91              		.loc 1 282 4 is_stmt 0 view .LVU13
  92 000c 08B9     		cbnz	r0, .L9
 283:../../mod/ignition/ignition.c **** 	{
 284:../../mod/ignition/ignition.c ****     return true;
  93              		.loc 1 284 12 view .LVU14
  94 000e 0120     		movs	r0, #1
  95              	.LVL5:
  96              	.L8:
 285:../../mod/ignition/ignition.c **** 	}
 286:../../mod/ignition/ignition.c **** else
 287:../../mod/ignition/ignition.c **** 	{
 288:../../mod/ignition/ignition.c ****     return false;
 289:../../mod/ignition/ignition.c ****     }
 290:../../mod/ignition/ignition.c **** 
 291:../../mod/ignition/ignition.c **** } /* ign_nozzle_cont */
  97              		.loc 1 291 1 view .LVU15
  98 0010 08BD     		pop	{r3, pc}
  99              	.LVL6:
 100              	.L9:
 288:../../mod/ignition/ignition.c ****     }
 101              		.loc 1 288 12 view .LVU16
 102 0012 0020     		movs	r0, #0
 103              	.LVL7:
 288:../../mod/ignition/ignition.c ****     }
 104              		.loc 1 288 12 view .LVU17
 105 0014 FCE7     		b	.L8
 106              	.L12:
 107 0016 00BF     		.align	2
ARM GAS  /tmp/ccdCxlVK.s 			page 8


 108              	.L11:
 109 0018 00100258 		.word	1476530176
 110              		.cfi_endproc
 111              	.LFE337:
 113              		.section	.text.ign_ematch_cont,"ax",%progbits
 114              		.align	1
 115              		.global	ign_ematch_cont
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 120              	ign_ematch_cont:
 121              	.LFB338:
 292:../../mod/ignition/ignition.c **** 
 293:../../mod/ignition/ignition.c **** 
 294:../../mod/ignition/ignition.c **** /*******************************************************************************
 295:../../mod/ignition/ignition.c **** *                                                                              *
 296:../../mod/ignition/ignition.c **** * PROCEDURE:                                                                   * 
 297:../../mod/ignition/ignition.c **** * 		ign_ematch_cont                                                        *
 298:../../mod/ignition/ignition.c **** *                                                                              *
 299:../../mod/ignition/ignition.c **** * DESCRIPTION:                                                                 * 
 300:../../mod/ignition/ignition.c **** * 		Returns TRUE if there is continuity across the ematch and switch screw * 
 301:../../mod/ignition/ignition.c **** *       terminals                                                              *
 302:../../mod/ignition/ignition.c **** *                                                                              *
 303:../../mod/ignition/ignition.c **** *******************************************************************************/
 304:../../mod/ignition/ignition.c **** bool ign_ematch_cont
 305:../../mod/ignition/ignition.c **** 	(
 306:../../mod/ignition/ignition.c **** 	void
 307:../../mod/ignition/ignition.c **** 	)
 308:../../mod/ignition/ignition.c **** {
 122              		.loc 1 308 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126 0000 08B5     		push	{r3, lr}
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 309:../../mod/ignition/ignition.c **** /* Check MCU GPIO State */
 310:../../mod/ignition/ignition.c **** uint8_t ematch_cont_pinstate = HAL_GPIO_ReadPin(E_CONT_GPIO_PORT, E_CONT_PIN);
 131              		.loc 1 310 1 view .LVU19
 132              		.loc 1 310 32 is_stmt 0 view .LVU20
 133 0002 8021     		movs	r1, #128
 134 0004 0248     		ldr	r0, .L17
 135 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 136              	.LVL8:
 311:../../mod/ignition/ignition.c **** 
 312:../../mod/ignition/ignition.c **** /* Return true if GPIO state is low */
 313:../../mod/ignition/ignition.c **** if ( ematch_cont_pinstate == 0 )
 137              		.loc 1 313 1 is_stmt 1 view .LVU21
 138              		.loc 1 313 4 is_stmt 0 view .LVU22
 139 000a 00B1     		cbz	r0, .L14
 314:../../mod/ignition/ignition.c **** 	{
 315:../../mod/ignition/ignition.c ****     return false;
 316:../../mod/ignition/ignition.c **** 	}
 317:../../mod/ignition/ignition.c **** else
 318:../../mod/ignition/ignition.c **** 	{
ARM GAS  /tmp/ccdCxlVK.s 			page 9


 319:../../mod/ignition/ignition.c ****     return true;
 140              		.loc 1 319 12 view .LVU23
 141 000c 0120     		movs	r0, #1
 142              	.LVL9:
 143              	.L14:
 320:../../mod/ignition/ignition.c ****     }
 321:../../mod/ignition/ignition.c **** 
 322:../../mod/ignition/ignition.c **** } /* ign_ematch_cont */
 144              		.loc 1 322 1 view .LVU24
 145 000e 08BD     		pop	{r3, pc}
 146              	.L18:
 147              		.align	2
 148              	.L17:
 149 0010 00100258 		.word	1476530176
 150              		.cfi_endproc
 151              	.LFE338:
 153              		.section	.text.ign_ignite,"ax",%progbits
 154              		.align	1
 155              		.global	ign_ignite
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	ign_ignite:
 161              	.LFB334:
 128:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
 162              		.loc 1 128 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 10B5     		push	{r4, lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 134:../../mod/ignition/ignition.c **** 	{
 171              		.loc 1 134 1 view .LVU26
 134:../../mod/ignition/ignition.c **** 	{
 172              		.loc 1 134 7 is_stmt 0 view .LVU27
 173 0002 FFF7FEFF 		bl	ign_ematch_cont
 174              	.LVL10:
 134:../../mod/ignition/ignition.c **** 	{
 175              		.loc 1 134 4 view .LVU28
 176 0006 08B9     		cbnz	r0, .L24
 137:../../mod/ignition/ignition.c ****     }
 177              		.loc 1 137 12 view .LVU29
 178 0008 4220     		movs	r0, #66
 179              	.L20:
 157:../../mod/ignition/ignition.c **** #endif /* #if defined( ENGINE_CONTROLLER ) */
 180              		.loc 1 157 1 view .LVU30
 181 000a 10BD     		pop	{r4, pc}
 182              	.L24:
 143:../../mod/ignition/ignition.c **** HAL_Delay( IGN_BURN_DELAY );
 183              		.loc 1 143 1 is_stmt 1 view .LVU31
 184 000c 0A4C     		ldr	r4, .L25
 185 000e 0122     		movs	r2, #1
 186 0010 4021     		movs	r1, #64
 187 0012 2046     		mov	r0, r4
ARM GAS  /tmp/ccdCxlVK.s 			page 10


 188 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL11:
 144:../../mod/ignition/ignition.c **** HAL_GPIO_WritePin(FIRE_GPIO_PORT, FIRE_PIN, GPIO_PIN_RESET);
 190              		.loc 1 144 1 view .LVU32
 191 0018 0A20     		movs	r0, #10
 192 001a FFF7FEFF 		bl	HAL_Delay
 193              	.LVL12:
 145:../../mod/ignition/ignition.c **** 
 194              		.loc 1 145 1 view .LVU33
 195 001e 0022     		movs	r2, #0
 196 0020 4021     		movs	r1, #64
 197 0022 2046     		mov	r0, r4
 198 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 199              	.LVL13:
 148:../../mod/ignition/ignition.c **** 	{
 200              		.loc 1 148 1 view .LVU34
 148:../../mod/ignition/ignition.c **** 	{
 201              		.loc 1 148 7 is_stmt 0 view .LVU35
 202 0028 FFF7FEFF 		bl	ign_ematch_cont
 203              	.LVL14:
 148:../../mod/ignition/ignition.c **** 	{
 204              		.loc 1 148 4 view .LVU36
 205 002c 08B9     		cbnz	r0, .L22
 150:../../mod/ignition/ignition.c ****     }
 206              		.loc 1 150 12 view .LVU37
 207 002e 4120     		movs	r0, #65
 208 0030 EBE7     		b	.L20
 209              	.L22:
 154:../../mod/ignition/ignition.c ****     }
 210              		.loc 1 154 12 view .LVU38
 211 0032 4420     		movs	r0, #68
 212 0034 E9E7     		b	.L20
 213              	.L26:
 214 0036 00BF     		.align	2
 215              	.L25:
 216 0038 00100258 		.word	1476530176
 217              		.cfi_endproc
 218              	.LFE334:
 220              		.section	.text.ign_get_cont_info,"ax",%progbits
 221              		.align	1
 222              		.global	ign_get_cont_info
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	ign_get_cont_info:
 228              	.LFB335:
 174:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
 229              		.loc 1 174 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 10B5     		push	{r4, lr}
 234              	.LCFI4:
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 4, -8
 237              		.cfi_offset 14, -4
 178:../../mod/ignition/ignition.c **** 
ARM GAS  /tmp/ccdCxlVK.s 			page 11


 238              		.loc 1 178 1 view .LVU40
 239              	.LVL15:
 187:../../mod/ignition/ignition.c **** 	{
 240              		.loc 1 187 1 view .LVU41
 187:../../mod/ignition/ignition.c **** 	{
 241              		.loc 1 187 6 is_stmt 0 view .LVU42
 242 0002 FFF7FEFF 		bl	ign_ematch_cont
 243              	.LVL16:
 187:../../mod/ignition/ignition.c **** 	{
 244              		.loc 1 187 4 view .LVU43
 245 0006 60B9     		cbnz	r0, .L31
 178:../../mod/ignition/ignition.c **** 
 246              		.loc 1 178 12 view .LVU44
 247 0008 0024     		movs	r4, #0
 248              	.L28:
 249              	.LVL17:
 193:../../mod/ignition/ignition.c **** 	{
 250              		.loc 1 193 1 is_stmt 1 view .LVU45
 193:../../mod/ignition/ignition.c **** 	{
 251              		.loc 1 193 6 is_stmt 0 view .LVU46
 252 000a FFF7FEFF 		bl	ign_solid_prop_cont
 253              	.LVL18:
 193:../../mod/ignition/ignition.c **** 	{
 254              		.loc 1 193 4 view .LVU47
 255 000e 08B1     		cbz	r0, .L29
 195:../../mod/ignition/ignition.c ****     }
 256              		.loc 1 195 5 is_stmt 1 view .LVU48
 195:../../mod/ignition/ignition.c ****     }
 257              		.loc 1 195 16 is_stmt 0 view .LVU49
 258 0010 44F01004 		orr	r4, r4, #16
 259              	.LVL19:
 260              	.L29:
 199:../../mod/ignition/ignition.c **** 	{
 261              		.loc 1 199 1 is_stmt 1 view .LVU50
 199:../../mod/ignition/ignition.c **** 	{
 262              		.loc 1 199 6 is_stmt 0 view .LVU51
 263 0014 FFF7FEFF 		bl	ign_nozzle_cont
 264              	.LVL20:
 199:../../mod/ignition/ignition.c **** 	{
 265              		.loc 1 199 4 view .LVU52
 266 0018 08B1     		cbz	r0, .L30
 201:../../mod/ignition/ignition.c ****     }
 267              		.loc 1 201 5 is_stmt 1 view .LVU53
 201:../../mod/ignition/ignition.c ****     }
 268              		.loc 1 201 16 is_stmt 0 view .LVU54
 269 001a 44F02004 		orr	r4, r4, #32
 270              	.LVL21:
 271              	.L30:
 224:../../mod/ignition/ignition.c **** 
 272              		.loc 1 224 1 is_stmt 1 view .LVU55
 226:../../mod/ignition/ignition.c **** 
 273              		.loc 1 226 1 is_stmt 0 view .LVU56
 274 001e 2046     		mov	r0, r4
 275 0020 10BD     		pop	{r4, pc}
 276              	.LVL22:
 277              	.L31:
 189:../../mod/ignition/ignition.c ****     }
ARM GAS  /tmp/ccdCxlVK.s 			page 12


 278              		.loc 1 189 16 view .LVU57
 279 0022 0824     		movs	r4, #8
 280 0024 F1E7     		b	.L28
 281              		.cfi_endproc
 282              	.LFE335:
 284              		.section	.text.ign_cmd_execute,"ax",%progbits
 285              		.align	1
 286              		.global	ign_cmd_execute
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	ign_cmd_execute:
 292              	.LVL23:
 293              	.LFB333:
  56:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
 294              		.loc 1 56 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
  56:../../mod/ignition/ignition.c **** /*------------------------------------------------------------------------------
 298              		.loc 1 56 1 is_stmt 0 view .LVU59
 299 0000 08B5     		push	{r3, lr}
 300              	.LCFI5:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
  60:../../mod/ignition/ignition.c **** 
 304              		.loc 1 60 1 is_stmt 1 view .LVU60
 305              	.LVL24:
  65:../../mod/ignition/ignition.c **** 	{
 306              		.loc 1 65 1 view .LVU61
 307 0002 0128     		cmp	r0, #1
 308 0004 03D0     		beq	.L34
 309 0006 0228     		cmp	r0, #2
 310 0008 04D0     		beq	.L35
 311 000a 4A20     		movs	r0, #74
 312              	.LVL25:
 313              	.L36:
 110:../../mod/ignition/ignition.c **** 
 314              		.loc 1 110 1 is_stmt 0 view .LVU62
 315 000c 08BD     		pop	{r3, pc}
 316              	.LVL26:
 317              	.L34:
  86:../../mod/ignition/ignition.c **** 		break;
 318              		.loc 1 86 3 is_stmt 1 view .LVU63
  86:../../mod/ignition/ignition.c **** 		break;
 319              		.loc 1 86 16 is_stmt 0 view .LVU64
 320 000e FFF7FEFF 		bl	ign_ignite
 321              	.LVL27:
  87:../../mod/ignition/ignition.c **** 		}
 322              		.loc 1 87 3 is_stmt 1 view .LVU65
 323 0012 FBE7     		b	.L36
 324              	.LVL28:
 325              	.L35:
  95:../../mod/ignition/ignition.c **** 		break;
 326              		.loc 1 95 3 view .LVU66
  95:../../mod/ignition/ignition.c **** 		break;
ARM GAS  /tmp/ccdCxlVK.s 			page 13


 327              		.loc 1 95 16 is_stmt 0 view .LVU67
 328 0014 FFF7FEFF 		bl	ign_get_cont_info
 329              	.LVL29:
  96:../../mod/ignition/ignition.c **** 		}
 330              		.loc 1 96 3 is_stmt 1 view .LVU68
 331 0018 F8E7     		b	.L36
 332              		.cfi_endproc
 333              	.LFE333:
 335              		.text
 336              	.Letext0:
 337              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 338              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 339              		.file 4 "../../lib/Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 340              		.file 5 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 341              		.file 6 "../../mod/ignition/ignition.h"
 342              		.file 7 "../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccdCxlVK.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ignition.c
     /tmp/ccdCxlVK.s:20     .text.ign_solid_prop_cont:0000000000000000 $t
     /tmp/ccdCxlVK.s:26     .text.ign_solid_prop_cont:0000000000000000 ign_solid_prop_cont
     /tmp/ccdCxlVK.s:62     .text.ign_solid_prop_cont:0000000000000018 $d
     /tmp/ccdCxlVK.s:67     .text.ign_nozzle_cont:0000000000000000 $t
     /tmp/ccdCxlVK.s:73     .text.ign_nozzle_cont:0000000000000000 ign_nozzle_cont
     /tmp/ccdCxlVK.s:109    .text.ign_nozzle_cont:0000000000000018 $d
     /tmp/ccdCxlVK.s:114    .text.ign_ematch_cont:0000000000000000 $t
     /tmp/ccdCxlVK.s:120    .text.ign_ematch_cont:0000000000000000 ign_ematch_cont
     /tmp/ccdCxlVK.s:149    .text.ign_ematch_cont:0000000000000010 $d
     /tmp/ccdCxlVK.s:154    .text.ign_ignite:0000000000000000 $t
     /tmp/ccdCxlVK.s:160    .text.ign_ignite:0000000000000000 ign_ignite
     /tmp/ccdCxlVK.s:216    .text.ign_ignite:0000000000000038 $d
     /tmp/ccdCxlVK.s:221    .text.ign_get_cont_info:0000000000000000 $t
     /tmp/ccdCxlVK.s:227    .text.ign_get_cont_info:0000000000000000 ign_get_cont_info
     /tmp/ccdCxlVK.s:285    .text.ign_cmd_execute:0000000000000000 $t
     /tmp/ccdCxlVK.s:291    .text.ign_cmd_execute:0000000000000000 ign_cmd_execute

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
HAL_GPIO_WritePin
HAL_Delay
