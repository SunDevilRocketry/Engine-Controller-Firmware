ARM GAS  /tmp/cctX7jT5.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"fill_chill.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "fill_chill.c"
  19              		.section	.text.run_fill_chill_state,"ax",%progbits
  20              		.align	1
  21              		.global	run_fill_chill_state
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	run_fill_chill_state:
  27              	.LFB333:
   1:fill_chill.c  **** /*******************************************************************************
   2:fill_chill.c  **** *
   3:fill_chill.c  **** * FILE: 
   4:fill_chill.c  **** * 		fill_chill.c
   5:fill_chill.c  **** *
   6:fill_chill.c  **** * DESCRIPTION: 
   7:fill_chill.c  **** * 	    Monitors the engine state while propellant tanks are being filled 
   8:fill_chill.c  **** *
   9:fill_chill.c  **** *******************************************************************************/
  10:fill_chill.c  **** 
  11:fill_chill.c  **** 
  12:fill_chill.c  **** /*------------------------------------------------------------------------------
  13:fill_chill.c  ****  Standard Includes                                                              
  14:fill_chill.c  **** ------------------------------------------------------------------------------*/
  15:fill_chill.c  **** #include <string.h>
  16:fill_chill.c  **** #include <stdbool.h>
  17:fill_chill.c  **** 
  18:fill_chill.c  **** 
  19:fill_chill.c  **** /*------------------------------------------------------------------------------
  20:fill_chill.c  ****  Project Includes                                                              
  21:fill_chill.c  **** ------------------------------------------------------------------------------*/
  22:fill_chill.c  **** #include "main.h"
  23:fill_chill.c  **** #include "pressure.h"
  24:fill_chill.c  **** #include "sensor.h"
  25:fill_chill.c  **** #include "valve_control.h"
  26:fill_chill.c  **** 
  27:fill_chill.c  **** 
  28:fill_chill.c  **** /*------------------------------------------------------------------------------
  29:fill_chill.c  ****  Global Variables 
  30:fill_chill.c  **** ------------------------------------------------------------------------------*/
  31:fill_chill.c  **** extern volatile FSM_STATE fsm_state;        /* Hotfire State       */
ARM GAS  /tmp/cctX7jT5.s 			page 2


  32:fill_chill.c  **** extern volatile bool      tanks_safe_flag;  /* Safe tank pressures */
  33:fill_chill.c  **** extern volatile bool      telreq_wait_flag; /* Wait to get telemetry */
  34:fill_chill.c  **** extern SENSOR_DATA_PING_PONG sensor_ping_pong_buffer;
  35:fill_chill.c  **** 
  36:fill_chill.c  **** 
  37:fill_chill.c  **** /*------------------------------------------------------------------------------
  38:fill_chill.c  ****  Public Functions 
  39:fill_chill.c  **** ------------------------------------------------------------------------------*/
  40:fill_chill.c  **** 
  41:fill_chill.c  **** 
  42:fill_chill.c  **** /*******************************************************************************
  43:fill_chill.c  **** *                                                                              *
  44:fill_chill.c  **** * PROCEDURE:                                                                   *
  45:fill_chill.c  **** * 		run_fill_chill_state                                                   *
  46:fill_chill.c  **** *                                                                              *
  47:fill_chill.c  **** * DESCRIPTION:                                                                 *
  48:fill_chill.c  **** *       Monitors the engine state while propellant tanks are being filled      *
  49:fill_chill.c  **** *                                                                              *
  50:fill_chill.c  **** *******************************************************************************/
  51:fill_chill.c  **** FSM_STATE run_fill_chill_state 
  52:fill_chill.c  ****     (
  53:fill_chill.c  ****     void
  54:fill_chill.c  ****     )
  55:fill_chill.c  **** {
  28              		.loc 1 55 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 2DED028B 		vpush.64	{d8}
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 80, -12
  40              		.cfi_offset 81, -8
  41 0006 8BB0     		sub	sp, sp, #44
  42              	.LCFI2:
  43              		.cfi_def_cfa_offset 56
  56:fill_chill.c  **** /*------------------------------------------------------------------------------
  57:fill_chill.c  ****  Local Variables  
  58:fill_chill.c  **** ------------------------------------------------------------------------------*/
  59:fill_chill.c  **** float       lox_tank_press;  /* LOX tank pressure,  psi */
  44              		.loc 1 59 1 view .LVU1
  60:fill_chill.c  **** float       fuel_tank_press; /* Fuel tank pressure, psi */
  45              		.loc 1 60 1 view .LVU2
  61:fill_chill.c  **** SENSOR_DATA sensor_data;     /* Data from engine sensors */
  46              		.loc 1 61 1 view .LVU3
  62:fill_chill.c  **** 
  63:fill_chill.c  **** 
  64:fill_chill.c  **** /*------------------------------------------------------------------------------
  65:fill_chill.c  ****  Initializations 
  66:fill_chill.c  **** ------------------------------------------------------------------------------*/
  67:fill_chill.c  **** lox_tank_press  = 0;
  47              		.loc 1 67 1 view .LVU4
  48              	.LVL0:
ARM GAS  /tmp/cctX7jT5.s 			page 3


  68:fill_chill.c  **** fuel_tank_press = 0;
  49              		.loc 1 68 1 view .LVU5
  69:fill_chill.c  **** memset( &sensor_data, 0, sizeof( SENSOR_DATA ) );
  50              		.loc 1 69 1 view .LVU6
  51 0008 2822     		movs	r2, #40
  52 000a 0021     		movs	r1, #0
  53 000c 6846     		mov	r0, sp
  54 000e FFF7FEFF 		bl	memset
  55              	.LVL1:
  70:fill_chill.c  **** 
  71:fill_chill.c  **** 
  72:fill_chill.c  **** /*------------------------------------------------------------------------------
  73:fill_chill.c  ****  Implementation 
  74:fill_chill.c  **** ------------------------------------------------------------------------------*/
  75:fill_chill.c  **** 
  76:fill_chill.c  **** /* Stop the engine purge */
  77:fill_chill.c  **** vc_close_solenoids( SOLENOID_LOX_PRESS | SOLENOID_FUEL_PRESS );
  56              		.loc 1 77 1 view .LVU7
  57 0012 0320     		movs	r0, #3
  58 0014 FFF7FEFF 		bl	vc_close_solenoids
  59              	.LVL2:
  78:fill_chill.c  **** vc_close_main_valves( MAIN_VALVE_BOTH_MAINS );
  60              		.loc 1 78 1 view .LVU8
  61 0018 0220     		movs	r0, #2
  62 001a FFF7FEFF 		bl	vc_close_main_valves
  63              	.LVL3:
  79:fill_chill.c  **** vc_open_solenoids( SOLENOID_LOX_VENT | SOLENOID_FUEL_VENT );
  64              		.loc 1 79 1 view .LVU9
  65 001e 0C20     		movs	r0, #12
  66 0020 FFF7FEFF 		bl	vc_open_solenoids
  67              	.LVL4:
  80:fill_chill.c  **** 
  81:fill_chill.c  **** /* Check Tank Pressures */
  82:fill_chill.c  **** sensor_dump( &sensor_data );
  68              		.loc 1 82 1 view .LVU10
  69 0024 6846     		mov	r0, sp
  70 0026 FFF7FEFF 		bl	sensor_dump
  71              	.LVL5:
  83:fill_chill.c  **** lox_tank_press  = sensor_conv_pressure( sensor_data.pt_pressures[ PT_LOX_PRESS_INDEX ], 
  72              		.loc 1 83 1 view .LVU11
  73              		.loc 1 83 19 is_stmt 0 view .LVU12
  74 002a 0021     		movs	r1, #0
  75 002c 0098     		ldr	r0, [sp]
  76 002e FFF7FEFF 		bl	sensor_conv_pressure
  77              	.LVL6:
  84:fill_chill.c  ****                                         PT_LOX_PRESS_INDEX );
  85:fill_chill.c  **** fuel_tank_press = sensor_conv_pressure( sensor_data.pt_pressures[ PT_FUEL_PRESS_INDEX ], 
  78              		.loc 1 85 1 is_stmt 1 view .LVU13
  79              		.loc 1 85 19 is_stmt 0 view .LVU14
  80 0032 0621     		movs	r1, #6
  81 0034 0698     		ldr	r0, [sp, #24]
  82 0036 FFF7FEFF 		bl	sensor_conv_pressure
  83              	.LVL7:
  86:fill_chill.c  ****                                         PT_FUEL_PRESS_INDEX );
  87:fill_chill.c  **** HAL_Delay( FILL_CHILL_TANK_DELAY );
  84              		.loc 1 87 1 is_stmt 1 view .LVU15
  85 003a 4FF47A70 		mov	r0, #1000
ARM GAS  /tmp/cctX7jT5.s 			page 4


  86 003e FFF7FEFF 		bl	HAL_Delay
  87              	.LVL8:
  88:fill_chill.c  **** if ( ( lox_tank_press > 600 ) || ( fuel_tank_press > 600 ) )
  88              		.loc 1 88 1 view .LVU16
  89:fill_chill.c  ****     {
  90:fill_chill.c  ****     /* Enter manual control mode */
  91:fill_chill.c  ****     //return FSM_MANUAL_STATE;
  92:fill_chill.c  ****     }
  89              		.loc 1 92 5 view .LVU17
  93:fill_chill.c  **** 
  94:fill_chill.c  **** /* Let the ground station know the tanks are okay */
  95:fill_chill.c  **** tanks_safe_flag = true;
  90              		.loc 1 95 1 view .LVU18
  91              		.loc 1 95 17 is_stmt 0 view .LVU19
  92 0042 174B     		ldr	r3, .L11
  93 0044 0122     		movs	r2, #1
  94 0046 1A70     		strb	r2, [r3]
  96:fill_chill.c  **** 
  97:fill_chill.c  **** 
  98:fill_chill.c  **** /* Fill the tanks */
  99:fill_chill.c  **** while ( fsm_state != FSM_STANDBY_STATE )
  95              		.loc 1 99 1 is_stmt 1 view .LVU20
  96              		.loc 1 99 7 is_stmt 0 view .LVU21
  97 0048 02E0     		b	.L2
  98              	.LVL9:
  99              	.L3:
 100:fill_chill.c  ****     {
 101:fill_chill.c  ****     sensor_dump( &sensor_data );
 102:fill_chill.c  ****     lox_tank_press  = sensor_conv_pressure( sensor_data.pt_pressures[ PT_LOX_PRESS_INDEX ], 
 103:fill_chill.c  ****                                           PT_LOX_PRESS_INDEX );
 104:fill_chill.c  ****     fuel_tank_press = sensor_conv_pressure( sensor_data.pt_pressures[ PT_FUEL_PRESS_INDEX ], 
 105:fill_chill.c  ****                                             PT_FUEL_PRESS_INDEX );
 106:fill_chill.c  ****     if ( ( lox_tank_press > 600 ) || ( fuel_tank_press > 600 ) )
 107:fill_chill.c  ****         {
 108:fill_chill.c  ****         /* Send Warning Indication to ground station */
 109:fill_chill.c  ****         tanks_safe_flag = false;
 100              		.loc 1 109 9 is_stmt 1 view .LVU22
 101              		.loc 1 109 25 is_stmt 0 view .LVU23
 102 004a 154B     		ldr	r3, .L11
 103 004c 0022     		movs	r2, #0
 104 004e 1A70     		strb	r2, [r3]
 105              	.LVL10:
 106              	.L2:
  99:fill_chill.c  ****     {
 107              		.loc 1 99 19 is_stmt 1 view .LVU24
 108 0050 144B     		ldr	r3, .L11+4
 109 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 110 0054 DBB2     		uxtb	r3, r3
 111 0056 042B     		cmp	r3, #4
 112 0058 1CD0     		beq	.L10
 101:fill_chill.c  ****     lox_tank_press  = sensor_conv_pressure( sensor_data.pt_pressures[ PT_LOX_PRESS_INDEX ], 
 113              		.loc 1 101 5 view .LVU25
 114 005a 6846     		mov	r0, sp
 115 005c FFF7FEFF 		bl	sensor_dump
 116              	.LVL11:
 102:fill_chill.c  ****                                           PT_LOX_PRESS_INDEX );
 117              		.loc 1 102 5 view .LVU26
ARM GAS  /tmp/cctX7jT5.s 			page 5


 102:fill_chill.c  ****                                           PT_LOX_PRESS_INDEX );
 118              		.loc 1 102 23 is_stmt 0 view .LVU27
 119 0060 0021     		movs	r1, #0
 120 0062 0098     		ldr	r0, [sp]
 121 0064 FFF7FEFF 		bl	sensor_conv_pressure
 122              	.LVL12:
 123 0068 B0EE408A 		vmov.f32	s16, s0
 124              	.LVL13:
 104:fill_chill.c  ****                                             PT_FUEL_PRESS_INDEX );
 125              		.loc 1 104 5 is_stmt 1 view .LVU28
 104:fill_chill.c  ****                                             PT_FUEL_PRESS_INDEX );
 126              		.loc 1 104 23 is_stmt 0 view .LVU29
 127 006c 0621     		movs	r1, #6
 128 006e 0698     		ldr	r0, [sp, #24]
 129 0070 FFF7FEFF 		bl	sensor_conv_pressure
 130              	.LVL14:
 106:fill_chill.c  ****         {
 131              		.loc 1 106 5 is_stmt 1 view .LVU30
 106:fill_chill.c  ****         {
 132              		.loc 1 106 8 is_stmt 0 view .LVU31
 133 0074 DFED0C7A 		vldr.32	s15, .L11+8
 134 0078 B4EEE78A 		vcmpe.f32	s16, s15
 135 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 136 0080 E3DC     		bgt	.L3
 106:fill_chill.c  ****         {
 137              		.loc 1 106 35 discriminator 1 view .LVU32
 138 0082 B4EEE70A 		vcmpe.f32	s0, s15
 139 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 140 008a DEDC     		bgt	.L3
 110:fill_chill.c  ****         }
 111:fill_chill.c  ****     else
 112:fill_chill.c  ****         {
 113:fill_chill.c  ****         tanks_safe_flag = true;
 141              		.loc 1 113 9 is_stmt 1 view .LVU33
 142              		.loc 1 113 25 is_stmt 0 view .LVU34
 143 008c 044B     		ldr	r3, .L11
 144 008e 0122     		movs	r2, #1
 145 0090 1A70     		strb	r2, [r3]
 146 0092 DDE7     		b	.L2
 147              	.LVL15:
 148              	.L10:
 114:fill_chill.c  ****         }
 115:fill_chill.c  ****     }
 116:fill_chill.c  **** 
 117:fill_chill.c  **** /* Enter Standby state */
 118:fill_chill.c  **** return FSM_STANDBY_STATE;
 149              		.loc 1 118 1 is_stmt 1 view .LVU35
 119:fill_chill.c  **** } /* run_fill_chill_state */
 150              		.loc 1 119 1 is_stmt 0 view .LVU36
 151 0094 0420     		movs	r0, #4
 152 0096 0BB0     		add	sp, sp, #44
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 12
 155              		@ sp needed
 156 0098 BDEC028B 		vldm	sp!, {d8}
 157              	.LCFI4:
 158              		.cfi_restore 80
ARM GAS  /tmp/cctX7jT5.s 			page 6


 159              		.cfi_restore 81
 160              		.cfi_def_cfa_offset 4
 161 009c 5DF804FB 		ldr	pc, [sp], #4
 162              	.L12:
 163              		.align	2
 164              	.L11:
 165 00a0 00000000 		.word	tanks_safe_flag
 166 00a4 00000000 		.word	fsm_state
 167 00a8 00001644 		.word	1142292480
 168              		.cfi_endproc
 169              	.LFE333:
 171              		.text
 172              	.Letext0:
 173              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stddef.h"
 174              		.file 3 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 175              		.file 4 "../../../mod/sensor/sensor.h"
 176              		.file 5 "main.h"
 177              		.file 6 "valve_control.h"
 178              		.file 7 "/usr/include/newlib/string.h"
 179              		.file 8 "../../../lib/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 180              		.file 9 "<built-in>"
ARM GAS  /tmp/cctX7jT5.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fill_chill.c
     /tmp/cctX7jT5.s:20     .text.run_fill_chill_state:0000000000000000 $t
     /tmp/cctX7jT5.s:26     .text.run_fill_chill_state:0000000000000000 run_fill_chill_state
     /tmp/cctX7jT5.s:165    .text.run_fill_chill_state:00000000000000a0 $d

UNDEFINED SYMBOLS
memset
vc_close_solenoids
vc_close_main_valves
vc_open_solenoids
sensor_dump
sensor_conv_pressure
HAL_Delay
tanks_safe_flag
fsm_state
