ARM GAS  /tmp/ccNSwPZ1.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"valve_control.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "valve_control.c"
  19              		.section	.text.vc_open_solenoids,"ax",%progbits
  20              		.align	1
  21              		.global	vc_open_solenoids
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	vc_open_solenoids:
  27              	.LVL0:
  28              	.LFB333:
   1:valve_control.c **** /*******************************************************************************
   2:valve_control.c **** *
   3:valve_control.c **** * FILE: 
   4:valve_control.c **** * 		valve_control.c
   5:valve_control.c **** *
   6:valve_control.c **** * DESCRIPTION: 
   7:valve_control.c **** * 	    Provides an interface to the valve controller for opening and closing 
   8:valve_control.c **** *       solenoids and main valves 
   9:valve_control.c **** *
  10:valve_control.c **** *******************************************************************************/
  11:valve_control.c **** 
  12:valve_control.c **** 
  13:valve_control.c **** /*------------------------------------------------------------------------------
  14:valve_control.c ****  Standard Includes                                                              
  15:valve_control.c **** ------------------------------------------------------------------------------*/
  16:valve_control.c **** 
  17:valve_control.c **** 
  18:valve_control.c **** /*------------------------------------------------------------------------------
  19:valve_control.c ****  Project Includes                                                              
  20:valve_control.c **** ------------------------------------------------------------------------------*/
  21:valve_control.c **** #include "stm32h7xx_hal.h"
  22:valve_control.c **** #include "valve_control.h"
  23:valve_control.c **** #include "commands.h"
  24:valve_control.c **** #include "solenoid.h"
  25:valve_control.c **** #include "valve.h"
  26:valve_control.c **** 
  27:valve_control.c **** 
  28:valve_control.c **** /*------------------------------------------------------------------------------
  29:valve_control.c ****  Public Functions 
  30:valve_control.c **** ------------------------------------------------------------------------------*/
ARM GAS  /tmp/ccNSwPZ1.s 			page 2


  31:valve_control.c **** 
  32:valve_control.c **** 
  33:valve_control.c **** /*******************************************************************************
  34:valve_control.c **** *                                                                              *
  35:valve_control.c **** * PROCEDURE:                                                                   *
  36:valve_control.c **** * 		vc_open_solenoids                                                      *
  37:valve_control.c **** *                                                                              *
  38:valve_control.c **** * DESCRIPTION:                                                                 *
  39:valve_control.c **** *       Open a solenoid                                                        *
  40:valve_control.c **** *                                                                              *
  41:valve_control.c **** *******************************************************************************/
  42:valve_control.c **** VC_STATUS vc_open_solenoids
  43:valve_control.c ****     (
  44:valve_control.c ****     SOLENOID solenoids /* Solenoids to open */
  45:valve_control.c ****     )
  46:valve_control.c **** {
  29              		.loc 1 46 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 46 1 is_stmt 0 view .LVU1
  34 0000 30B5     		push	{r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 12
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 83B0     		sub	sp, sp, #12
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 24
  43 0004 0546     		mov	r5, r0
  47:valve_control.c **** /*------------------------------------------------------------------------------
  48:valve_control.c ****  Local Variables  
  49:valve_control.c **** ------------------------------------------------------------------------------*/
  50:valve_control.c **** uint8_t      sol_subcommand;    /* Solenoid subcommand/number   */
  44              		.loc 1 50 1 is_stmt 1 view .LVU2
  51:valve_control.c **** uint8_t      sol_tx_buffer[2];  /* Buffer for transmitting data */
  45              		.loc 1 51 1 view .LVU3
  52:valve_control.c **** VALVE_STATUS valve_status;      /* Return codes from valve API  */
  46              		.loc 1 52 1 view .LVU4
  53:valve_control.c **** 
  54:valve_control.c **** 
  55:valve_control.c **** /*------------------------------------------------------------------------------
  56:valve_control.c ****  Initializations 
  57:valve_control.c **** ------------------------------------------------------------------------------*/
  58:valve_control.c **** sol_subcommand   = SOL_OPEN_CODE; 
  47              		.loc 1 58 1 view .LVU5
  48              	.LVL1:
  59:valve_control.c **** valve_status     = VALVE_OK;
  49              		.loc 1 59 1 view .LVU6
  60:valve_control.c **** sol_tx_buffer[0] = SOL_OP;
  50              		.loc 1 60 1 view .LVU7
  51              		.loc 1 60 18 is_stmt 0 view .LVU8
  52 0006 5123     		movs	r3, #81
  53 0008 8DF80430 		strb	r3, [sp, #4]
  61:valve_control.c **** sol_tx_buffer[1] = 0;
  54              		.loc 1 61 1 is_stmt 1 view .LVU9
ARM GAS  /tmp/ccNSwPZ1.s 			page 3


  55              		.loc 1 61 18 is_stmt 0 view .LVU10
  56 000c 0024     		movs	r4, #0
  57 000e 8DF80540 		strb	r4, [sp, #5]
  62:valve_control.c **** 
  63:valve_control.c **** 
  64:valve_control.c **** /*------------------------------------------------------------------------------
  65:valve_control.c ****  Implementation 
  66:valve_control.c **** ------------------------------------------------------------------------------*/
  67:valve_control.c **** 
  68:valve_control.c **** /* Loop through each solenoid */
  69:valve_control.c **** for ( uint8_t i = 0; i < NUM_SOLENOIDS; ++i )
  58              		.loc 1 69 1 is_stmt 1 view .LVU11
  59              	.LBB2:
  60              		.loc 1 69 7 view .LVU12
  61              	.LVL2:
  62              		.loc 1 69 1 is_stmt 0 view .LVU13
  63 0012 01E0     		b	.L2
  64              	.LVL3:
  65              	.L3:
  66              		.loc 1 69 41 is_stmt 1 discriminator 2 view .LVU14
  67 0014 0134     		adds	r4, r4, #1
  68              	.LVL4:
  69              		.loc 1 69 41 is_stmt 0 discriminator 2 view .LVU15
  70 0016 E4B2     		uxtb	r4, r4
  71              	.LVL5:
  72              	.L2:
  73              		.loc 1 69 24 is_stmt 1 discriminator 1 view .LVU16
  74 0018 052C     		cmp	r4, #5
  75 001a 13D8     		bhi	.L8
  70:valve_control.c ****     {
  71:valve_control.c ****     if ( solenoids & ( 1 << i ) )
  76              		.loc 1 71 5 view .LVU17
  77              		.loc 1 71 10 is_stmt 0 view .LVU18
  78 001c 45FA04F3 		asr	r3, r5, r4
  79              		.loc 1 71 8 view .LVU19
  80 0020 13F0010F 		tst	r3, #1
  81 0024 F6D0     		beq	.L3
  72:valve_control.c ****         {
  73:valve_control.c ****         /* Set valve number and subcommand */
  74:valve_control.c ****         sol_tx_buffer[1] = sol_subcommand | ( i + 1 );
  82              		.loc 1 74 9 is_stmt 1 view .LVU20
  83              		.loc 1 74 49 is_stmt 0 view .LVU21
  84 0026 631C     		adds	r3, r4, #1
  85 0028 DBB2     		uxtb	r3, r3
  86              		.loc 1 74 26 view .LVU22
  87 002a 43F02803 		orr	r3, r3, #40
  88 002e 8DF80530 		strb	r3, [sp, #5]
  75:valve_control.c **** 
  76:valve_control.c ****         /* Send data to valve controller */ 
  77:valve_control.c ****         valve_status = valve_transmit( &sol_tx_buffer[0]      , 
  89              		.loc 1 77 9 is_stmt 1 view .LVU23
  90              		.loc 1 77 24 is_stmt 0 view .LVU24
  91 0032 0A22     		movs	r2, #10
  92 0034 0221     		movs	r1, #2
  93 0036 01A8     		add	r0, sp, #4
  94 0038 FFF7FEFF 		bl	valve_transmit
  95              	.LVL6:
ARM GAS  /tmp/ccNSwPZ1.s 			page 4


  78:valve_control.c ****                                        sizeof( sol_tx_buffer ), 
  79:valve_control.c ****                                        VALVE_TIMEOUT );
  80:valve_control.c ****         if ( valve_status != VALVE_OK )
  96              		.loc 1 80 9 is_stmt 1 view .LVU25
  97              		.loc 1 80 12 is_stmt 0 view .LVU26
  98 003c 0028     		cmp	r0, #0
  99 003e E9D0     		beq	.L3
  81:valve_control.c ****             {
  82:valve_control.c ****             return VC_UART_ERROR;
 100              		.loc 1 82 20 view .LVU27
 101 0040 0120     		movs	r0, #1
 102              	.LVL7:
 103              		.loc 1 82 20 view .LVU28
 104 0042 00E0     		b	.L4
 105              	.LVL8:
 106              	.L8:
 107              		.loc 1 82 20 view .LVU29
 108              	.LBE2:
  83:valve_control.c ****             }
  84:valve_control.c ****         }
  85:valve_control.c ****     }
  86:valve_control.c **** return VC_OK;
 109              		.loc 1 86 8 view .LVU30
 110 0044 0020     		movs	r0, #0
 111              	.L4:
  87:valve_control.c **** } /* vc_open_solenoids */
 112              		.loc 1 87 1 view .LVU31
 113 0046 03B0     		add	sp, sp, #12
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 12
 116              		@ sp needed
 117 0048 30BD     		pop	{r4, r5, pc}
 118              		.loc 1 87 1 view .LVU32
 119              		.cfi_endproc
 120              	.LFE333:
 122              		.section	.text.vc_close_solenoids,"ax",%progbits
 123              		.align	1
 124              		.global	vc_close_solenoids
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	vc_close_solenoids:
 130              	.LVL9:
 131              	.LFB334:
  88:valve_control.c **** 
  89:valve_control.c **** 
  90:valve_control.c **** /*******************************************************************************
  91:valve_control.c **** *                                                                              *
  92:valve_control.c **** * PROCEDURE:                                                                   *
  93:valve_control.c **** * 		vc_close_solenoids                                                     *
  94:valve_control.c **** *                                                                              *
  95:valve_control.c **** * DESCRIPTION:                                                                 *
  96:valve_control.c **** *       Close a solenoid                                                       *
  97:valve_control.c **** *                                                                              *
  98:valve_control.c **** *******************************************************************************/
  99:valve_control.c **** VC_STATUS vc_close_solenoids
 100:valve_control.c ****     (
ARM GAS  /tmp/ccNSwPZ1.s 			page 5


 101:valve_control.c ****     SOLENOID solenoids /* Solenoids to close */
 102:valve_control.c ****     )
 103:valve_control.c **** {
 132              		.loc 1 103 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		.loc 1 103 1 is_stmt 0 view .LVU34
 137 0000 30B5     		push	{r4, r5, lr}
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 12
 140              		.cfi_offset 4, -12
 141              		.cfi_offset 5, -8
 142              		.cfi_offset 14, -4
 143 0002 83B0     		sub	sp, sp, #12
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 24
 146 0004 0546     		mov	r5, r0
 104:valve_control.c **** /*------------------------------------------------------------------------------
 105:valve_control.c ****  Local Variables  
 106:valve_control.c **** ------------------------------------------------------------------------------*/
 107:valve_control.c **** uint8_t      sol_subcommand;    /* Solenoid subcommand/number   */
 147              		.loc 1 107 1 is_stmt 1 view .LVU35
 108:valve_control.c **** uint8_t      sol_tx_buffer[2];  /* Buffer for transmitting data */
 148              		.loc 1 108 1 view .LVU36
 109:valve_control.c **** VALVE_STATUS valve_status;      /* Return codes from valve API  */
 149              		.loc 1 109 1 view .LVU37
 110:valve_control.c **** 
 111:valve_control.c **** 
 112:valve_control.c **** /*------------------------------------------------------------------------------
 113:valve_control.c ****  Initializations 
 114:valve_control.c **** ------------------------------------------------------------------------------*/
 115:valve_control.c **** sol_subcommand   = SOL_CLOSE_CODE; 
 150              		.loc 1 115 1 view .LVU38
 151              	.LVL10:
 116:valve_control.c **** valve_status     = VALVE_OK;
 152              		.loc 1 116 1 view .LVU39
 117:valve_control.c **** sol_tx_buffer[0] = SOL_OP;
 153              		.loc 1 117 1 view .LVU40
 154              		.loc 1 117 18 is_stmt 0 view .LVU41
 155 0006 5123     		movs	r3, #81
 156 0008 8DF80430 		strb	r3, [sp, #4]
 118:valve_control.c **** sol_tx_buffer[1] = 0;
 157              		.loc 1 118 1 is_stmt 1 view .LVU42
 158              		.loc 1 118 18 is_stmt 0 view .LVU43
 159 000c 0024     		movs	r4, #0
 160 000e 8DF80540 		strb	r4, [sp, #5]
 119:valve_control.c **** 
 120:valve_control.c **** 
 121:valve_control.c **** /*------------------------------------------------------------------------------
 122:valve_control.c ****  Implementation 
 123:valve_control.c **** ------------------------------------------------------------------------------*/
 124:valve_control.c **** 
 125:valve_control.c **** /* Loop through each solenoid */
 126:valve_control.c **** for ( uint8_t i = 0; i < NUM_SOLENOIDS; ++i )
 161              		.loc 1 126 1 is_stmt 1 view .LVU44
 162              	.LBB3:
ARM GAS  /tmp/ccNSwPZ1.s 			page 6


 163              		.loc 1 126 7 view .LVU45
 164              	.LVL11:
 165              		.loc 1 126 1 is_stmt 0 view .LVU46
 166 0012 01E0     		b	.L10
 167              	.LVL12:
 168              	.L11:
 169              		.loc 1 126 41 is_stmt 1 discriminator 2 view .LVU47
 170 0014 0134     		adds	r4, r4, #1
 171              	.LVL13:
 172              		.loc 1 126 41 is_stmt 0 discriminator 2 view .LVU48
 173 0016 E4B2     		uxtb	r4, r4
 174              	.LVL14:
 175              	.L10:
 176              		.loc 1 126 24 is_stmt 1 discriminator 1 view .LVU49
 177 0018 052C     		cmp	r4, #5
 178 001a 13D8     		bhi	.L16
 127:valve_control.c ****     {
 128:valve_control.c ****     if ( solenoids & ( 1 << i ) )
 179              		.loc 1 128 5 view .LVU50
 180              		.loc 1 128 10 is_stmt 0 view .LVU51
 181 001c 45FA04F3 		asr	r3, r5, r4
 182              		.loc 1 128 8 view .LVU52
 183 0020 13F0010F 		tst	r3, #1
 184 0024 F6D0     		beq	.L11
 129:valve_control.c ****         {
 130:valve_control.c ****         /* Set valve number and subcommand */
 131:valve_control.c ****         sol_tx_buffer[1] = sol_subcommand | ( i + 1 );
 185              		.loc 1 131 9 is_stmt 1 view .LVU53
 186              		.loc 1 131 49 is_stmt 0 view .LVU54
 187 0026 631C     		adds	r3, r4, #1
 188 0028 DBB2     		uxtb	r3, r3
 189              		.loc 1 131 26 view .LVU55
 190 002a 43F03003 		orr	r3, r3, #48
 191 002e 8DF80530 		strb	r3, [sp, #5]
 132:valve_control.c **** 
 133:valve_control.c ****         /* Send data to valve controller */ 
 134:valve_control.c ****         valve_status = valve_transmit( &sol_tx_buffer[0]      , 
 192              		.loc 1 134 9 is_stmt 1 view .LVU56
 193              		.loc 1 134 24 is_stmt 0 view .LVU57
 194 0032 0A22     		movs	r2, #10
 195 0034 0221     		movs	r1, #2
 196 0036 01A8     		add	r0, sp, #4
 197 0038 FFF7FEFF 		bl	valve_transmit
 198              	.LVL15:
 135:valve_control.c ****                                        sizeof( sol_tx_buffer ), 
 136:valve_control.c ****                                        VALVE_TIMEOUT );
 137:valve_control.c ****         if ( valve_status != VALVE_OK )
 199              		.loc 1 137 9 is_stmt 1 view .LVU58
 200              		.loc 1 137 12 is_stmt 0 view .LVU59
 201 003c 0028     		cmp	r0, #0
 202 003e E9D0     		beq	.L11
 138:valve_control.c ****             {
 139:valve_control.c ****             return VC_UART_ERROR;
 203              		.loc 1 139 20 view .LVU60
 204 0040 0120     		movs	r0, #1
 205              	.LVL16:
 206              		.loc 1 139 20 view .LVU61
ARM GAS  /tmp/ccNSwPZ1.s 			page 7


 207 0042 00E0     		b	.L12
 208              	.LVL17:
 209              	.L16:
 210              		.loc 1 139 20 view .LVU62
 211              	.LBE3:
 140:valve_control.c ****             }
 141:valve_control.c ****         }
 142:valve_control.c ****     }
 143:valve_control.c **** return VC_OK;
 212              		.loc 1 143 8 view .LVU63
 213 0044 0020     		movs	r0, #0
 214              	.L12:
 144:valve_control.c **** } /* vc_close_solenoids */
 215              		.loc 1 144 1 view .LVU64
 216 0046 03B0     		add	sp, sp, #12
 217              	.LCFI5:
 218              		.cfi_def_cfa_offset 12
 219              		@ sp needed
 220 0048 30BD     		pop	{r4, r5, pc}
 221              		.loc 1 144 1 view .LVU65
 222              		.cfi_endproc
 223              	.LFE334:
 225              		.section	.text.vc_reset_solenoids,"ax",%progbits
 226              		.align	1
 227              		.global	vc_reset_solenoids
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	vc_reset_solenoids:
 233              	.LFB335:
 145:valve_control.c **** 
 146:valve_control.c **** 
 147:valve_control.c **** /*******************************************************************************
 148:valve_control.c **** *                                                                              *
 149:valve_control.c **** * PROCEDURE:                                                                   *
 150:valve_control.c **** * 		vc_reset_solenoids                                                     *
 151:valve_control.c **** *                                                                              *
 152:valve_control.c **** * DESCRIPTION:                                                                 *
 153:valve_control.c **** *       Reset solenoids                                                        *
 154:valve_control.c **** *                                                                              *
 155:valve_control.c **** *******************************************************************************/
 156:valve_control.c **** VC_STATUS vc_reset_solenoids
 157:valve_control.c ****     (
 158:valve_control.c ****     void
 159:valve_control.c ****     )
 160:valve_control.c **** {
 234              		.loc 1 160 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 00B5     		push	{lr}
 239              	.LCFI6:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 14, -4
 242 0002 83B0     		sub	sp, sp, #12
 243              	.LCFI7:
 244              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccNSwPZ1.s 			page 8


 161:valve_control.c **** /*------------------------------------------------------------------------------
 162:valve_control.c ****  Local Variables  
 163:valve_control.c **** ------------------------------------------------------------------------------*/
 164:valve_control.c **** uint8_t      sol_tx_buffer[2];  /* Buffer for transmitting data */
 245              		.loc 1 164 1 view .LVU67
 165:valve_control.c **** VALVE_STATUS valve_status;      /* Return codes from valve API  */
 246              		.loc 1 165 1 view .LVU68
 166:valve_control.c **** 
 167:valve_control.c **** 
 168:valve_control.c **** /*------------------------------------------------------------------------------
 169:valve_control.c ****  Initializations 
 170:valve_control.c **** ------------------------------------------------------------------------------*/
 171:valve_control.c **** valve_status     = VALVE_OK;
 247              		.loc 1 171 1 view .LVU69
 248              	.LVL18:
 172:valve_control.c **** sol_tx_buffer[0] = SOL_OP;
 249              		.loc 1 172 1 view .LVU70
 250              		.loc 1 172 18 is_stmt 0 view .LVU71
 251 0004 5123     		movs	r3, #81
 252 0006 8DF80430 		strb	r3, [sp, #4]
 173:valve_control.c **** sol_tx_buffer[1] = SOL_RESET_CODE;
 253              		.loc 1 173 1 is_stmt 1 view .LVU72
 254              		.loc 1 173 18 is_stmt 0 view .LVU73
 255 000a 1823     		movs	r3, #24
 256 000c 8DF80530 		strb	r3, [sp, #5]
 174:valve_control.c **** 
 175:valve_control.c **** 
 176:valve_control.c **** /*------------------------------------------------------------------------------
 177:valve_control.c ****  Implementation 
 178:valve_control.c **** ------------------------------------------------------------------------------*/
 179:valve_control.c **** 
 180:valve_control.c **** /* Send data to valve controller */
 181:valve_control.c **** valve_status = valve_transmit( &sol_tx_buffer[0]      , 
 257              		.loc 1 181 1 is_stmt 1 view .LVU74
 258              		.loc 1 181 16 is_stmt 0 view .LVU75
 259 0010 0A22     		movs	r2, #10
 260 0012 0221     		movs	r1, #2
 261 0014 01A8     		add	r0, sp, #4
 262 0016 FFF7FEFF 		bl	valve_transmit
 263              	.LVL19:
 182:valve_control.c ****                                sizeof( sol_tx_buffer ), 
 183:valve_control.c ****                                VALVE_TIMEOUT );
 184:valve_control.c **** if ( valve_status != VALVE_OK )
 264              		.loc 1 184 1 is_stmt 1 view .LVU76
 265              		.loc 1 184 4 is_stmt 0 view .LVU77
 266 001a 10B9     		cbnz	r0, .L20
 267              	.L18:
 185:valve_control.c ****     {
 186:valve_control.c ****     return VALVE_UART_ERROR;
 187:valve_control.c ****     }
 188:valve_control.c **** else
 189:valve_control.c ****     {
 190:valve_control.c ****     return VC_OK;
 191:valve_control.c ****     }
 192:valve_control.c **** } /* vc_reset_solenoids */
 268              		.loc 1 192 1 view .LVU78
 269 001c 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccNSwPZ1.s 			page 9


 270              	.LCFI8:
 271              		.cfi_remember_state
 272              		.cfi_def_cfa_offset 4
 273              		@ sp needed
 274 001e 5DF804FB 		ldr	pc, [sp], #4
 275              	.L20:
 276              	.LCFI9:
 277              		.cfi_restore_state
 186:valve_control.c ****     }
 278              		.loc 1 186 12 view .LVU79
 279 0022 0320     		movs	r0, #3
 280 0024 FAE7     		b	.L18
 281              		.cfi_endproc
 282              	.LFE335:
 284              		.section	.text.vc_open_main_valves,"ax",%progbits
 285              		.align	1
 286              		.global	vc_open_main_valves
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	vc_open_main_valves:
 292              	.LVL20:
 293              	.LFB336:
 193:valve_control.c **** 
 194:valve_control.c **** 
 195:valve_control.c **** /*******************************************************************************
 196:valve_control.c **** *                                                                              *
 197:valve_control.c **** * PROCEDURE:                                                                   *
 198:valve_control.c **** * 		vc_open_main_valves                                                    *
 199:valve_control.c **** *                                                                              *
 200:valve_control.c **** * DESCRIPTION:                                                                 *
 201:valve_control.c **** *       Open a main valve                                                      *
 202:valve_control.c **** *                                                                              *
 203:valve_control.c **** *******************************************************************************/
 204:valve_control.c **** VC_STATUS vc_open_main_valves
 205:valve_control.c ****     (
 206:valve_control.c ****     MAIN_VALVE main_valves
 207:valve_control.c ****     )
 208:valve_control.c **** {
 294              		.loc 1 208 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 8
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		.loc 1 208 1 is_stmt 0 view .LVU81
 299 0000 10B5     		push	{r4, lr}
 300              	.LCFI10:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 304 0002 82B0     		sub	sp, sp, #8
 305              	.LCFI11:
 306              		.cfi_def_cfa_offset 16
 307 0004 0446     		mov	r4, r0
 209:valve_control.c **** /*------------------------------------------------------------------------------
 210:valve_control.c ****  Local Variables  
 211:valve_control.c **** ------------------------------------------------------------------------------*/
 212:valve_control.c **** uint8_t      valve_subcommand;   /* Main valve subcommand/number */
ARM GAS  /tmp/ccNSwPZ1.s 			page 10


 308              		.loc 1 212 1 is_stmt 1 view .LVU82
 213:valve_control.c **** uint8_t      valve_tx_buffer[2]; /* Buffer for transmitting data */
 309              		.loc 1 213 1 view .LVU83
 214:valve_control.c **** VALVE_STATUS valve_status;       /* Return codes from valve API  */
 310              		.loc 1 214 1 view .LVU84
 215:valve_control.c **** 
 216:valve_control.c **** 
 217:valve_control.c **** /*------------------------------------------------------------------------------
 218:valve_control.c ****  Initializations 
 219:valve_control.c **** ------------------------------------------------------------------------------*/
 220:valve_control.c **** valve_subcommand   = VALVE_OPEN_CODE; 
 311              		.loc 1 220 1 view .LVU85
 312              	.LVL21:
 221:valve_control.c **** valve_status       = VALVE_OK;
 313              		.loc 1 221 1 view .LVU86
 222:valve_control.c **** valve_tx_buffer[0] = VALVE_OP;
 314              		.loc 1 222 1 view .LVU87
 315              		.loc 1 222 20 is_stmt 0 view .LVU88
 316 0006 5223     		movs	r3, #82
 317 0008 8DF80430 		strb	r3, [sp, #4]
 223:valve_control.c **** valve_tx_buffer[1] = 0;
 318              		.loc 1 223 1 is_stmt 1 view .LVU89
 319              		.loc 1 223 20 is_stmt 0 view .LVU90
 320 000c 0023     		movs	r3, #0
 321 000e 8DF80530 		strb	r3, [sp, #5]
 224:valve_control.c **** 
 225:valve_control.c **** 
 226:valve_control.c **** /*------------------------------------------------------------------------------
 227:valve_control.c ****  Implementation 
 228:valve_control.c **** ------------------------------------------------------------------------------*/
 229:valve_control.c **** /* Setup subcommand and transmit data */
 230:valve_control.c **** switch ( main_valves )
 322              		.loc 1 230 1 is_stmt 1 view .LVU91
 323 0012 0128     		cmp	r0, #1
 324 0014 12D0     		beq	.L22
 325 0016 0228     		cmp	r0, #2
 326 0018 1CD0     		beq	.L23
 327 001a 10B1     		cbz	r0, .L31
 328 001c 0020     		movs	r0, #0
 329              	.LVL22:
 330              	.L24:
 231:valve_control.c ****     {
 232:valve_control.c ****     /* Open the main LOX valve */
 233:valve_control.c ****     case MAIN_VALVE_LOX_MAIN:
 234:valve_control.c ****         {
 235:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand;
 236:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 237:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 238:valve_control.c ****                                        VALVE_TIMEOUT );
 239:valve_control.c ****         if ( valve_status != VALVE_OK )
 240:valve_control.c ****             {
 241:valve_control.c ****             return VC_UART_ERROR;
 242:valve_control.c ****             }
 243:valve_control.c ****         break;
 244:valve_control.c ****         }
 245:valve_control.c **** 
 246:valve_control.c ****     /* Open the main fuel valve */
ARM GAS  /tmp/ccNSwPZ1.s 			page 11


 247:valve_control.c ****     case MAIN_VALVE_FUEL_MAIN:
 248:valve_control.c ****         {
 249:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand + 1;
 250:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 251:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 252:valve_control.c ****                                        VALVE_TIMEOUT );
 253:valve_control.c ****         if ( valve_status != VALVE_OK )
 254:valve_control.c ****             {
 255:valve_control.c ****             return VC_UART_ERROR;
 256:valve_control.c ****             }
 257:valve_control.c ****         break;
 258:valve_control.c ****         }
 259:valve_control.c **** 
 260:valve_control.c ****     /* Open both main valves */
 261:valve_control.c ****     case MAIN_VALVE_BOTH_MAINS:
 262:valve_control.c ****         {
 263:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand;
 264:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 265:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 266:valve_control.c ****                                        VALVE_TIMEOUT );
 267:valve_control.c ****         if ( valve_status != VALVE_OK )
 268:valve_control.c ****             {
 269:valve_control.c ****             return VC_UART_ERROR;
 270:valve_control.c ****             }
 271:valve_control.c ****         valve_tx_buffer[1] += 1;
 272:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 273:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 274:valve_control.c ****                                        VALVE_TIMEOUT );
 275:valve_control.c ****         if ( valve_status != VALVE_OK )
 276:valve_control.c ****             {
 277:valve_control.c ****             return VC_UART_ERROR;
 278:valve_control.c ****             }
 279:valve_control.c ****         break;
 280:valve_control.c ****         }
 281:valve_control.c **** 
 282:valve_control.c ****     } /* switch ( main_valves ) */
 283:valve_control.c **** return VC_OK;
 284:valve_control.c **** } /* vc_open_main_valves */
 331              		.loc 1 284 1 is_stmt 0 view .LVU92
 332 001e 02B0     		add	sp, sp, #8
 333              	.LCFI12:
 334              		.cfi_remember_state
 335              		.cfi_def_cfa_offset 8
 336              		@ sp needed
 337 0020 10BD     		pop	{r4, pc}
 338              	.LVL23:
 339              	.L31:
 340              	.LCFI13:
 341              		.cfi_restore_state
 235:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 342              		.loc 1 235 9 is_stmt 1 view .LVU93
 235:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 343              		.loc 1 235 28 is_stmt 0 view .LVU94
 344 0022 0423     		movs	r3, #4
 345 0024 8DF80530 		strb	r3, [sp, #5]
 236:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 346              		.loc 1 236 9 is_stmt 1 view .LVU95
ARM GAS  /tmp/ccNSwPZ1.s 			page 12


 236:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 347              		.loc 1 236 24 is_stmt 0 view .LVU96
 348 0028 0A22     		movs	r2, #10
 349 002a 0221     		movs	r1, #2
 350 002c 0DEB0300 		add	r0, sp, r3
 351              	.LVL24:
 236:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 352              		.loc 1 236 24 view .LVU97
 353 0030 FFF7FEFF 		bl	valve_transmit
 354              	.LVL25:
 239:valve_control.c ****             {
 355              		.loc 1 239 9 is_stmt 1 view .LVU98
 239:valve_control.c ****             {
 356              		.loc 1 239 12 is_stmt 0 view .LVU99
 357 0034 0028     		cmp	r0, #0
 358 0036 F2D0     		beq	.L24
 241:valve_control.c ****             }
 359              		.loc 1 241 20 view .LVU100
 360 0038 0120     		movs	r0, #1
 361              	.LVL26:
 241:valve_control.c ****             }
 362              		.loc 1 241 20 view .LVU101
 363 003a F0E7     		b	.L24
 364              	.LVL27:
 365              	.L22:
 249:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 366              		.loc 1 249 9 is_stmt 1 view .LVU102
 249:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 367              		.loc 1 249 28 is_stmt 0 view .LVU103
 368 003c 0523     		movs	r3, #5
 369 003e 8DF80530 		strb	r3, [sp, #5]
 250:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 370              		.loc 1 250 9 is_stmt 1 view .LVU104
 250:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 371              		.loc 1 250 24 is_stmt 0 view .LVU105
 372 0042 0A22     		movs	r2, #10
 373 0044 0221     		movs	r1, #2
 374 0046 01A8     		add	r0, sp, #4
 375              	.LVL28:
 250:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 376              		.loc 1 250 24 view .LVU106
 377 0048 FFF7FEFF 		bl	valve_transmit
 378              	.LVL29:
 253:valve_control.c ****             {
 379              		.loc 1 253 9 is_stmt 1 view .LVU107
 253:valve_control.c ****             {
 380              		.loc 1 253 12 is_stmt 0 view .LVU108
 381 004c 0028     		cmp	r0, #0
 382 004e E6D0     		beq	.L24
 255:valve_control.c ****             }
 383              		.loc 1 255 20 view .LVU109
 384 0050 2046     		mov	r0, r4
 385              	.LVL30:
 255:valve_control.c ****             }
 386              		.loc 1 255 20 view .LVU110
 387 0052 E4E7     		b	.L24
 388              	.LVL31:
ARM GAS  /tmp/ccNSwPZ1.s 			page 13


 389              	.L23:
 263:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 390              		.loc 1 263 9 is_stmt 1 view .LVU111
 263:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 391              		.loc 1 263 28 is_stmt 0 view .LVU112
 392 0054 0423     		movs	r3, #4
 393 0056 8DF80530 		strb	r3, [sp, #5]
 264:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 394              		.loc 1 264 9 is_stmt 1 view .LVU113
 264:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 395              		.loc 1 264 24 is_stmt 0 view .LVU114
 396 005a 0A22     		movs	r2, #10
 397 005c 0221     		movs	r1, #2
 398 005e 0DEB0300 		add	r0, sp, r3
 399              	.LVL32:
 264:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 400              		.loc 1 264 24 view .LVU115
 401 0062 FFF7FEFF 		bl	valve_transmit
 402              	.LVL33:
 267:valve_control.c ****             {
 403              		.loc 1 267 9 is_stmt 1 view .LVU116
 267:valve_control.c ****             {
 404              		.loc 1 267 12 is_stmt 0 view .LVU117
 405 0066 08B1     		cbz	r0, .L32
 269:valve_control.c ****             }
 406              		.loc 1 269 20 view .LVU118
 407 0068 0120     		movs	r0, #1
 408              	.LVL34:
 269:valve_control.c ****             }
 409              		.loc 1 269 20 view .LVU119
 410 006a D8E7     		b	.L24
 411              	.LVL35:
 412              	.L32:
 271:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 413              		.loc 1 271 9 is_stmt 1 view .LVU120
 271:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 414              		.loc 1 271 24 is_stmt 0 view .LVU121
 415 006c 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 271:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 416              		.loc 1 271 28 view .LVU122
 417 0070 0133     		adds	r3, r3, #1
 418 0072 8DF80530 		strb	r3, [sp, #5]
 272:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 419              		.loc 1 272 9 is_stmt 1 view .LVU123
 272:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 420              		.loc 1 272 24 is_stmt 0 view .LVU124
 421 0076 0A22     		movs	r2, #10
 422 0078 0221     		movs	r1, #2
 423 007a 01A8     		add	r0, sp, #4
 424              	.LVL36:
 272:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 425              		.loc 1 272 24 view .LVU125
 426 007c FFF7FEFF 		bl	valve_transmit
 427              	.LVL37:
 275:valve_control.c ****             {
 428              		.loc 1 275 9 is_stmt 1 view .LVU126
 275:valve_control.c ****             {
ARM GAS  /tmp/ccNSwPZ1.s 			page 14


 429              		.loc 1 275 12 is_stmt 0 view .LVU127
 430 0080 0028     		cmp	r0, #0
 431 0082 CCD0     		beq	.L24
 277:valve_control.c ****             }
 432              		.loc 1 277 20 view .LVU128
 433 0084 0120     		movs	r0, #1
 434              	.LVL38:
 277:valve_control.c ****             }
 435              		.loc 1 277 20 view .LVU129
 436 0086 CAE7     		b	.L24
 437              		.cfi_endproc
 438              	.LFE336:
 440              		.section	.text.vc_crack_main_valves,"ax",%progbits
 441              		.align	1
 442              		.global	vc_crack_main_valves
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 447              	vc_crack_main_valves:
 448              	.LVL39:
 449              	.LFB337:
 285:valve_control.c **** 
 286:valve_control.c **** 
 287:valve_control.c **** /*******************************************************************************
 288:valve_control.c **** *                                                                              *
 289:valve_control.c **** * PROCEDURE:                                                                   *
 290:valve_control.c **** * 		vc_crack_main_valves                                                   *
 291:valve_control.c **** *                                                                              *
 292:valve_control.c **** * DESCRIPTION:                                                                 *
 293:valve_control.c **** *       Crack open a main valve                                                *
 294:valve_control.c **** *                                                                              *
 295:valve_control.c **** *******************************************************************************/
 296:valve_control.c **** VC_STATUS vc_crack_main_valves
 297:valve_control.c ****     (
 298:valve_control.c ****     MAIN_VALVE main_valves
 299:valve_control.c ****     )
 300:valve_control.c **** {
 450              		.loc 1 300 1 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 8
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		.loc 1 300 1 is_stmt 0 view .LVU131
 455 0000 10B5     		push	{r4, lr}
 456              	.LCFI14:
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 4, -8
 459              		.cfi_offset 14, -4
 460 0002 82B0     		sub	sp, sp, #8
 461              	.LCFI15:
 462              		.cfi_def_cfa_offset 16
 463 0004 0446     		mov	r4, r0
 301:valve_control.c **** /*------------------------------------------------------------------------------
 302:valve_control.c ****  Local Variables  
 303:valve_control.c **** ------------------------------------------------------------------------------*/
 304:valve_control.c **** uint8_t      valve_subcommand;   /* Main valve subcommand/number */
 464              		.loc 1 304 1 is_stmt 1 view .LVU132
 305:valve_control.c **** uint8_t      valve_tx_buffer[2]; /* Buffer for transmitting data */
ARM GAS  /tmp/ccNSwPZ1.s 			page 15


 465              		.loc 1 305 1 view .LVU133
 306:valve_control.c **** VALVE_STATUS valve_status;       /* Return codes from valve API  */
 466              		.loc 1 306 1 view .LVU134
 307:valve_control.c **** 
 308:valve_control.c **** 
 309:valve_control.c **** /*------------------------------------------------------------------------------
 310:valve_control.c ****  Initializations 
 311:valve_control.c **** ------------------------------------------------------------------------------*/
 312:valve_control.c **** valve_subcommand   = VALVE_CRACK_CODE; 
 467              		.loc 1 312 1 view .LVU135
 468              	.LVL40:
 313:valve_control.c **** valve_status       = VALVE_OK;
 469              		.loc 1 313 1 view .LVU136
 314:valve_control.c **** valve_tx_buffer[0] = VALVE_OP;
 470              		.loc 1 314 1 view .LVU137
 471              		.loc 1 314 20 is_stmt 0 view .LVU138
 472 0006 5223     		movs	r3, #82
 473 0008 8DF80430 		strb	r3, [sp, #4]
 315:valve_control.c **** valve_tx_buffer[1] = 0;
 474              		.loc 1 315 1 is_stmt 1 view .LVU139
 475              		.loc 1 315 20 is_stmt 0 view .LVU140
 476 000c 0023     		movs	r3, #0
 477 000e 8DF80530 		strb	r3, [sp, #5]
 316:valve_control.c **** 
 317:valve_control.c **** 
 318:valve_control.c **** /*------------------------------------------------------------------------------
 319:valve_control.c ****  Implementation 
 320:valve_control.c **** ------------------------------------------------------------------------------*/
 321:valve_control.c **** /* Setup subcommand and transmit data */
 322:valve_control.c **** switch ( main_valves )
 478              		.loc 1 322 1 is_stmt 1 view .LVU141
 479 0012 0128     		cmp	r0, #1
 480 0014 10D0     		beq	.L34
 481 0016 0228     		cmp	r0, #2
 482 0018 1AD0     		beq	.L35
 483 001a 10B1     		cbz	r0, .L43
 484 001c 0020     		movs	r0, #0
 485              	.LVL41:
 486              	.L36:
 323:valve_control.c ****     {
 324:valve_control.c ****     /* Open the main LOX valve */
 325:valve_control.c ****     case MAIN_VALVE_LOX_MAIN:
 326:valve_control.c ****         {
 327:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand;
 328:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 329:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 330:valve_control.c ****                                        VALVE_TIMEOUT );
 331:valve_control.c ****         if ( valve_status != VALVE_OK )
 332:valve_control.c ****             {
 333:valve_control.c ****             return VC_UART_ERROR;
 334:valve_control.c ****             }
 335:valve_control.c ****         break;
 336:valve_control.c ****         }
 337:valve_control.c **** 
 338:valve_control.c ****     /* Open the main fuel valve */
 339:valve_control.c ****     case MAIN_VALVE_FUEL_MAIN:
 340:valve_control.c ****         {
ARM GAS  /tmp/ccNSwPZ1.s 			page 16


 341:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand + 1;
 342:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 343:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 344:valve_control.c ****                                        VALVE_TIMEOUT );
 345:valve_control.c ****         if ( valve_status != VALVE_OK )
 346:valve_control.c ****             {
 347:valve_control.c ****             return VC_UART_ERROR;
 348:valve_control.c ****             }
 349:valve_control.c ****         break;
 350:valve_control.c ****         }
 351:valve_control.c **** 
 352:valve_control.c ****     /* Open both main valves */
 353:valve_control.c ****     case MAIN_VALVE_BOTH_MAINS:
 354:valve_control.c ****         {
 355:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand;
 356:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 357:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 358:valve_control.c ****                                        VALVE_TIMEOUT );
 359:valve_control.c ****         if ( valve_status != VALVE_OK )
 360:valve_control.c ****             {
 361:valve_control.c ****             return VC_UART_ERROR;
 362:valve_control.c ****             }
 363:valve_control.c ****         valve_tx_buffer[1] += 1;
 364:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 365:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 366:valve_control.c ****                                        VALVE_TIMEOUT );
 367:valve_control.c ****         if ( valve_status != VALVE_OK )
 368:valve_control.c ****             {
 369:valve_control.c ****             return VC_UART_ERROR;
 370:valve_control.c ****             }
 371:valve_control.c ****         break;
 372:valve_control.c ****         }
 373:valve_control.c **** 
 374:valve_control.c ****     } /* switch ( main_valves ) */
 375:valve_control.c **** return VC_OK;
 376:valve_control.c **** } /* vc_crack_main_valves */
 487              		.loc 1 376 1 is_stmt 0 view .LVU142
 488 001e 02B0     		add	sp, sp, #8
 489              	.LCFI16:
 490              		.cfi_remember_state
 491              		.cfi_def_cfa_offset 8
 492              		@ sp needed
 493 0020 10BD     		pop	{r4, pc}
 494              	.LVL42:
 495              	.L43:
 496              	.LCFI17:
 497              		.cfi_restore_state
 327:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 498              		.loc 1 327 9 is_stmt 1 view .LVU143
 327:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 499              		.loc 1 327 28 is_stmt 0 view .LVU144
 500 0022 0A22     		movs	r2, #10
 501 0024 8DF80520 		strb	r2, [sp, #5]
 328:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 502              		.loc 1 328 9 is_stmt 1 view .LVU145
 328:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 503              		.loc 1 328 24 is_stmt 0 view .LVU146
ARM GAS  /tmp/ccNSwPZ1.s 			page 17


 504 0028 0221     		movs	r1, #2
 505 002a 01A8     		add	r0, sp, #4
 506              	.LVL43:
 328:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 507              		.loc 1 328 24 view .LVU147
 508 002c FFF7FEFF 		bl	valve_transmit
 509              	.LVL44:
 331:valve_control.c ****             {
 510              		.loc 1 331 9 is_stmt 1 view .LVU148
 331:valve_control.c ****             {
 511              		.loc 1 331 12 is_stmt 0 view .LVU149
 512 0030 0028     		cmp	r0, #0
 513 0032 F4D0     		beq	.L36
 333:valve_control.c ****             }
 514              		.loc 1 333 20 view .LVU150
 515 0034 0120     		movs	r0, #1
 516              	.LVL45:
 333:valve_control.c ****             }
 517              		.loc 1 333 20 view .LVU151
 518 0036 F2E7     		b	.L36
 519              	.LVL46:
 520              	.L34:
 341:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 521              		.loc 1 341 9 is_stmt 1 view .LVU152
 341:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 522              		.loc 1 341 28 is_stmt 0 view .LVU153
 523 0038 0B23     		movs	r3, #11
 524 003a 8DF80530 		strb	r3, [sp, #5]
 342:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 525              		.loc 1 342 9 is_stmt 1 view .LVU154
 342:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 526              		.loc 1 342 24 is_stmt 0 view .LVU155
 527 003e 0A22     		movs	r2, #10
 528 0040 0221     		movs	r1, #2
 529 0042 01A8     		add	r0, sp, #4
 530              	.LVL47:
 342:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 531              		.loc 1 342 24 view .LVU156
 532 0044 FFF7FEFF 		bl	valve_transmit
 533              	.LVL48:
 345:valve_control.c ****             {
 534              		.loc 1 345 9 is_stmt 1 view .LVU157
 345:valve_control.c ****             {
 535              		.loc 1 345 12 is_stmt 0 view .LVU158
 536 0048 0028     		cmp	r0, #0
 537 004a E8D0     		beq	.L36
 347:valve_control.c ****             }
 538              		.loc 1 347 20 view .LVU159
 539 004c 2046     		mov	r0, r4
 540              	.LVL49:
 347:valve_control.c ****             }
 541              		.loc 1 347 20 view .LVU160
 542 004e E6E7     		b	.L36
 543              	.LVL50:
 544              	.L35:
 355:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 545              		.loc 1 355 9 is_stmt 1 view .LVU161
ARM GAS  /tmp/ccNSwPZ1.s 			page 18


 355:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 546              		.loc 1 355 28 is_stmt 0 view .LVU162
 547 0050 0A22     		movs	r2, #10
 548 0052 8DF80520 		strb	r2, [sp, #5]
 356:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 549              		.loc 1 356 9 is_stmt 1 view .LVU163
 356:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 550              		.loc 1 356 24 is_stmt 0 view .LVU164
 551 0056 0221     		movs	r1, #2
 552 0058 01A8     		add	r0, sp, #4
 553              	.LVL51:
 356:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 554              		.loc 1 356 24 view .LVU165
 555 005a FFF7FEFF 		bl	valve_transmit
 556              	.LVL52:
 359:valve_control.c ****             {
 557              		.loc 1 359 9 is_stmt 1 view .LVU166
 359:valve_control.c ****             {
 558              		.loc 1 359 12 is_stmt 0 view .LVU167
 559 005e 08B1     		cbz	r0, .L44
 361:valve_control.c ****             }
 560              		.loc 1 361 20 view .LVU168
 561 0060 0120     		movs	r0, #1
 562              	.LVL53:
 361:valve_control.c ****             }
 563              		.loc 1 361 20 view .LVU169
 564 0062 DCE7     		b	.L36
 565              	.LVL54:
 566              	.L44:
 363:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 567              		.loc 1 363 9 is_stmt 1 view .LVU170
 363:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 568              		.loc 1 363 24 is_stmt 0 view .LVU171
 569 0064 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 363:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 570              		.loc 1 363 28 view .LVU172
 571 0068 0133     		adds	r3, r3, #1
 572 006a 8DF80530 		strb	r3, [sp, #5]
 364:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 573              		.loc 1 364 9 is_stmt 1 view .LVU173
 364:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 574              		.loc 1 364 24 is_stmt 0 view .LVU174
 575 006e 0A22     		movs	r2, #10
 576 0070 0221     		movs	r1, #2
 577 0072 01A8     		add	r0, sp, #4
 578              	.LVL55:
 364:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 579              		.loc 1 364 24 view .LVU175
 580 0074 FFF7FEFF 		bl	valve_transmit
 581              	.LVL56:
 367:valve_control.c ****             {
 582              		.loc 1 367 9 is_stmt 1 view .LVU176
 367:valve_control.c ****             {
 583              		.loc 1 367 12 is_stmt 0 view .LVU177
 584 0078 0028     		cmp	r0, #0
 585 007a D0D0     		beq	.L36
 369:valve_control.c ****             }
ARM GAS  /tmp/ccNSwPZ1.s 			page 19


 586              		.loc 1 369 20 view .LVU178
 587 007c 0120     		movs	r0, #1
 588              	.LVL57:
 369:valve_control.c ****             }
 589              		.loc 1 369 20 view .LVU179
 590 007e CEE7     		b	.L36
 591              		.cfi_endproc
 592              	.LFE337:
 594              		.section	.text.vc_close_main_valves,"ax",%progbits
 595              		.align	1
 596              		.global	vc_close_main_valves
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 601              	vc_close_main_valves:
 602              	.LVL58:
 603              	.LFB338:
 377:valve_control.c **** 
 378:valve_control.c **** 
 379:valve_control.c **** /*******************************************************************************
 380:valve_control.c **** *                                                                              *
 381:valve_control.c **** * PROCEDURE:                                                                   *
 382:valve_control.c **** * 		vc_close_main_valves                                                   *
 383:valve_control.c **** *                                                                              *
 384:valve_control.c **** * DESCRIPTION:                                                                 *
 385:valve_control.c **** *       Close a main valve                                                     *
 386:valve_control.c **** *                                                                              *
 387:valve_control.c **** *******************************************************************************/
 388:valve_control.c **** VC_STATUS vc_close_main_valves
 389:valve_control.c ****     (
 390:valve_control.c ****     MAIN_VALVE main_valve
 391:valve_control.c ****     )
 392:valve_control.c **** {
 604              		.loc 1 392 1 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 8
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		.loc 1 392 1 is_stmt 0 view .LVU181
 609 0000 10B5     		push	{r4, lr}
 610              	.LCFI18:
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 4, -8
 613              		.cfi_offset 14, -4
 614 0002 82B0     		sub	sp, sp, #8
 615              	.LCFI19:
 616              		.cfi_def_cfa_offset 16
 617 0004 0446     		mov	r4, r0
 393:valve_control.c **** /*------------------------------------------------------------------------------
 394:valve_control.c ****  Local Variables  
 395:valve_control.c **** ------------------------------------------------------------------------------*/
 396:valve_control.c **** uint8_t      valve_subcommand;   /* Main valve subcommand/number */
 618              		.loc 1 396 1 is_stmt 1 view .LVU182
 397:valve_control.c **** uint8_t      valve_tx_buffer[2]; /* Buffer for transmitting data */
 619              		.loc 1 397 1 view .LVU183
 398:valve_control.c **** VALVE_STATUS valve_status;       /* Return codes from valve API  */
 620              		.loc 1 398 1 view .LVU184
 399:valve_control.c **** 
ARM GAS  /tmp/ccNSwPZ1.s 			page 20


 400:valve_control.c **** 
 401:valve_control.c **** /*------------------------------------------------------------------------------
 402:valve_control.c ****  Initializations 
 403:valve_control.c **** ------------------------------------------------------------------------------*/
 404:valve_control.c **** valve_subcommand   = VALVE_CLOSE_CODE; 
 621              		.loc 1 404 1 view .LVU185
 622              	.LVL59:
 405:valve_control.c **** valve_status       = VALVE_OK;
 623              		.loc 1 405 1 view .LVU186
 406:valve_control.c **** valve_tx_buffer[0] = VALVE_OP;
 624              		.loc 1 406 1 view .LVU187
 625              		.loc 1 406 20 is_stmt 0 view .LVU188
 626 0006 5223     		movs	r3, #82
 627 0008 8DF80430 		strb	r3, [sp, #4]
 407:valve_control.c **** valve_tx_buffer[1] = 0;
 628              		.loc 1 407 1 is_stmt 1 view .LVU189
 629              		.loc 1 407 20 is_stmt 0 view .LVU190
 630 000c 0023     		movs	r3, #0
 631 000e 8DF80530 		strb	r3, [sp, #5]
 408:valve_control.c **** 
 409:valve_control.c **** 
 410:valve_control.c **** /*------------------------------------------------------------------------------
 411:valve_control.c ****  Implementation 
 412:valve_control.c **** ------------------------------------------------------------------------------*/
 413:valve_control.c **** /* Setup subcommand and transmit data */
 414:valve_control.c **** switch ( main_valve )
 632              		.loc 1 414 1 is_stmt 1 view .LVU191
 633 0012 0128     		cmp	r0, #1
 634 0014 11D0     		beq	.L46
 635 0016 0228     		cmp	r0, #2
 636 0018 1BD0     		beq	.L47
 637 001a 10B1     		cbz	r0, .L55
 638 001c 0020     		movs	r0, #0
 639              	.LVL60:
 640              	.L48:
 415:valve_control.c ****     {
 416:valve_control.c ****     /* Open the main LOX valve */
 417:valve_control.c ****     case MAIN_VALVE_LOX_MAIN:
 418:valve_control.c ****         {
 419:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand;
 420:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 421:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 422:valve_control.c ****                                        VALVE_TIMEOUT );
 423:valve_control.c ****         if ( valve_status != VALVE_OK )
 424:valve_control.c ****             {
 425:valve_control.c ****             return VC_UART_ERROR;
 426:valve_control.c ****             }
 427:valve_control.c ****         break;
 428:valve_control.c ****         }
 429:valve_control.c **** 
 430:valve_control.c ****     /* Open the main fuel valve */
 431:valve_control.c ****     case MAIN_VALVE_FUEL_MAIN:
 432:valve_control.c ****         {
 433:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand + 1;
 434:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 435:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 436:valve_control.c ****                                        VALVE_TIMEOUT );
ARM GAS  /tmp/ccNSwPZ1.s 			page 21


 437:valve_control.c ****         if ( valve_status != VALVE_OK )
 438:valve_control.c ****             {
 439:valve_control.c ****             return VC_UART_ERROR;
 440:valve_control.c ****             }
 441:valve_control.c ****         break;
 442:valve_control.c ****         }
 443:valve_control.c **** 
 444:valve_control.c ****     /* Open both main valves */
 445:valve_control.c ****     case MAIN_VALVE_BOTH_MAINS:
 446:valve_control.c ****         {
 447:valve_control.c ****         valve_tx_buffer[1] = valve_subcommand;
 448:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 449:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 450:valve_control.c ****                                        VALVE_TIMEOUT );
 451:valve_control.c ****         if ( valve_status != VALVE_OK )
 452:valve_control.c ****             {
 453:valve_control.c ****             return VC_UART_ERROR;
 454:valve_control.c ****             }
 455:valve_control.c ****         valve_tx_buffer[1] += 1;
 456:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 457:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 458:valve_control.c ****                                        VALVE_TIMEOUT );
 459:valve_control.c ****         if ( valve_status != VALVE_OK )
 460:valve_control.c ****             {
 461:valve_control.c ****             return VC_UART_ERROR;
 462:valve_control.c ****             }
 463:valve_control.c ****         break;
 464:valve_control.c ****         }
 465:valve_control.c **** 
 466:valve_control.c ****     } /* switch ( main_valves ) */
 467:valve_control.c **** return VC_OK;
 468:valve_control.c **** } /* vc_close_main_valves */
 641              		.loc 1 468 1 is_stmt 0 view .LVU192
 642 001e 02B0     		add	sp, sp, #8
 643              	.LCFI20:
 644              		.cfi_remember_state
 645              		.cfi_def_cfa_offset 8
 646              		@ sp needed
 647 0020 10BD     		pop	{r4, pc}
 648              	.LVL61:
 649              	.L55:
 650              	.LCFI21:
 651              		.cfi_restore_state
 419:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 652              		.loc 1 419 9 is_stmt 1 view .LVU193
 419:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 653              		.loc 1 419 28 is_stmt 0 view .LVU194
 654 0022 0623     		movs	r3, #6
 655 0024 8DF80530 		strb	r3, [sp, #5]
 420:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 656              		.loc 1 420 9 is_stmt 1 view .LVU195
 420:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 657              		.loc 1 420 24 is_stmt 0 view .LVU196
 658 0028 0A22     		movs	r2, #10
 659 002a 0221     		movs	r1, #2
 660 002c 01A8     		add	r0, sp, #4
 661              	.LVL62:
ARM GAS  /tmp/ccNSwPZ1.s 			page 22


 420:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 662              		.loc 1 420 24 view .LVU197
 663 002e FFF7FEFF 		bl	valve_transmit
 664              	.LVL63:
 423:valve_control.c ****             {
 665              		.loc 1 423 9 is_stmt 1 view .LVU198
 423:valve_control.c ****             {
 666              		.loc 1 423 12 is_stmt 0 view .LVU199
 667 0032 0028     		cmp	r0, #0
 668 0034 F3D0     		beq	.L48
 425:valve_control.c ****             }
 669              		.loc 1 425 20 view .LVU200
 670 0036 0120     		movs	r0, #1
 671              	.LVL64:
 425:valve_control.c ****             }
 672              		.loc 1 425 20 view .LVU201
 673 0038 F1E7     		b	.L48
 674              	.LVL65:
 675              	.L46:
 433:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 676              		.loc 1 433 9 is_stmt 1 view .LVU202
 433:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 677              		.loc 1 433 28 is_stmt 0 view .LVU203
 678 003a 0723     		movs	r3, #7
 679 003c 8DF80530 		strb	r3, [sp, #5]
 434:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 680              		.loc 1 434 9 is_stmt 1 view .LVU204
 434:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 681              		.loc 1 434 24 is_stmt 0 view .LVU205
 682 0040 0A22     		movs	r2, #10
 683 0042 0221     		movs	r1, #2
 684 0044 01A8     		add	r0, sp, #4
 685              	.LVL66:
 434:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 686              		.loc 1 434 24 view .LVU206
 687 0046 FFF7FEFF 		bl	valve_transmit
 688              	.LVL67:
 437:valve_control.c ****             {
 689              		.loc 1 437 9 is_stmt 1 view .LVU207
 437:valve_control.c ****             {
 690              		.loc 1 437 12 is_stmt 0 view .LVU208
 691 004a 0028     		cmp	r0, #0
 692 004c E7D0     		beq	.L48
 439:valve_control.c ****             }
 693              		.loc 1 439 20 view .LVU209
 694 004e 2046     		mov	r0, r4
 695              	.LVL68:
 439:valve_control.c ****             }
 696              		.loc 1 439 20 view .LVU210
 697 0050 E5E7     		b	.L48
 698              	.LVL69:
 699              	.L47:
 447:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 700              		.loc 1 447 9 is_stmt 1 view .LVU211
 447:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 701              		.loc 1 447 28 is_stmt 0 view .LVU212
 702 0052 0623     		movs	r3, #6
ARM GAS  /tmp/ccNSwPZ1.s 			page 23


 703 0054 8DF80530 		strb	r3, [sp, #5]
 448:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 704              		.loc 1 448 9 is_stmt 1 view .LVU213
 448:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 705              		.loc 1 448 24 is_stmt 0 view .LVU214
 706 0058 0A22     		movs	r2, #10
 707 005a 0221     		movs	r1, #2
 708 005c 01A8     		add	r0, sp, #4
 709              	.LVL70:
 448:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 710              		.loc 1 448 24 view .LVU215
 711 005e FFF7FEFF 		bl	valve_transmit
 712              	.LVL71:
 451:valve_control.c ****             {
 713              		.loc 1 451 9 is_stmt 1 view .LVU216
 451:valve_control.c ****             {
 714              		.loc 1 451 12 is_stmt 0 view .LVU217
 715 0062 08B1     		cbz	r0, .L56
 453:valve_control.c ****             }
 716              		.loc 1 453 20 view .LVU218
 717 0064 0120     		movs	r0, #1
 718              	.LVL72:
 453:valve_control.c ****             }
 719              		.loc 1 453 20 view .LVU219
 720 0066 DAE7     		b	.L48
 721              	.LVL73:
 722              	.L56:
 455:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 723              		.loc 1 455 9 is_stmt 1 view .LVU220
 455:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 724              		.loc 1 455 24 is_stmt 0 view .LVU221
 725 0068 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 455:valve_control.c ****         valve_status = valve_transmit( &valve_tx_buffer[0], 
 726              		.loc 1 455 28 view .LVU222
 727 006c 0133     		adds	r3, r3, #1
 728 006e 8DF80530 		strb	r3, [sp, #5]
 456:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 729              		.loc 1 456 9 is_stmt 1 view .LVU223
 456:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 730              		.loc 1 456 24 is_stmt 0 view .LVU224
 731 0072 0A22     		movs	r2, #10
 732 0074 0221     		movs	r1, #2
 733 0076 01A8     		add	r0, sp, #4
 734              	.LVL74:
 456:valve_control.c ****                                        sizeof( valve_tx_buffer ), 
 735              		.loc 1 456 24 view .LVU225
 736 0078 FFF7FEFF 		bl	valve_transmit
 737              	.LVL75:
 459:valve_control.c ****             {
 738              		.loc 1 459 9 is_stmt 1 view .LVU226
 459:valve_control.c ****             {
 739              		.loc 1 459 12 is_stmt 0 view .LVU227
 740 007c 0028     		cmp	r0, #0
 741 007e CED0     		beq	.L48
 461:valve_control.c ****             }
 742              		.loc 1 461 20 view .LVU228
 743 0080 0120     		movs	r0, #1
ARM GAS  /tmp/ccNSwPZ1.s 			page 24


 744              	.LVL76:
 461:valve_control.c ****             }
 745              		.loc 1 461 20 view .LVU229
 746 0082 CCE7     		b	.L48
 747              		.cfi_endproc
 748              	.LFE338:
 750              		.section	.text.vc_calibrate_main_valves,"ax",%progbits
 751              		.align	1
 752              		.global	vc_calibrate_main_valves
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 757              	vc_calibrate_main_valves:
 758              	.LFB339:
 469:valve_control.c **** 
 470:valve_control.c **** 
 471:valve_control.c **** /*******************************************************************************
 472:valve_control.c **** *                                                                              *
 473:valve_control.c **** * PROCEDURE:                                                                   *
 474:valve_control.c **** * 		vc_calibrate_main_valves                                               *
 475:valve_control.c **** *                                                                              *
 476:valve_control.c **** * DESCRIPTION:                                                                 *
 477:valve_control.c **** *       Calibrate the main valves                                              *
 478:valve_control.c **** *                                                                              *
 479:valve_control.c **** *******************************************************************************/
 480:valve_control.c **** VC_STATUS vc_calibrate_main_valves
 481:valve_control.c ****     (
 482:valve_control.c ****     void
 483:valve_control.c ****     )
 484:valve_control.c **** {
 759              		.loc 1 484 1 is_stmt 1 view -0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 8
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763 0000 00B5     		push	{lr}
 764              	.LCFI22:
 765              		.cfi_def_cfa_offset 4
 766              		.cfi_offset 14, -4
 767 0002 83B0     		sub	sp, sp, #12
 768              	.LCFI23:
 769              		.cfi_def_cfa_offset 16
 485:valve_control.c **** /*------------------------------------------------------------------------------
 486:valve_control.c ****  Local Variables  
 487:valve_control.c **** ------------------------------------------------------------------------------*/
 488:valve_control.c **** uint8_t      valve_tx_buffer[2];  /* Buffer for transmitting data */
 770              		.loc 1 488 1 view .LVU231
 489:valve_control.c **** VALVE_STATUS valve_status;        /* Return codes from valve API  */
 771              		.loc 1 489 1 view .LVU232
 490:valve_control.c **** 
 491:valve_control.c **** 
 492:valve_control.c **** /*------------------------------------------------------------------------------
 493:valve_control.c ****  Initializations 
 494:valve_control.c **** ------------------------------------------------------------------------------*/
 495:valve_control.c **** valve_status       = VALVE_OK;
 772              		.loc 1 495 1 view .LVU233
 773              	.LVL77:
 496:valve_control.c **** valve_tx_buffer[0] = VALVE_OP;
ARM GAS  /tmp/ccNSwPZ1.s 			page 25


 774              		.loc 1 496 1 view .LVU234
 775              		.loc 1 496 20 is_stmt 0 view .LVU235
 776 0004 5223     		movs	r3, #82
 777 0006 8DF80430 		strb	r3, [sp, #4]
 497:valve_control.c **** valve_tx_buffer[1] = VALVE_CALIBRATE_CODE;
 778              		.loc 1 497 1 is_stmt 1 view .LVU236
 779              		.loc 1 497 20 is_stmt 0 view .LVU237
 780 000a 0823     		movs	r3, #8
 781 000c 8DF80530 		strb	r3, [sp, #5]
 498:valve_control.c **** 
 499:valve_control.c **** 
 500:valve_control.c **** /*------------------------------------------------------------------------------
 501:valve_control.c ****  Implementation 
 502:valve_control.c **** ------------------------------------------------------------------------------*/
 503:valve_control.c **** 
 504:valve_control.c **** /* Send data to valve controller */
 505:valve_control.c **** valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 782              		.loc 1 505 1 is_stmt 1 view .LVU238
 783              		.loc 1 505 16 is_stmt 0 view .LVU239
 784 0010 0A22     		movs	r2, #10
 785 0012 0221     		movs	r1, #2
 786 0014 01A8     		add	r0, sp, #4
 787 0016 FFF7FEFF 		bl	valve_transmit
 788              	.LVL78:
 506:valve_control.c ****                                sizeof( valve_tx_buffer ), 
 507:valve_control.c ****                                VALVE_TIMEOUT );
 508:valve_control.c **** if ( valve_status != VALVE_OK )
 789              		.loc 1 508 1 is_stmt 1 view .LVU240
 790              		.loc 1 508 4 is_stmt 0 view .LVU241
 791 001a 10B9     		cbnz	r0, .L60
 792              	.L58:
 509:valve_control.c ****     {
 510:valve_control.c ****     return VALVE_UART_ERROR;
 511:valve_control.c ****     }
 512:valve_control.c **** else
 513:valve_control.c ****     {
 514:valve_control.c ****     return VC_OK;
 515:valve_control.c ****     }
 516:valve_control.c **** } /* vc_calibrate_main_valves */
 793              		.loc 1 516 1 view .LVU242
 794 001c 03B0     		add	sp, sp, #12
 795              	.LCFI24:
 796              		.cfi_remember_state
 797              		.cfi_def_cfa_offset 4
 798              		@ sp needed
 799 001e 5DF804FB 		ldr	pc, [sp], #4
 800              	.L60:
 801              	.LCFI25:
 802              		.cfi_restore_state
 510:valve_control.c ****     }
 803              		.loc 1 510 12 view .LVU243
 804 0022 0320     		movs	r0, #3
 805 0024 FAE7     		b	.L58
 806              		.cfi_endproc
 807              	.LFE339:
 809              		.section	.text.vc_enable_main_valves,"ax",%progbits
 810              		.align	1
ARM GAS  /tmp/ccNSwPZ1.s 			page 26


 811              		.global	vc_enable_main_valves
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 816              	vc_enable_main_valves:
 817              	.LFB340:
 517:valve_control.c **** 
 518:valve_control.c **** 
 519:valve_control.c **** /*******************************************************************************
 520:valve_control.c **** *                                                                              *
 521:valve_control.c **** * PROCEDURE:                                                                   *
 522:valve_control.c **** * 		vc_enable_main_valves                                                  *
 523:valve_control.c **** *                                                                              *
 524:valve_control.c **** * DESCRIPTION:                                                                 *
 525:valve_control.c **** *       Enable the stepper motor drivers for the main valves                   *
 526:valve_control.c **** *                                                                              *
 527:valve_control.c **** *******************************************************************************/
 528:valve_control.c **** VC_STATUS vc_enable_main_valves
 529:valve_control.c ****     (
 530:valve_control.c ****     void
 531:valve_control.c ****     )
 532:valve_control.c **** {
 818              		.loc 1 532 1 is_stmt 1 view -0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822 0000 00B5     		push	{lr}
 823              	.LCFI26:
 824              		.cfi_def_cfa_offset 4
 825              		.cfi_offset 14, -4
 826 0002 83B0     		sub	sp, sp, #12
 827              	.LCFI27:
 828              		.cfi_def_cfa_offset 16
 533:valve_control.c **** /*------------------------------------------------------------------------------
 534:valve_control.c ****  Local Variables  
 535:valve_control.c **** ------------------------------------------------------------------------------*/
 536:valve_control.c **** uint8_t      valve_tx_buffer[2];  /* Buffer for transmitting data */
 829              		.loc 1 536 1 view .LVU245
 537:valve_control.c **** VALVE_STATUS valve_status;        /* Return codes from valve API  */
 830              		.loc 1 537 1 view .LVU246
 538:valve_control.c **** 
 539:valve_control.c **** 
 540:valve_control.c **** /*------------------------------------------------------------------------------
 541:valve_control.c ****  Initializations 
 542:valve_control.c **** ------------------------------------------------------------------------------*/
 543:valve_control.c **** valve_status       = VALVE_OK;
 831              		.loc 1 543 1 view .LVU247
 832              	.LVL79:
 544:valve_control.c **** valve_tx_buffer[0] = VALVE_OP;
 833              		.loc 1 544 1 view .LVU248
 834              		.loc 1 544 20 is_stmt 0 view .LVU249
 835 0004 5223     		movs	r3, #82
 836 0006 8DF80430 		strb	r3, [sp, #4]
 545:valve_control.c **** valve_tx_buffer[1] = VALVE_ENABLE_CODE;
 837              		.loc 1 545 1 is_stmt 1 view .LVU250
 838              		.loc 1 545 20 is_stmt 0 view .LVU251
 839 000a 0023     		movs	r3, #0
ARM GAS  /tmp/ccNSwPZ1.s 			page 27


 840 000c 8DF80530 		strb	r3, [sp, #5]
 546:valve_control.c **** 
 547:valve_control.c **** 
 548:valve_control.c **** /*------------------------------------------------------------------------------
 549:valve_control.c ****  Implementation 
 550:valve_control.c **** ------------------------------------------------------------------------------*/
 551:valve_control.c **** 
 552:valve_control.c **** /* Send data to valve controller */
 553:valve_control.c **** valve_status = valve_transmit( &valve_tx_buffer[0]      , 
 841              		.loc 1 553 1 is_stmt 1 view .LVU252
 842              		.loc 1 553 16 is_stmt 0 view .LVU253
 843 0010 0A22     		movs	r2, #10
 844 0012 0221     		movs	r1, #2
 845 0014 01A8     		add	r0, sp, #4
 846 0016 FFF7FEFF 		bl	valve_transmit
 847              	.LVL80:
 554:valve_control.c ****                                sizeof( valve_tx_buffer ), 
 555:valve_control.c ****                                VALVE_TIMEOUT );
 556:valve_control.c **** if ( valve_status != VALVE_OK )
 848              		.loc 1 556 1 is_stmt 1 view .LVU254
 849              		.loc 1 556 4 is_stmt 0 view .LVU255
 850 001a 10B9     		cbnz	r0, .L64
 851              	.L62:
 557:valve_control.c ****     {
 558:valve_control.c ****     return VALVE_UART_ERROR;
 559:valve_control.c ****     }
 560:valve_control.c **** else
 561:valve_control.c ****     {
 562:valve_control.c ****     return VC_OK;
 563:valve_control.c ****     }
 564:valve_control.c **** 
 565:valve_control.c **** } /* vc_enable_main_valves */
 852              		.loc 1 565 1 view .LVU256
 853 001c 03B0     		add	sp, sp, #12
 854              	.LCFI28:
 855              		.cfi_remember_state
 856              		.cfi_def_cfa_offset 4
 857              		@ sp needed
 858 001e 5DF804FB 		ldr	pc, [sp], #4
 859              	.L64:
 860              	.LCFI29:
 861              		.cfi_restore_state
 558:valve_control.c ****     }
 862              		.loc 1 558 12 view .LVU257
 863 0022 0320     		movs	r0, #3
 864 0024 FAE7     		b	.L62
 865              		.cfi_endproc
 866              	.LFE340:
 868              		.section	.text.vc_connect,"ax",%progbits
 869              		.align	1
 870              		.global	vc_connect
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 875              	vc_connect:
 876              	.LFB341:
 566:valve_control.c **** 
ARM GAS  /tmp/ccNSwPZ1.s 			page 28


 567:valve_control.c **** 
 568:valve_control.c **** /*******************************************************************************
 569:valve_control.c **** *                                                                              *
 570:valve_control.c **** * PROCEDURE:                                                                   *
 571:valve_control.c **** * 		vc_connect                                                             *
 572:valve_control.c **** *                                                                              *
 573:valve_control.c **** * DESCRIPTION:                                                                 *
 574:valve_control.c **** *       Ping the valve controller to verify the controller can be reached      *
 575:valve_control.c **** *                                                                              *
 576:valve_control.c **** *******************************************************************************/
 577:valve_control.c **** VC_STATUS vc_connect
 578:valve_control.c ****     (
 579:valve_control.c ****     void
 580:valve_control.c ****     )
 581:valve_control.c **** {
 877              		.loc 1 581 1 is_stmt 1 view -0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881 0000 00B5     		push	{lr}
 882              	.LCFI30:
 883              		.cfi_def_cfa_offset 4
 884              		.cfi_offset 14, -4
 885 0002 83B0     		sub	sp, sp, #12
 886              	.LCFI31:
 887              		.cfi_def_cfa_offset 16
 582:valve_control.c **** /*------------------------------------------------------------------------------
 583:valve_control.c ****  Local Variables  
 584:valve_control.c **** ------------------------------------------------------------------------------*/
 585:valve_control.c **** uint8_t      command;            /* Valve controller command     */
 888              		.loc 1 585 1 view .LVU259
 586:valve_control.c **** uint8_t      response;           /* Valve controller response    */
 889              		.loc 1 586 1 view .LVU260
 587:valve_control.c **** VALVE_STATUS valve_status;       /* Return codes from valve API  */
 890              		.loc 1 587 1 view .LVU261
 588:valve_control.c **** 
 589:valve_control.c **** 
 590:valve_control.c **** /*------------------------------------------------------------------------------
 591:valve_control.c ****  Initializations 
 592:valve_control.c **** ------------------------------------------------------------------------------*/
 593:valve_control.c **** valve_status = VALVE_OK;
 891              		.loc 1 593 1 view .LVU262
 892              	.LVL81:
 594:valve_control.c **** command      = CONNECT_OP;
 893              		.loc 1 594 1 view .LVU263
 894              		.loc 1 594 14 is_stmt 0 view .LVU264
 895 0004 0223     		movs	r3, #2
 896 0006 8DF80730 		strb	r3, [sp, #7]
 595:valve_control.c **** 
 596:valve_control.c **** 
 597:valve_control.c **** /*------------------------------------------------------------------------------
 598:valve_control.c ****  Implementation 
 599:valve_control.c **** ------------------------------------------------------------------------------*/
 600:valve_control.c **** 
 601:valve_control.c **** /* Send connect command to valve controller */
 602:valve_control.c **** valve_status = valve_transmit( &command, sizeof( command ), VALVE_TIMEOUT );
 897              		.loc 1 602 1 is_stmt 1 view .LVU265
ARM GAS  /tmp/ccNSwPZ1.s 			page 29


 898              		.loc 1 602 16 is_stmt 0 view .LVU266
 899 000a 0A22     		movs	r2, #10
 900 000c 0121     		movs	r1, #1
 901 000e 0DF10700 		add	r0, sp, #7
 902 0012 FFF7FEFF 		bl	valve_transmit
 903              	.LVL82:
 603:valve_control.c **** if ( valve_status != VALVE_OK )
 904              		.loc 1 603 1 is_stmt 1 view .LVU267
 905              		.loc 1 603 4 is_stmt 0 view .LVU268
 906 0016 70B9     		cbnz	r0, .L67
 604:valve_control.c ****     {
 605:valve_control.c ****     return VALVE_UART_ERROR;
 606:valve_control.c ****     }
 607:valve_control.c **** 
 608:valve_control.c **** /* Get response code and verify correctness */
 609:valve_control.c **** valve_status = valve_receive( &response, sizeof( response ), VALVE_TIMEOUT );
 907              		.loc 1 609 1 is_stmt 1 view .LVU269
 908              		.loc 1 609 16 is_stmt 0 view .LVU270
 909 0018 0A22     		movs	r2, #10
 910 001a 0121     		movs	r1, #1
 911 001c 0DF10600 		add	r0, sp, #6
 912              	.LVL83:
 913              		.loc 1 609 16 view .LVU271
 914 0020 FFF7FEFF 		bl	valve_receive
 915              	.LVL84:
 610:valve_control.c **** if ( valve_status != VALVE_OK )
 916              		.loc 1 610 1 is_stmt 1 view .LVU272
 917              		.loc 1 610 4 is_stmt 0 view .LVU273
 918 0024 58B9     		cbnz	r0, .L68
 611:valve_control.c ****     {
 612:valve_control.c ****     return VALVE_UART_ERROR;
 613:valve_control.c ****     }
 614:valve_control.c **** else if ( response != VALVE_CONTROLLER_REV2_ID &&
 919              		.loc 1 614 6 is_stmt 1 view .LVU274
 920              		.loc 1 614 48 is_stmt 0 view .LVU275
 921 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 922              		.loc 1 614 9 view .LVU276
 923 002a 022B     		cmp	r3, #2
 924 002c 18BF     		it	ne
 925 002e 072B     		cmpne	r3, #7
 926 0030 02D0     		beq	.L66
 615:valve_control.c ****           response != VALVE_CONTROLLER_REV3_ID )
 616:valve_control.c ****     {
 617:valve_control.c ****     return VC_CANNOT_CONNECT;
 927              		.loc 1 617 12 view .LVU277
 928 0032 0220     		movs	r0, #2
 929              	.LVL85:
 930              		.loc 1 617 12 view .LVU278
 931 0034 00E0     		b	.L66
 932              	.LVL86:
 933              	.L67:
 605:valve_control.c ****     }
 934              		.loc 1 605 12 view .LVU279
 935 0036 0320     		movs	r0, #3
 936              	.LVL87:
 937              	.L66:
 618:valve_control.c ****     }
ARM GAS  /tmp/ccNSwPZ1.s 			page 30


 619:valve_control.c **** else
 620:valve_control.c ****     {
 621:valve_control.c ****     return VC_OK;
 622:valve_control.c ****     }
 623:valve_control.c **** } /* vc_connect */
 938              		.loc 1 623 1 view .LVU280
 939 0038 03B0     		add	sp, sp, #12
 940              	.LCFI32:
 941              		.cfi_remember_state
 942              		.cfi_def_cfa_offset 4
 943              		@ sp needed
 944 003a 5DF804FB 		ldr	pc, [sp], #4
 945              	.LVL88:
 946              	.L68:
 947              	.LCFI33:
 948              		.cfi_restore_state
 612:valve_control.c ****     }
 949              		.loc 1 612 12 view .LVU281
 950 003e 0320     		movs	r0, #3
 951              	.LVL89:
 612:valve_control.c ****     }
 952              		.loc 1 612 12 view .LVU282
 953 0040 FAE7     		b	.L66
 954              		.cfi_endproc
 955              	.LFE341:
 957              		.section	.text.vc_getstate,"ax",%progbits
 958              		.align	1
 959              		.global	vc_getstate
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 964              	vc_getstate:
 965              	.LVL90:
 966              	.LFB342:
 624:valve_control.c **** 
 625:valve_control.c **** 
 626:valve_control.c **** /*******************************************************************************
 627:valve_control.c **** *                                                                              *
 628:valve_control.c **** * PROCEDURE:                                                                   *
 629:valve_control.c **** * 		vc_getstate                                                            *
 630:valve_control.c **** *                                                                              *
 631:valve_control.c **** * DESCRIPTION:                                                                 *
 632:valve_control.c **** *       Gets the state of the engine engine valves (Open/Closed)               *
 633:valve_control.c **** *                                                                              *
 634:valve_control.c **** *******************************************************************************/
 635:valve_control.c **** VC_STATUS vc_getstate
 636:valve_control.c ****     (
 637:valve_control.c ****     VALVE_STATES* valve_state_ptr /* Pointer to output variable */
 638:valve_control.c ****     )
 639:valve_control.c **** {
 967              		.loc 1 639 1 is_stmt 1 view -0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 8
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              		.loc 1 639 1 is_stmt 0 view .LVU284
 972 0000 10B5     		push	{r4, lr}
 973              	.LCFI34:
ARM GAS  /tmp/ccNSwPZ1.s 			page 31


 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 4, -8
 976              		.cfi_offset 14, -4
 977 0002 82B0     		sub	sp, sp, #8
 978              	.LCFI35:
 979              		.cfi_def_cfa_offset 16
 980 0004 0446     		mov	r4, r0
 640:valve_control.c **** /*------------------------------------------------------------------------------
 641:valve_control.c ****  Local Variables  
 642:valve_control.c **** ------------------------------------------------------------------------------*/
 643:valve_control.c **** SOL_STATE         solenoid_states;   /* States of solenoids       */
 981              		.loc 1 643 1 is_stmt 1 view .LVU285
 644:valve_control.c **** MAIN_VALVE_STATES main_valve_states; /* States of the main valves */
 982              		.loc 1 644 1 view .LVU286
 645:valve_control.c **** uint8_t           command;           /* SDEC sol/valve command    */
 983              		.loc 1 645 1 view .LVU287
 646:valve_control.c **** uint8_t           subcommand;        /* SDEC sol/valve subcommand */
 984              		.loc 1 646 1 view .LVU288
 647:valve_control.c **** VALVE_STATUS      valve_status;      /* Valve module return codes */
 985              		.loc 1 647 1 view .LVU289
 648:valve_control.c **** 
 649:valve_control.c **** 
 650:valve_control.c **** /*------------------------------------------------------------------------------
 651:valve_control.c ****  Initializations 
 652:valve_control.c **** ------------------------------------------------------------------------------*/
 653:valve_control.c **** solenoid_states   = 0;
 986              		.loc 1 653 1 view .LVU290
 987              		.loc 1 653 19 is_stmt 0 view .LVU291
 988 0006 0023     		movs	r3, #0
 989 0008 8DF80730 		strb	r3, [sp, #7]
 654:valve_control.c **** main_valve_states = 0;
 990              		.loc 1 654 1 is_stmt 1 view .LVU292
 991              		.loc 1 654 19 is_stmt 0 view .LVU293
 992 000c 8DF80630 		strb	r3, [sp, #6]
 655:valve_control.c **** *valve_state_ptr  = 0;
 993              		.loc 1 655 1 is_stmt 1 view .LVU294
 994              		.loc 1 655 19 is_stmt 0 view .LVU295
 995 0010 0370     		strb	r3, [r0]
 656:valve_control.c **** command           = SOL_OP;             /* Check solenoids first */
 996              		.loc 1 656 1 is_stmt 1 view .LVU296
 997              		.loc 1 656 19 is_stmt 0 view .LVU297
 998 0012 5123     		movs	r3, #81
 999 0014 8DF80530 		strb	r3, [sp, #5]
 657:valve_control.c **** subcommand        = SOL_GETSTATE_CODE;
 1000              		.loc 1 657 1 is_stmt 1 view .LVU298
 1001              		.loc 1 657 19 is_stmt 0 view .LVU299
 1002 0018 2023     		movs	r3, #32
 1003 001a 8DF80430 		strb	r3, [sp, #4]
 658:valve_control.c **** valve_status      = VALVE_OK;
 1004              		.loc 1 658 1 is_stmt 1 view .LVU300
 1005              	.LVL91:
 659:valve_control.c **** 
 660:valve_control.c **** 
 661:valve_control.c **** /*------------------------------------------------------------------------------
 662:valve_control.c ****  Initializations 
 663:valve_control.c **** ------------------------------------------------------------------------------*/
 664:valve_control.c **** 
ARM GAS  /tmp/ccNSwPZ1.s 			page 32


 665:valve_control.c **** /* Get the solenoids states   */
 666:valve_control.c **** valve_transmit( &command   , sizeof( command    ), VALVE_TIMEOUT );
 1006              		.loc 1 666 1 view .LVU301
 1007 001e 0A22     		movs	r2, #10
 1008 0020 0121     		movs	r1, #1
 1009 0022 0DF10500 		add	r0, sp, #5
 1010              	.LVL92:
 1011              		.loc 1 666 1 is_stmt 0 view .LVU302
 1012 0026 FFF7FEFF 		bl	valve_transmit
 1013              	.LVL93:
 667:valve_control.c **** valve_transmit( &subcommand, sizeof( subcommand ), VALVE_TIMEOUT );
 1014              		.loc 1 667 1 is_stmt 1 view .LVU303
 1015 002a 0A22     		movs	r2, #10
 1016 002c 0121     		movs	r1, #1
 1017 002e 01A8     		add	r0, sp, #4
 1018 0030 FFF7FEFF 		bl	valve_transmit
 1019              	.LVL94:
 668:valve_control.c **** valve_status = valve_receive( &solenoid_states, 
 1020              		.loc 1 668 1 view .LVU304
 1021              		.loc 1 668 16 is_stmt 0 view .LVU305
 1022 0034 0A22     		movs	r2, #10
 1023 0036 0121     		movs	r1, #1
 1024 0038 0DF10700 		add	r0, sp, #7
 1025 003c FFF7FEFF 		bl	valve_receive
 1026              	.LVL95:
 669:valve_control.c ****                               sizeof( solenoid_states ), 
 670:valve_control.c ****                               VALVE_TIMEOUT );
 671:valve_control.c **** if ( valve_status != VALVE_OK )
 1027              		.loc 1 671 1 is_stmt 1 view .LVU306
 1028              		.loc 1 671 4 is_stmt 0 view .LVU307
 1029 0040 10B1     		cbz	r0, .L75
 672:valve_control.c ****     {
 673:valve_control.c ****     return VC_UART_ERROR;
 1030              		.loc 1 673 12 view .LVU308
 1031 0042 0120     		movs	r0, #1
 1032              	.LVL96:
 1033              	.L71:
 674:valve_control.c ****     }
 675:valve_control.c **** 
 676:valve_control.c **** /* Get the main valves states */
 677:valve_control.c **** command    = VALVE_OP;
 678:valve_control.c **** subcommand = VALVE_GETSTATE_CODE;
 679:valve_control.c **** valve_transmit( &command   , sizeof( command    ), VALVE_TIMEOUT );
 680:valve_control.c **** valve_transmit( &subcommand, sizeof( subcommand ), VALVE_TIMEOUT );
 681:valve_control.c **** valve_status = valve_receive( &main_valve_states, 
 682:valve_control.c ****                               sizeof( main_valve_states ), 
 683:valve_control.c ****                               VALVE_TIMEOUT );
 684:valve_control.c **** if ( valve_status != VALVE_OK )
 685:valve_control.c ****     {
 686:valve_control.c ****     return VC_UART_ERROR;
 687:valve_control.c ****     }
 688:valve_control.c **** 
 689:valve_control.c **** /* Export the valve states */
 690:valve_control.c **** *valve_state_ptr |= solenoid_states;
 691:valve_control.c **** *valve_state_ptr |= main_valve_states;
 692:valve_control.c **** return VC_OK;
 693:valve_control.c **** } /* vc_getstate */
ARM GAS  /tmp/ccNSwPZ1.s 			page 33


 1034              		.loc 1 693 1 view .LVU309
 1035 0044 02B0     		add	sp, sp, #8
 1036              	.LCFI36:
 1037              		.cfi_remember_state
 1038              		.cfi_def_cfa_offset 8
 1039              		@ sp needed
 1040 0046 10BD     		pop	{r4, pc}
 1041              	.LVL97:
 1042              	.L75:
 1043              	.LCFI37:
 1044              		.cfi_restore_state
 677:valve_control.c **** subcommand = VALVE_GETSTATE_CODE;
 1045              		.loc 1 677 1 is_stmt 1 view .LVU310
 677:valve_control.c **** subcommand = VALVE_GETSTATE_CODE;
 1046              		.loc 1 677 12 is_stmt 0 view .LVU311
 1047 0048 5223     		movs	r3, #82
 1048 004a 8DF80530 		strb	r3, [sp, #5]
 678:valve_control.c **** valve_transmit( &command   , sizeof( command    ), VALVE_TIMEOUT );
 1049              		.loc 1 678 1 is_stmt 1 view .LVU312
 678:valve_control.c **** valve_transmit( &command   , sizeof( command    ), VALVE_TIMEOUT );
 1050              		.loc 1 678 12 is_stmt 0 view .LVU313
 1051 004e 1423     		movs	r3, #20
 1052 0050 8DF80430 		strb	r3, [sp, #4]
 679:valve_control.c **** valve_transmit( &subcommand, sizeof( subcommand ), VALVE_TIMEOUT );
 1053              		.loc 1 679 1 is_stmt 1 view .LVU314
 1054 0054 0A22     		movs	r2, #10
 1055 0056 0121     		movs	r1, #1
 1056 0058 0DF10500 		add	r0, sp, #5
 1057              	.LVL98:
 679:valve_control.c **** valve_transmit( &subcommand, sizeof( subcommand ), VALVE_TIMEOUT );
 1058              		.loc 1 679 1 is_stmt 0 view .LVU315
 1059 005c FFF7FEFF 		bl	valve_transmit
 1060              	.LVL99:
 680:valve_control.c **** valve_status = valve_receive( &main_valve_states, 
 1061              		.loc 1 680 1 is_stmt 1 view .LVU316
 1062 0060 0A22     		movs	r2, #10
 1063 0062 0121     		movs	r1, #1
 1064 0064 01A8     		add	r0, sp, #4
 1065 0066 FFF7FEFF 		bl	valve_transmit
 1066              	.LVL100:
 681:valve_control.c ****                               sizeof( main_valve_states ), 
 1067              		.loc 1 681 1 view .LVU317
 681:valve_control.c ****                               sizeof( main_valve_states ), 
 1068              		.loc 1 681 16 is_stmt 0 view .LVU318
 1069 006a 0A22     		movs	r2, #10
 1070 006c 0121     		movs	r1, #1
 1071 006e 0DF10600 		add	r0, sp, #6
 1072 0072 FFF7FEFF 		bl	valve_receive
 1073              	.LVL101:
 684:valve_control.c ****     {
 1074              		.loc 1 684 1 is_stmt 1 view .LVU319
 684:valve_control.c ****     {
 1075              		.loc 1 684 4 is_stmt 0 view .LVU320
 1076 0076 48B9     		cbnz	r0, .L73
 690:valve_control.c **** *valve_state_ptr |= main_valve_states;
 1077              		.loc 1 690 1 is_stmt 1 view .LVU321
 1078 0078 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccNSwPZ1.s 			page 34


 690:valve_control.c **** *valve_state_ptr |= main_valve_states;
 1079              		.loc 1 690 18 is_stmt 0 view .LVU322
 1080 007a 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 1081 007e 1343     		orrs	r3, r3, r2
 1082 0080 2370     		strb	r3, [r4]
 691:valve_control.c **** return VC_OK;
 1083              		.loc 1 691 1 is_stmt 1 view .LVU323
 691:valve_control.c **** return VC_OK;
 1084              		.loc 1 691 18 is_stmt 0 view .LVU324
 1085 0082 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 1086 0086 1343     		orrs	r3, r3, r2
 1087 0088 2370     		strb	r3, [r4]
 692:valve_control.c **** } /* vc_getstate */
 1088              		.loc 1 692 1 is_stmt 1 view .LVU325
 692:valve_control.c **** } /* vc_getstate */
 1089              		.loc 1 692 8 is_stmt 0 view .LVU326
 1090 008a DBE7     		b	.L71
 1091              	.L73:
 686:valve_control.c ****     }
 1092              		.loc 1 686 12 view .LVU327
 1093 008c 0120     		movs	r0, #1
 1094              	.LVL102:
 686:valve_control.c ****     }
 1095              		.loc 1 686 12 view .LVU328
 1096 008e D9E7     		b	.L71
 1097              		.cfi_endproc
 1098              	.LFE342:
 1100              		.text
 1101              	.Letext0:
 1102              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1103              		.file 3 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stddef.h"
 1104              		.file 4 "valve_control.h"
 1105              		.file 5 "../../../mod/solenoid/solenoid.h"
 1106              		.file 6 "../../../mod/valve/valve.h"
ARM GAS  /tmp/ccNSwPZ1.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 valve_control.c
     /tmp/ccNSwPZ1.s:20     .text.vc_open_solenoids:0000000000000000 $t
     /tmp/ccNSwPZ1.s:26     .text.vc_open_solenoids:0000000000000000 vc_open_solenoids
     /tmp/ccNSwPZ1.s:123    .text.vc_close_solenoids:0000000000000000 $t
     /tmp/ccNSwPZ1.s:129    .text.vc_close_solenoids:0000000000000000 vc_close_solenoids
     /tmp/ccNSwPZ1.s:226    .text.vc_reset_solenoids:0000000000000000 $t
     /tmp/ccNSwPZ1.s:232    .text.vc_reset_solenoids:0000000000000000 vc_reset_solenoids
     /tmp/ccNSwPZ1.s:285    .text.vc_open_main_valves:0000000000000000 $t
     /tmp/ccNSwPZ1.s:291    .text.vc_open_main_valves:0000000000000000 vc_open_main_valves
     /tmp/ccNSwPZ1.s:441    .text.vc_crack_main_valves:0000000000000000 $t
     /tmp/ccNSwPZ1.s:447    .text.vc_crack_main_valves:0000000000000000 vc_crack_main_valves
     /tmp/ccNSwPZ1.s:595    .text.vc_close_main_valves:0000000000000000 $t
     /tmp/ccNSwPZ1.s:601    .text.vc_close_main_valves:0000000000000000 vc_close_main_valves
     /tmp/ccNSwPZ1.s:751    .text.vc_calibrate_main_valves:0000000000000000 $t
     /tmp/ccNSwPZ1.s:757    .text.vc_calibrate_main_valves:0000000000000000 vc_calibrate_main_valves
     /tmp/ccNSwPZ1.s:810    .text.vc_enable_main_valves:0000000000000000 $t
     /tmp/ccNSwPZ1.s:816    .text.vc_enable_main_valves:0000000000000000 vc_enable_main_valves
     /tmp/ccNSwPZ1.s:869    .text.vc_connect:0000000000000000 $t
     /tmp/ccNSwPZ1.s:875    .text.vc_connect:0000000000000000 vc_connect
     /tmp/ccNSwPZ1.s:958    .text.vc_getstate:0000000000000000 $t
     /tmp/ccNSwPZ1.s:964    .text.vc_getstate:0000000000000000 vc_getstate

UNDEFINED SYMBOLS
valve_transmit
valve_receive
